(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    844829,      16096]
NotebookOptionsPosition[    843023,      16035]
NotebookOutlinePosition[    843399,      16051]
CellTagsIndexPosition[    843356,      16048]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"legendoptions", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Bold", ",", 
        RowBox[{"GrayLevel", "[", "0.3", "]"}], ",", "14"}], "}"}]}], ",", 
     RowBox[{"LegendMarkerSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"15", ",", "10"}], "}"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.667776896373009*^9, 3.66777689638963*^9}, {
   3.6677769418841295`*^9, 3.6677769999852285`*^9}, {3.6677771886884336`*^9, 
   3.6677772223463745`*^9}, {3.6677773173738747`*^9, 3.6677773255018587`*^9}, 
   3.6677774051038604`*^9, 3.6677844588554688`*^9}],

Cell[CellGroupData[{

Cell["C\[IAcute]rculo", "Subsubsection",
 CellChangeTimes->{{3.6677789201070232`*^9, 3.6677789224200487`*^9}}],

Cell["Circulo do porta-amostras", "Text",
 CellChangeTimes->{{3.6677796261052923`*^9, 3.667779654252759*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", " ", ":=", 
   RowBox[{"1.27", "*", "4"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"upcircle", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"r", "^", "2"}], "-", 
    RowBox[{"x", "^", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lowcircle", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"-", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"r", "^", "2"}], "-", 
     RowBox[{"x", "^", "2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"gcircleup", " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"upcircle", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "r"}], ",", "r"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Black", "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Porta-Alvos\>\"", "}"}], ",", "legendoptions"}], 
        "]"}], ",", "Above"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gcirclelow", " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"lowcircle", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "r"}], ",", "r"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Black", "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6677789348885217`*^9, 3.6677789386963444`*^9}, {
  3.667779662543048*^9, 3.6677796704421506`*^9}, {3.6677818212112236`*^9, 
  3.6677818366122665`*^9}, {3.6677819587444253`*^9, 3.6677819621741*^9}, {
  3.667784857605053*^9, 3.6677848706427364`*^9}}],

Cell["Circulo da pos 2", "Text",
 CellChangeTimes->{{3.6677796788945932`*^9, 3.6677796840749655`*^9}}],

Cell[BoxData[{
 RowBox[{"r2", " ", ":=", " ", "2.54"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"upcircle2", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"r2", "^", "2"}], "-", 
    RowBox[{"x", "^", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lowcircle2", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"-", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"r2", "^", "2"}], "-", 
     RowBox[{"x", "^", "2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"gcircleup2", " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"upcircle2", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "r2"}], ",", "r2"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<r = 2.54cm\>\"", "}"}], ",", "legendoptions"}], 
        "]"}], ",", "Above"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gcirclelow2", " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"lowcircle2", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "r2"}], ",", "r2"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", "Dashed", ",", "Thick"}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6677796997118897`*^9, 3.6677797456383667`*^9}, {
   3.6677798699616995`*^9, 3.6677798743902884`*^9}, 3.667780100935125*^9, {
   3.667784526931053*^9, 3.6677845430893755`*^9}}],

Cell["Circulo da pos 3", "Text",
 CellChangeTimes->{{3.667779759148957*^9, 3.667779763395729*^9}}],

Cell[BoxData[{
 RowBox[{"r3", ":=", " ", "3.81"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"upcircle3", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"r3", "^", "2"}], "-", 
    RowBox[{"x", "^", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lowcircle3", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"-", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"r3", "^", "2"}], "-", 
     RowBox[{"x", "^", "2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"gcircleup3", " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"upcircle3", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "r3"}], ",", "r3"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Brown", ",", "Dashed", ",", "Thick"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"LineLegend", "[", 
        RowBox[{
         RowBox[{"{", "\"\<r = 3.81cm\>\"", "}"}], ",", "legendoptions"}], 
        "]"}], ",", "Above"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gcirclelow3", " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"lowcircle3", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "r3"}], ",", "r3"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Brown", ",", "Dashed", ",", "Thick"}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.6677797699388742`*^9, 3.667779799176614*^9}, 
   3.667780095595409*^9, {3.667780944560609*^9, 3.6677809580485773`*^9}, {
   3.6677810167090845`*^9, 3.6677810202180057`*^9}, {3.667781071105023*^9, 
   3.66778107476236*^9}, {3.667781129005476*^9, 3.6677811322263155`*^9}, {
   3.6677813299362736`*^9, 3.667781342906749*^9}, {3.6677845605302086`*^9, 
   3.6677845668096666`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalAHat]ngulos", "Subsubsection",
 CellChangeTimes->{{3.6677789965883846`*^9, 3.6677790094255576`*^9}}],

Cell[BoxData[{
 RowBox[{"a1u", " ", ":=", " ", 
  RowBox[{"10.8", "*", 
   RowBox[{"Pi", "/", "180"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"a1l", " ", ":=", " ", 
  RowBox[{
   RowBox[{"-", "9.4"}], "*", 
   RowBox[{"Pi", "/", "180"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a1ureta", "[", "x_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "a1u", "]"}], "*", "x"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"intersecta1u", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a1ureta", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"r2", "^", "2"}], "-", 
       RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xia1u", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersecta1u"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ga1u", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a1ureta", "[", "u", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "xia1u"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Orange", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a1lreta", "[", "x_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "a1l", "]"}], "*", "x"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"intersecta1l", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a1lreta", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r2", "^", "2"}], "-", 
        RowBox[{"x", "^", "2"}]}], "]"}]}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xia1l", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersecta1l"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ga1l", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a1lreta", "[", "u", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "xia1l"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Orange", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"a2u", " ", ":=", " ", 
  RowBox[{"36.7", "*", 
   RowBox[{"Pi", "/", "180"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"a2l", " ", ":=", " ", 
  RowBox[{
   RowBox[{"-", "38.9"}], "*", 
   RowBox[{"Pi", "/", "180"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a2ureta", "[", "x_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "a2u", "]"}], "*", "x"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"intersecta2u", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a2ureta", "[", "x", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"r3", "^", "2"}], "-", 
       RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xia2u", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersecta2u"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ga2u", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a2ureta", "[", "u", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "xia2u"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Brown", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a2lreta", "[", "x_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "a2l", "]"}], "*", "x"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"intersecta2l", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a2lreta", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r3", "^", "2"}], "-", 
        RowBox[{"x", "^", "2"}]}], "]"}]}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xia2l", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersecta2l"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ga2l", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a2lreta", "[", "u", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "xia2l"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Brown", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"a3u", " ", ":=", " ", 
  RowBox[{"170.6", "*", 
   RowBox[{"Pi", "/", "180"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"a3l", " ", ":=", " ", 
  RowBox[{"192.8", "*", 
   RowBox[{"Pi", "/", "180"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a3ureta", "[", "x_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "a3u", "]"}], "*", "x"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"intersecta3u", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a3ureta", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"r2", "^", "2"}], "-", 
       RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xia3u", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersecta3u"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ga3u", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a3ureta", "[", "u", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "xia3u"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Orange", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a3lreta", "[", "x_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "a3l", "]"}], "*", "x"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"intersecta3l", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a3lreta", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r2", "^", "2"}], "-", 
        RowBox[{"x", "^", "2"}]}], "]"}]}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xia3l", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersecta3l"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ga3l", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a3lreta", "[", "u", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "xia3l"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Orange", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"a4u", " ", ":=", " ", 
  RowBox[{"141.7", "*", 
   RowBox[{"Pi", "/", "180"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"a4l", " ", ":=", " ", 
  RowBox[{"218.5", "*", 
   RowBox[{"Pi", "/", "180"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a4ureta", "[", "x_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "a4u", "]"}], "*", "x"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"intersecta4u", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a4ureta", "[", "x", "]"}], " ", "\[Equal]", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"r3", "^", "2"}], "-", 
       RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xia4u", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersecta4u"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ga4u", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a4ureta", "[", "u", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "xia4u"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Brown", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a4lreta", "[", "x_", "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "a4l", "]"}], "*", "x"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"intersecta4l", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"a4lreta", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r3", "^", "2"}], "-", 
        RowBox[{"x", "^", "2"}]}], "]"}]}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xia4l", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersecta4l"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ga4l", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"a4lreta", "[", "u", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "xia4l"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Brown", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.667779018877122*^9, 3.667779120939206*^9}, {
   3.6677791842542315`*^9, 3.6677793342555876`*^9}, {3.6677794270153484`*^9, 
   3.667779448001379*^9}, {3.667780010091878*^9, 3.6677800206248045`*^9}, {
   3.6677800643859277`*^9, 3.6677800902251997`*^9}, {3.667780242430414*^9, 
   3.66778026810858*^9}, {3.667780309485607*^9, 3.667780333487013*^9}, {
   3.667780367248545*^9, 3.6677803680443354`*^9}, {3.667780448126686*^9, 
   3.6677804510174885`*^9}, {3.667780481639287*^9, 3.6677805633826723`*^9}, {
   3.6677806049043117`*^9, 3.6677807129201894`*^9}, {3.6677808425488777`*^9, 
   3.6677808456181617`*^9}, {3.6677813706785707`*^9, 3.66778147484966*^9}, {
   3.6677815299544973`*^9, 3.6677816068464437`*^9}, {3.6677816697472105`*^9, 
   3.667781670340622*^9}, 3.6677817758003674`*^9, {3.66778297756285*^9, 
   3.667783039214817*^9}, {3.667783075072831*^9, 3.6677832259471164`*^9}, {
   3.6677851556690025`*^9, 3.667785156849981*^9}, {3.667817146580927*^9, 
   3.6678172059834704`*^9}, {3.667819034802924*^9, 3.667819046371976*^9}, {
   3.6680034868844995`*^9, 3.668003552039857*^9}, {3.6680063623099613`*^9, 
   3.668006395455974*^9}, {3.668006488631366*^9, 3.668006505438881*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Retas que delimitam a \[AAcute]rea n\[ATilde]o detect\[AAcute]vel", \
"Subsubsection",
 CellChangeTimes->{{3.667778948560483*^9, 3.6677789497756615`*^9}, {
  3.667781917638633*^9, 3.667781926243409*^9}}],

Cell[BoxData[{
 RowBox[{"m", ":=", "3.21748"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", " ", ":=", 
   RowBox[{"-", "7.5517"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reta1", "[", "x_", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"m", "*", "x"}], "+", "b"}]}], "\[IndentingNewLine]", 
 RowBox[{"intersectr1", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"reta1", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"r", "^", "2"}], "-", 
       RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xr1", " ", ":=", " ", 
   RowBox[{"First", "[", 
    RowBox[{"x", "/.", "intersectr1"}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"m2", ":=", 
  RowBox[{"-", "4.3067"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b2", " ", ":=", "10.3773"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reta2", "[", "x_", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"m2", "*", "x"}], "+", "b2"}]}], "\[IndentingNewLine]", 
 RowBox[{"intersectr2", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"reta2", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r", "^", "2"}], "-", 
        RowBox[{"x", "^", "2"}]}], "]"}]}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xr2", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersectr2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"intersectreta", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"reta1", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"reta2", "[", "x", "]"}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xretas", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersectreta"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"g1", ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"reta1", "[", "u", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", "xretas", ",", "xr1"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"reta2", "[", "u", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "xretas", ",", "xr2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"m3", ":=", 
  RowBox[{"-", "4.02085"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b3", " ", ":=", 
   RowBox[{"-", "9.66096"}]}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reta3", "[", "x_", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"m3", "*", "x"}], "+", "b3"}]}], "\[IndentingNewLine]", 
 RowBox[{"intersectr3", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"reta3", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"r", "^", "2"}], "-", 
       RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xr3", " ", ":=", " ", 
   RowBox[{"First", "[", 
    RowBox[{"x", "/.", "intersectr3"}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"m4", ":=", "3.58328"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b4", ":=", "8.31262"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"reta4", "[", "x_", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"m4", "*", "x"}], "+", "b4"}]}], "\[IndentingNewLine]", 
 RowBox[{"intersectr4", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"reta4", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"-", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r", "^", "2"}], "-", 
        RowBox[{"x", "^", "2"}]}], "]"}]}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xr4", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersectr4"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"intersectreta2", " ", ":=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"reta3", "[", "x", "]"}], " ", "==", " ", 
     RowBox[{"reta4", "[", "x", "]"}]}], ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xretas2", " ", ":=", " ", 
  RowBox[{"First", "[", 
   RowBox[{"x", "/.", "intersectreta2"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"g3", ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"reta3", "[", "u", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", "xr3", ",", "xretas2"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g4", ":=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"reta4", "[", "u", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "xr4", ",", "xretas2"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.667779344473361*^9, 3.667779354088181*^9}, {
   3.667779889354463*^9, 3.667779902576167*^9}, {3.667779980708832*^9, 
   3.667779999059601*^9}, {3.667780276879783*^9, 3.667780278260174*^9}, {
   3.667780343383353*^9, 3.6677803475704594`*^9}, {3.667780381351623*^9, 
   3.66778038230188*^9}, {3.6677804343022013`*^9, 3.667780438207781*^9}, {
   3.667780585629381*^9, 3.667780613042095*^9}, {3.6677806921920176`*^9, 
   3.667780722226319*^9}, 3.6677809684767885`*^9, {3.667781292122876*^9, 
   3.667781318802765*^9}, {3.667781498674081*^9, 3.667781506289383*^9}, {
   3.6677818540675745`*^9, 3.667781857766827*^9}, {3.667781976298368*^9, 
   3.6677821767992*^9}, 3.667782225614172*^9, {3.6677822860777164`*^9, 
   3.6677823193295803`*^9}, {3.6677825294711514`*^9, 
   3.6677827395126266`*^9}, {3.6677827764379044`*^9, 
   3.6677828041630845`*^9}, {3.6677828408732758`*^9, 
   3.6677828721793394`*^9}, {3.667783264469125*^9, 3.667783290240356*^9}, {
   3.667783321437011*^9, 3.6677833436594105`*^9}, {3.667783378915934*^9, 
   3.667783385699569*^9}, {3.66778346556892*^9, 3.6677834798013296`*^9}, {
   3.6677835120836463`*^9, 3.667783590100843*^9}, {3.667783730752932*^9, 
   3.667783772819248*^9}, {3.667783954965666*^9, 3.667784007423998*^9}, {
   3.6677841501076264`*^9, 3.667784174671668*^9}, {3.667784231051011*^9, 
   3.667784249194647*^9}, {3.667784335456884*^9, 3.6677843362331295`*^9}, {
   3.667784367820105*^9, 3.667784383348626*^9}, {3.6677844862360497`*^9, 
   3.667784497755268*^9}, {3.667784621357029*^9, 3.6677846225198402`*^9}, {
   3.6677851764855056`*^9, 3.6677851781599865`*^9}, {3.6677852107971535`*^9, 
   3.6677853264964075`*^9}, {3.667785413394187*^9, 3.6677854159566903`*^9}, {
   3.6677854684920483`*^9, 3.667785499469458*^9}, {3.667785554594758*^9, 
   3.6677855560882874`*^9}, 3.667785591358296*^9, {3.6677856532105684`*^9, 
   3.6677856892827396`*^9}, {3.66778581150309*^9, 3.667785844974084*^9}, {
   3.6677858795175424`*^9, 3.6677859234151525`*^9}, 3.667785968490966*^9, 
   3.6677860050499935`*^9, {3.667786325885711*^9, 3.6677863562291927`*^9}, 
   3.667786393538096*^9, {3.6678174348242207`*^9, 3.6678174698917265`*^9}, {
   3.6678179720817804`*^9, 3.667818000925811*^9}, {3.6678180470757456`*^9, 
   3.6678180551379147`*^9}, {3.667818839986701*^9, 3.6678188763115234`*^9}, 
   3.6678189117473717`*^9, {3.667818979941066*^9, 3.6678189825419264`*^9}, {
   3.667819061776286*^9, 3.6678190689304748`*^9}, {3.667819122138544*^9, 
   3.6678191623975515`*^9}, {3.6678193250246763`*^9, 3.667819375957815*^9}, {
   3.66800593329626*^9, 3.668006053841341*^9}, {3.6680065964216437`*^9, 
   3.668006597345502*^9}, {3.6680066843799653`*^9, 3.668006705714774*^9}, {
   3.6680069452788763`*^9, 3.668006945889846*^9}, {3.6680072135388107`*^9, 
   3.668007470832384*^9}, {3.6680075386263986`*^9, 3.668007539460332*^9}, {
   3.6680076022806873`*^9, 3.6680076024175787`*^9}, {3.6680078984876947`*^9, 
   3.6680079163461304`*^9}, {3.6680082908914366`*^9, 
   3.6680082909872427`*^9}, {3.6680084311865983`*^9, 3.6680084657453775`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Desenhar a vermelho as fronteiras do circulo do porta/amostras n\\ao \
detectaveis\
\>", "Subsubsection",
 CellChangeTimes->{{3.6680085470816755`*^9, 3.6680085799167776`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"upcircledet", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"r", "^", "2"}], "-", 
    RowBox[{"x", "^", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lowcircledet", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"-", 
   RowBox[{"Sqrt", "[", 
    RowBox[{
     RowBox[{"r", "^", "2"}], "-", 
     RowBox[{"x", "^", "2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"gcircleupdet", " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"upcircledet", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xr1", ",", "r"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gcirclelowdet", " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"lowcircledet", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xr2", ",", "r"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gcircleupdet2", " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"upcircledet", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "r"}], ",", "xr3"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"gcirclelowdet2", " ", ":=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"lowcircledet", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "r"}], ",", "xr4"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Red", "}"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.668008589612919*^9, 3.668008800184518*^9}, {
  3.668008833471402*^9, 3.6680088740191565`*^9}, {3.668284875750716*^9, 
  3.668284900835241*^9}, {3.668284973249011*^9, 3.6682849770333614`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"shaded1", " ", ":=", " ", 
    RowBox[{"RegionPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "<", 
        RowBox[{"reta1", "[", "x", "]"}]}], "&&", " ", 
       RowBox[{"y", ">", 
        RowBox[{"reta2", "[", "x", "]"}]}], " ", "&&", " ", 
       RowBox[{"y", "<", 
        RowBox[{"upcircle", "[", "x", "]"}]}], " ", "&&", " ", 
       RowBox[{"y", ">", 
        RowBox[{"lowcircle", "[", "x", "]"}]}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "r"}], ",", "r"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "r"}], ",", "r"}], "}"}], ",", 
      RowBox[{"BoundaryStyle", "\[Rule]", 
       RowBox[{"{", "LightRed", "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "LightRed", "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"LineLegend", "[", 
          RowBox[{
           RowBox[{
           "{", "\"\<\[CapitalAAcute]rea n\[ATilde]o detect\[AAcute]vel \
estimada\>\"", "}"}], ",", "legendoptions"}], "]"}], ",", "Above"}], 
        "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"shaded2", " ", ":=", " ", 
    RowBox[{"RegionPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "<", 
        RowBox[{"reta3", "[", "x", "]"}]}], "&&", " ", 
       RowBox[{"y", ">", 
        RowBox[{"reta4", "[", "x", "]"}]}], " ", "&&", " ", 
       RowBox[{"y", "<", 
        RowBox[{"upcircle", "[", "x", "]"}]}], " ", "&&", " ", 
       RowBox[{"y", ">", 
        RowBox[{"lowcircle", "[", "x", "]"}]}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "r"}], ",", "r"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "r"}], ",", "r"}], "}"}], ",", 
      RowBox[{"BoundaryStyle", "\[Rule]", 
       RowBox[{"{", "LightRed", "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "LightRed", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
    "gcircleup", ",", "gcirclelow", ",", "shaded1", ",", "shaded2", ",", 
     "gcircleup2", ",", "gcirclelow2", ",", "gcircleup3", ",", "gcirclelow3", 
     ",", "ga1u", ",", "ga1l", ",", "ga2u", ",", "ga2l", ",", "ga3u", ",", 
     "ga3l", ",", "ga4u", ",", "ga4l", ",", "g1", ",", "g2", ",", "g3", ",", 
     "g4", ",", "gcircleupdet", ",", "gcircleupdet2", ",", "gcirclelowdet", 
     ",", "gcirclelowdet2", ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.015", "]"}], ",", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"xia1u", ",", 
           RowBox[{"reta1", "[", "xia1u", "]"}]}], "}"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.015", "]"}], ",", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"xia2u", ",", 
           RowBox[{"reta1", "[", "xia2u", "]"}]}], "}"}], "]"}]}], "}"}], 
      "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "r"}], ",", "r"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "r"}], ",", "r"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], "\[IndentingNewLine]", 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<area_detetavel.pdf\>\"", ",", "%"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQHfwkLu988GtHxyyWBhDdkVrYAqIzghq6QfQPy/YJ
IHrT2+uTQPSbfb9ng2ilZb3zQPQLrWdLQPQjP8GlIPrY1LkNF4C0k11KB4gO
KxecAKLbb0ROBNGrRCtmgugJrS2zQDTDaY2lIDrWfgGY/mdVsRpEZ+yacxBE
v1qafQFMXwm9DKLDP7DUXgbSnz55gGmFxVs7QTSnpUAfiD52uHw+iL60mmkl
mM/ttRtEa9gu3w+i7ZauvQSi1810uQ6mO+4+AtGyzM8eg+gfri0vQLRN5q1X
IHrS95oVWiGvHd22nFwFojf8q5uvDaT9J3EsAtGS9qe/g+ifchW/QDQAA526
/w==
  "]],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
+H/WvD2U
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         GrayLevel[0]], 
        LineBox[CompressedData["
1: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
4P8BgjrulA==
         "]]}}}, 
     GraphicsComplexBox[CompressedData["
1:eJxlWHtczmcbf+o59DxPOj9TCTNhWBNp0bT9rhZKkrJep2FKzKFNvGWodUAH
oXJYai8Wy+sQ1vbSiL2/Xyk6bChmoxyqlcRSKyLk5bnf7/18Pnn+uT/f33Vd
932d7+t+3gpZPm2hsUwmW2Ikk71aYyTzhKUXTCmarRJwn6CM8IlJJlJ4xlm/
81pLjkE/eaffnIEk53TgvoyPjjzyTXvW9lwEPzD4gff+8mL6rBHWHEO+qd/s
RccXPOTywJAHhjww5H1Sqtb+cfgulweGPDDkgSEf90NtYHrfSi4PDHlgyAND
Pp1hAfLAkAeGPDDkA5g+XB4Y8sCQB4b8feYPLg8MeWDIA0M+j8WDywNDHhjy
PfkLWD4Q+IFBxzmgA4OOdYreLg1NZqv0vf4cM45Bv6vXXykl6/1oxTHoSfrv
RpwOjHOBT+n1tCFfvdwT8R7bhxL19DYRdGDQN+hxLacDgy7T/yQP0IFB38z4
BdB74hR2Hsf+TD8B9m1k+nN/YV/YCzriBQw6+OFf7IMV9Q+Meoc8MPbv6U/U
J85BvYEODDrqCXRg0FEvoAODjnoAvSdGvsMe5CfsAV60vzV27xkt7ah2Shl9
u5ekE8OvROy3on16O43JdfnxSIssNWUzzOnAoIMfeY39gDMYpgkPj9xUldnQ
YX0c/hKBx+v1vCZWGnsE3wvU8fwBPVOvd6EA3KK3r0HoWUegNzI63381k+c4
iJ3H9/uR6SPAH7ALeuM7MM5FPoGO76hffA9lK8e4j3A+8gMY+QCM+AMj3rAb
9Yx6B1a4r172VaSK7PXfO0Xwo97ADwz+0/r8aOf7ox7BDww/GTM5ng+X9HFU
SFVs5fEFRjyAEV9gxAf6ID7A/Zg9XD/4F/HpieFvxAt06Iv6xvnwPzD8j/PQ
H+EPYOj3E/Mf9zfuD5zH7gUZzx/UNfIHGPmCfcGPc0utluwokVvwfAUd9wNw
z3kH9GffTbuYu92Sxw/9AfmDfgf87vXUax/8ZE1Rej2fiuBHPoAfGPyxjJ/f
r7AP58M+2Au/w3+Yn2Anzgcd/Q505Af848K+S8CwF/Lo35DvGT/cV8CoP/Aj
P+Fv3D/A6LfIR9g3dmvWp9H1Vq/Nlxm2aR9P9jOWkrfVvxNWqHptnvR3tIu3
GGIsHXwwMsfunJLr/9HJ7h92Weh4P7EZaVf3ha+O5zP6a/LRVziY05HfkId9
A2aWRx5wUHH/dj9xPlO3wjA/Qd/Z8+jc+PRuAfbA3j4ba7a12Gp5vha1jPFW
hRnmH+RDnc3Ma4WtavLIyzhwvVFFYR/6vnXF5YWovek1PECuo8S87S4/vnlf
VO39+nnDJB2NvuC9uXFXJdc/PyHn09KcS8J7553OetjrKPzozJQFDXeEdUFN
P98NeTl3dbYM8zr0XLgRb2/k3m1FrtMC82pvGVNA93w/B8GUr3saRtgO+VhD
XSNW3Uwx1kr9Swd9tNFBQ33ZKlmfDHpXWW5OxybX2NWu00oDbG6ZF7tZkX1t
0G2HTKU0YOv43XlkmLc8Y8ZMippgQ4v/HOvsIT0Rg87MORQ3SUknImoqOgPa
xMb9O9MsxylpbeGcHJ+KVjGwMebXReLLeSJ3oe0++3axPVNutDdKQaEl4+7c
OPOnOCTryIGVSxS0p3in305lg9Dlu4UWfaGksBlRu51M2oSUUbUhR8NVZLWg
OL4xvVO4+t3lPnMn21BN1tPYv756ItQG11v/N0BDsQ+XdmdplNSvd15UQpSG
HLZFLzTZruTzUwDLLyreM7RufphhnqqzNbban2RFYwPtm1K2KGhe2y8/58Zq
ycPxjzHKq2oyzy84fCXWgtct4pytOld7PNuM15tv4Y9v/pBgKu1j31/rz9Z3
OneGrjGVFLlhBWmi+rX+dZvli4TzcN/mTvKKWJVueM+hP2n/c6U4sEkpwR7E
Z8OR+aa29Yb3GeanEcviwo8puvg8pp2gi8p2+Vuk/FDnsBIFry9g1Av477mv
KE272Cpgf9QL9ndh+wtdWrOyCDs19+8/lNFvlBSpef3AX7ueW0VkD1cR7EM9
wb5ezD6CP3vOJzrmT/p7jbI6eoCW1CZ2zjOjzaS5w70bjueY0ub56x9MLDWT
sgd4FX5apKFL02Mr2hpMJeMxN5v83jGhsB3DyjMkGc//PJb/9Kw65verp3tR
F1ul4U7u316baUmpsfFvLHNUS4dCVrp6nTChd655Zg62lkuoPxdWf1L1yAPy
jmPWtCOpyfOzjhdif4tczYJ91pTmtOl+tKtMmhok2NpFvpxnHj32nNW7WwB/
JuMXwL+V8ZO6qc+dJ6vVdOHjrIYv/I3JcvemZpNP1BTTdbUisNWIoF860496
JxzcsmW9KTU+jYj2tu/F7cEaWnNp0NqdvV6bZ9W/yBP6m5nR2BmVdl8XGuZb
8APP2eVhvWWi4b2FevyD1aOY+ezF5LJEG5q/om5wQMwj0clGY+RdY3h/OU9d
ej+z1YZelLz3fPOIB2LTROdJ61x1/P3lZH1GHDFGR7Oc6ibkTrxt6O8n9P1d
AD/ur41zd2uKR+qoovqqecXgOgHnYf5D/7nP+o+Q2p5gP7LAhna1nAr/Kqpd
gD2439Hfwlh/E9SzLdx6ndXyvF2cbJvcJjOl0KKyLwNXawn7ZbL9RPTrxaxf
i9DvLNOP9/d/s/7O+78X6/8C7A9m9gu4L1LZfSHAfybn9P4T4O9Q5m/hxuWi
JnMfLeXuTrwZPUhNqawOCHXRM64uU5eYX84053NKqXOfNZWnNCRzOJ+4QjSV
vhxUn5l3WsP72eEZ/m7x3xjeh8C4T1OH5Qx1nWB4z6O/urH+KvnMLQ9fvtuK
3IUHWbc9FdISP0+fek8Vz6dmB6l+vb2K/FNVce7CY3HQ6GGZ799S0ic+j8uk
2Y/EkUk7qzaGK3l8q8blJ3esUtLsv7IyLL3ahGOfta8906KkxSlvf5AzpUOw
HPbcruScisc3zv6KTV67ija8mO6qrOri+qLP4f5zYPcf5Z+v6mgQDP9nRJ+2
a3ZtVlPzwACjZm+1FKDXU83tVSdW1Axcr6YRA4MVSzeppPwtppuLI9W0YcbF
eJdpKinl+8pdNy6a0BCvWcmnkuXS5SNzM1oc1DSqZBv1uqiQ/vWs2CU5QUUH
vQ/axLU8FXWLcic4x6lo3qKDl1SnnoodVeVLiiYY/t/oW98S4lenoHWRscmr
8+6JRb+pk9y9FbyeQqassXx/h4IG+0x1fBDWKD61nj87skVOG0zbvYamXRXL
/e2+fahTUNLw1k2J26rF1QWe1Xu85fy9mtj4dsTYo3LyWuXoKH5WIZbrAt2u
+Mqp2eGVvZHicmXl7+kL5VSTtLVpbN3F/9eTnPxSX/lriZD8lkf/lX0VvF4r
SyMelyXJaXJBpuuvsy4LK6Mnft73rpwCfo7pE9BWI4xvt55zNUZB+bdOBM63
bRQsh/vOvrFMRW5u7/urIjqFoScPPbgUZvi/5LeBic3BXS/9p6+Ll3pZTM05
NMua+o2Nuz/yn0aEfBvH8o2u6/uU4X2F+viE1Qd/X4Ww+pBQHz3fV+H3s927
m1RS1dHDv6sKTfi8a3lqn1/9OTmfTzMDNFFBK+R8HoV8aO+sZcGnjGlRV7wm
cYoJfWj66GTAdCMJ+jsw/aXStkP52/KUNGpVQUlnWYdoKRvq1vnQhHYoAzbf
Oiqj9PzgAq9uDV1/22RU9WgT2iN7PMuxyIK087zGfT5DQ8Hfzah2K7ekC2PW
rd9ep5LMY6vrC59ZkyzI89jaP5+Jxgu+SVtwT0GtkZW/OWy+J4CuYHQB8peY
PN9fzfaX/geKlGCZ
      "], {{{
         EdgeForm[], 
         Directive[
          AbsoluteThickness[1.6], 
          Opacity[1], 
          RGBColor[1, 0.85, 0.85]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlmeM0EUQxXepR8cDjgMpd5RDOiK9cxRBwEN6kaqiqIiCKPYOCKiAoCCo
VBXbRzW2aGxYo2LvvcXeYmJ9z/mR3IeXmf/+d2dn35Td0oVLJ51RJaV0bE6p
quRi4RShs1AgVBOqC12FKnzvFjYJG4QWQlOhWJgmjBZ6CHWFmtjYImwWaglr
hNXCUcIqoY7QQOiOba9pyLhtHIasJ/QW6guFQmPWeW4TpOf25X8RfllvJCzF
dh18bYSNfcw7nLH62F0gHC/0E/pjr7nQjHVNmNuIPRow7u8S7JmbrcKNQinw
WEthhdBaaCssY76/BzNWJgwThgrthR3CemGIcJOwTuhArLoQm3bYKCE21Rh3
rLoRxyPhugZxKmD8TDiqDU914WozegF+F8OBY9qTuPSC+3rsWVCJ64ZwcyiW
/nb8V8HfHfjdoVIszeMxxLuQGDTjXyHxKoLrYr7PFUakyNN9xKqI/y3hfQC6
bS2H91ZwXwJ3jflfzJpS/g1E9/pziF8bYtuOOdtSxHsQ5yojlkM5Xzt8bcGe
64njEcIuYSOxbM1crz1JmCeUc77OxHR7ijwYLlzLf9vpA0/m+mZi7VgcTZwc
o1EpYl+dWFl3bU4VRrJmljCWNWOxa5uzhXF8n0+cXHPjkeZ8TIr6rs/cfvg0
R5jA94Ws6c/YAHifK1TwXQHv5nwivJbio+PsXFsrXJ2ibibBh7k+FtvOg/bE
wJxOYZ6/j2NdGbprbAjnN3c10EeyV2/O5nN1g8fq8DcaDj02jbFD3Jm3K4Xz
KvFlWQiP4+Dn9BR9x989iZnjdZVwQSW+xsNzP7gzbxdx5uaVuDNvZwgnVOJy
IhyeJszHvx2c3zy4P0zl3EuEhexxqjBZ0DXxf1+aAodD4dOc35qippy/Z6eo
MdeX++icSv4uxEfnrHP7CPyYDx/eZwZ7VeD/QOa6HjoJJ6OXIxcx7vpwT6wC
jwvY91LGM3Ix+iXoXjcLXuzLbOIxDt+X4PtcOK2As+kpcuiWFDnjHnq7cBtc
LIY773VWij5bm/nWnWN7WOd+6bwegf+3w6Fj6jvX/cF3tHPHueR8dO67F7lX
7EzRm8z5NSn6i7l1vjh/+vL/YuZcBi+HOLHeBXk5unN/JX45L65gzLV/Jb64
lq9iH9eGe7t7vnvAasb2otdGrkH3+S7ijCs4j/uqe5p7Y0fW7sGu/69lzp3C
fuYN5l9bfFyJn+bkVmyvw645cT37jnT9Xsd4R6S/y+HPPA6Bi43Exes2sfZ6
9KpIf7s3uBf47ixg3QbW1mW8HnIL+g3oXuf69L1SkqJnWW+P3Io+CL0UHuxr
GWPbmOOxHYxvYQ/3FfdI3x0dkNs5+zq+rbvWToQr56ZzuybSueu8XaTE+TJF
37GsyKE3keyUo9eMkhydI1/vEx4ndn8IH8HbcP1/LkW+vCSMz9HnXEOuAefG
WI2Nydw5kuNy5PQ8yU9S9F+/YSfkyMdBkgNzvAv8/y/mDNbYkBz58bXwD1zd
iy3PeV2YnKPP3S/8jc+TNPZtirp30eQc9V9HsmOOfn2P8DD8PCN0zpEPIyW/
SHF/dLPtHPX/POf32c3B5/AwNIct23lK6JejRznHdsPbMjjyW+I9YUaOun1T
aJsjfj8Lv6ToqWcSu6X41QXfbMc10op9nkyxl8d2Mr6ePHOOuA5dj3WwZd21
vBHfNqDvws9aslk7R+6twK7viH347/jO1f+7U9w/trcXmx/Do/10rftddegt
Zd31/pnwbAr7y8mZZcy3z2X4vZ+1d6B7fDV7+UwvCxNz9Mem+FeEj/vg+Tvh
YIqe8JtwAJ8PcAbrX6WoDdfCn8KnKeq6isYeSlFfz8KLfR4h+WKKft5IeuMc
992/KXJxmHnU2IMp7rg5btjkXoFkDWFmipprQ905Z11vztsijTXN0TN6S/bK
cQ90lbwrxZvFtp/A/nEaf5UzvsJ6r20mWZyjN7wl/J6iT3r/mvjwglA3x9vn
baF6jrv8gxQ173xwbb3GuXpI757jbnQNNaeOyiR/SnHP95HeN0ffqif5SIq7
2mfYSU49IEzJ8Rb5NUXeO+ffYL3X2sYPKfSp0t9Jcf9Pl/5uivvQPWMmfaNE
sjTH++N9oX+Ou9l1XJ555zqGOd47B+HOvDWQfDTFO+J7Yu+4F0o+luId4Zh8
k4Lbp4UPU9wzrTTeOsc76UehfY73zeGSLXK8k/4D4vpKWQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFdsyFEUh+9Vs/ZKzNJSo7RUlai2aLU1q6rUHm1tihB7j0Qk4qGJRPrk
mdiC2PPFKCL2DBJ7xIoRfL+c+/Dl/O74n/+9555zoovm5ZdWcs5NgcqwF7p6
5xZgI+E5TGW8HVsDHsAoxmux6+A4FDPehu0I5+Ao5EMBjGHtETYTlkAHxl+x
I2AW/II9kC2/8FZnYc8WbBrcCj7lqy98h3asT8dmQDd0IixEL4Ja6NowFt0d
DkOSt7UoqI9uABPRKfAUShiXYSPgGBQx3qqzwgn4BolQFf7A7xALnTmHvQNh
ObonDEHnwkp0L6iDrgvj0D3gBxR6ix3GHYLWiGJsKQxDXwvf5sJf+BfuHqtv
vMVIsSmE89CUuUnYOKji7R/yPRq+wL2gFfNqLER42ztGb46u7k1rLhJdE3IU
W6iHPo2dAOPD2z/ErneWAz9hLHMbsCP1H/QlbOewZ1d4Y71tFrRk/UDwpZxr
xLgx5KF7w1lIZrwYGwMtvMVQsZvs7CwHYW44k3QU60VhLhrd0JsvxbQt+hN2
GkyFNt7eWG9bAk0Y3wlaMdwHzb39azbsD2fWWedAK285pNzRP2O9xTAu/ONU
+EZ79eYng0/5Uk4OUC7ARmc5cybkgN5eOdmZtXhvsUqA9t5qRrUyU3mA7uMt
F+crT9AXsZ2c1dhQxuNhk7McVO2+CG+pGs5gfBmbpLPA/fAP+V4DzdBXnNWO
cuCl4s7c5vDNDPQHZ7VeDp9DjBVb1eTukBPKBdXMG82zvgObChXwyllur4In
uhfrO0POpKBTvfWKeOiCTvB2V/WkAvRtbD9nPSaG8Y3gWzn0MZyxPOwZ7K1G
VZsrnMVmkDetGHVHX8eudpZzuqt6oHqf7qxe8B6b7qwnqNfdddZ71PPUO56F
tyoLd33trFZ1Z/WyI85yWT3tps7N3PDg84Ji5S32ekPVUhosdVZT6m0VIVbq
ccqdLFjmLIfewQRvvUA+s9GZkOxsT7q3mCqW8pnnrSdGhTtfhf7eciE5vMVj
Z71Qb/If6omiNA==
            "]]}]}, {}, {}, {}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.85, 0.85]], 
         LineBox[CompressedData["
1:eJwt0udbjQEcx+FzrGzZ2UrZys5OoZIKUXZRod7kD0Mle++KZJQRKXs0kD3D
3cWL+/p8n99znVfPCc/dk1EUDAQC5wk1tmoZo+wDeoZ+dl9GMoJSt9P0sXtz
zR6uk+hFT3pwxf05O+1n+pNfPCXHrVh/sJdpnqcyhQrPT8i3H+s3Gin0/EjL
2Wg/1Cyt1w36Vbvqff3IBz4x0W0CD+xMvaTz9LLO1wbdpAtZxAKWsJjNfPd+
H9l2pX7mFPuJc1tKNDFMp8R9u77Qq8TbVZqgL3W5VusyTWQFW0hmJUmsIqXj
e5BGOqlc97vV+kp36Wu9wQx7JrM47HmN3tTZOif47/seoZ2j7HBr0WDHx2cb
rWaG1uhardU35NrHdZze0zAdxkX7BJ3tELrRnS5E0eZdpL7X8fpF68izT2on
fasF+k5jdS537fV6TC9wm3We7+gfftPEbrdmHapDuGVH6GQGM4iBhDOWQ96f
Y4DdnzGM5qDb2f///79Adl/C
          "]]}}}], 
     GraphicsComplexBox[CompressedData["
1:eJxlWHdYVNcSh23swkrbVQE1sRJFRDSIoJh7YwOs4GfDJ4oBSUQj2BXFGrEh
YgdDbKDGEh4xYkGTOzyxYgHFFlApUqIYEMQSUB/uye/sl83+c7/fTrkzc2bm
zNx2X0WOmiozMzPbaW5m9vG5hKxXR9ywIjwjd5wfdsnSlpxG74gavMaC/w8M
+umKNhPbi3JOB9577cPYIDd7OvZqyKbGF+8k8AODHxh6gSFf2WZC+InQei4P
DHlgyAND3m/9rej7R/7g8sCQB4Y8MOSX/1wcmNA6j8sDQx4Y8sCIAzD0JTAs
QB8w9AFDHzDkA5h9XB4Y8sCQB4Z8FYsPlweGPDDkgSGfzs6HywNDHhjypvyZ
LC4i+IFBb83kON0UL2VP8SeD3mY01OCfhtYa4mRHfxjsVfL/gUFfY3iaczow
/ANm56ejIQa+txJwrIH+QoJeYNC/M+BiTgcG3czwIx/gOEYXwP9Pupxj0MEP
+fXs/VweGPQRzH4B/q9j/onAz5iciHiAjvMDBt2Ufzh78vMABh168D74BTow
+Ezjj3oGRn3CX2DQ/1l/Ol4/4AcGHfUBOjDopvlvGj/kL/wxxcjfXJnPlGeB
Cko0yGUJPSNPzLNJUtN+g16ZGHagZtm+c5a0rcB1/edFWtJLUflzD9j9nZcy
Aj8w9JUb7CuTwG+qbwfTx+sH+oFN6bAb8njvwPpjj1RXdHTEcM7PJeCBBv4H
Up7BHj3PV9DhL/CfzF4BduA9pk/wwz/ghUwfx6PZ+7n+48w+AfloGlfTew75
Cno44+cY/QZxQNyhF/HCE/0C+Qws8144PWaeihYb9DVw7Gjge839QT8BRv8A
No0v+gHsMo0H+gHsQz+AfcCwpw2zh+fnLaZXbPvHWa3DtGZUc3yZLHaQFfcf
cUT+oZ7xftQnMOoT9QYM+5FPwKb+o36BUa94P+oP54/zhL2m2PQ+gV24j4Ab
U0bdPLrVlhAn1D/OF/0B2PX3+Af9Ttnz8wY/4g1+YPAvY/w8f9FvYQ8w7FEw
e7j96DcX7aZtuyC3IQ92jpyOcwcd54z34/yRL8hHyAEjDqcM8a6TwI98Az8w
+M8yfl7/eD8w9MA+yMFf5CP6M+xFvqA/IN6YJ5EfpucBf3AewIgH/AM/8hH8
wOBHvwI/6hX8wOA3tRf1DH5g8KO+wY/4gh8Y/OiHiA/qDfK43xAfxBP5gvsO
GPWF88F5QB/ua+gzjR/6Aeim8YJ9oJvGB/UPumk8TPsB/D/qP2Du/ATjPpMy
6YvuJW2N80l6ix2vvGot/rW/jOjgsMLGWUarjoVYtSy1/9e+8uSvzo71OeaU
HFaSXROk4P7hPlyb8dGuKcL9JYmZUrac2z8/4dNTp/MU3F7ox7wc8qYidoxc
zeMN+1HfC3WquE+aG+cL9IcS3fgHWTVq8a+CpffuntUSni6u3nsejLel+GUr
mk/voCa/FgMPb2+hpvLDOdtm3ZTT7+6H5C/T7Gnbmsovv375QXKYqQt48aOc
XN5FhPU4liNov1og3nhmQZcf+MTtKpCJtjbLvZ0OWFLlrB9yM19ryfb06G7K
q9aUNrTQoXilJQ2/+Hm4i6Thz3l3LD9JPqmhdsKue/o9Gt5fi5i9pD2ZeSR/
mQ2v/7a6x9bZnnbkWDy6qFWikkpayuwOrLEjz0DHyvUbFSTFJHhrL6lpnkvy
oeW+Ksre3bkkZIZxfheW9vZfPEhH3zzx6u5Db6W7Kbedgofq6H5Sw7LnMW+l
kO+CMuwjVeQ5Ls9he1aDVJvrXrG5QUk+HTstarP4jRRQvvR6uNQ0fx6d2nK/
Y53UZ9FJmUzbZIfhvF/w/S4m62M/2SAMi9R4FfQ1zuuQr2Lywo5Ou5qPHauk
MpqSftv8hQB7Cpk9AuydwewVHoWPLJrXW0Vhhjx4I8B/L+a/iPi0YvHh8/qZ
uYU5rwPMxfyn4xWzoo3ze9iM+eMTd2oonD1FnFc6Oy8xf8IvuaOiLcnZOcJ7
ZftmfB7cq7pYfGJvM0L921e83hm2yIpulNS8TQs03v+oP8tf8rMDK437V6C8
ZMu2hRo+z7tNXx6VpvhLmv1ZRmnv8cZ5/8i4EZ4rdhnn/T+3t+43Pk7JMe7h
13Y6x2D/lxLqCf0X8uhn4e8zrCuKlRxDvkuXUQUJ04z7UU9mj3G/ZvUuIp9M
530t809EvpruP3oWH3GLW8fNFc7G+aK1zVFN6H572uS6oWqJhxn9x8W37ESq
FcWFrKoefLkZTermdvjdVkuKD434ZdMpLT1c4Wju/d6Oeo4KTC9+LCOHjERv
5X0LyoxttTW0WkbH/JabFVaqaE2zBZF5bh+kwV9cGzK0vwUd/76l6/Z7ZhTb
zueT2a0VZJcSNDvJu1yaumHu0nO1cvISfQrelJdKzyouyl52k1PZf5Nay9Py
pLiQ765r2zbtYQubPyxtlStl368estJTTmfKPsZpjoT+kMj6gwB/NjN/xPlh
obb77SzozZ30kYMevhdSb3Q4ZDHfgvSukWsDrcxF+OPB/BHRjxJYP+L9qpE9
RVe3WwMGDrWkSWHWI+7O1IqIVzyLl/hVYW7H6J1aPjfs2njq0G8u8n99n9nP
8pfzY9/Z0fhh6JVYHYXMKukUsPSV5KrTmPsWGudv9aMBLgFyPcWmb+15/NMq
qfvIiKrEGh19uNDrXZxbtVQ5uLv/Sg89zz/Vvu3vyvz19PkN37jy5DzJ1f6c
5NZbT0GuJYOODi4y3gc/Ge4DSefuUDJziJ5Ork6dfDk1V4A+3Pe9Lrme93HU
U9RP49eHllUI64J/0GS76ymn4K51TqcSAfbivo+rW+3onqmj5D/PRMUsrhM8
S/v7jupmSVu+3n26ZmhTnv1NT2R0Cfq/Yfol6D/P9HP7DjL7uH8DmH8C/JvC
/BMQr3gWLwHxsrhoiJeAeIexeAvuI6dZ30605nsE+ozpnopzQ50EszwQwY/6
4vsk4xdnv39sFrFGzef32qI7Xa+PVJPtZqej3b5XUPrBvi7jahX8vOfWzsza
dElB/TJa2MZfrpZChi+y7bNNQdOvjbmVVVklRV3NO+jgr+Dnkzb9s+VtVilo
XvSxp892PxEOnjy5xGafgvo/H5g/cG+5UG/tOkY/wfg9ZvC0vun+wUrKdfr0
t6ldXghVygWaPnFqPs+nTt4Q9dcFNW3x2xe1xU8l+gdY2Z8qUlMrp5sWnX5V
iap2263lu43fW3yC9+x13quhiaeUY9ZnaMSL3Z0W5Z0x7qHxXVI7ewwyfg/z
C74aFfmDHXkL1UlFXyoo+qzDU4+nahqyuvDx/osqmpDsY79xsPF71yu/ul97
dVRxfK3x2wdBc1RU6dXh8M+3GqSJx4rHXt6lpJt9pvkW5tXz/WzYrJRMq9ha
qUegIvJKHzk9bffx/VOFRy8nbA59LqdzTlcbkmLvCpdHOOyp1ytop0vNhtgt
BcZ9jskLk4e53mxXraC5uevutY95JsA+7Eu1VoM250SoON5/fOWCNK2KJvke
Xftjxishdktp1xlZTXvanDKlX3ijsMl3dPfolKb7NGXsu6jZDQLig/gjPn1Z
fETnQd9MPhhjQTFkE+rubC6GRx0JfttVTSpFT/87T+Tir/2XbLo1Tk2+3ef6
dt6qEMeICdL7Hhqy232/a1sztYh8Rd/y2pw0eUmpcT/GfNr57oT8wvYK8vDK
z/X8TcXnS+w9ejrX+1JtgySefv9zso2ez5eoT/S7I/Xvux5JlVNUXWbHEv1j
Pp+0LL/jvD3vtuSl7NxDWiDn+zXkMY9CP+bRpY75uvQ6FZ9Hn9qMTD0c1LQf
ei2vcp9jLkYk1Gf3crXn35vgH+ZV+OfC/BNR79i/n/dLrXbRWtJDbT9bh2+t
+Pey2RMblEWVGvHaocKR80o0nH9KyrgCz6u2dKP3ylVbS1SUdPh61/wvNJTj
8b00pM6CYF8rZh81W1ZQmtXYtG+N/jIt+kmjdD43+cyKEAt66FGgHjPASFcw
ugD9uUy/mGz2JqjD/2zIctKAvt+O03CsZphaHKh7eWWVkuJtPvNf16FeeuMv
fhh+pam+L2z0WJH4Ugg/tF52S2X8nrUjQLN49Czjvvp/RPKCMw==
      "], {{{
         EdgeForm[], 
         Directive[
          AbsoluteThickness[1.6], 
          Opacity[1], 
          RGBColor[1, 0.85, 0.85]], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
Ov8i36juJ67Lrsnmsxdn+x+AydAp
            "]], 
           PolygonBox[CompressedData["
1:eJwtledvj2EUhs+hiE3snSoVq6iarRql1SqN2luoTRurtVq71KZGJCL9IPHF
/yJ2EGLECokRQYhw3Tnvh8u5n/f99Xmf54xb6qqK0vJGZrYGUiDLzSbDRvQe
GIeeCpvR+yAHnQ9b0DXQCl0NdegT8B7qWTcQte8XWMW6klilZ+iusAi9Al7B
IyiBBdCRdxfgOnoatNG34CC6LzyGc6yvEtPgCLo9zEEvgxboi3AD3Rq2omvh
NHouvIYnMA8Wwm/YzPsDFt9IQefCBu0NPdD3iYWwBJqwPgn16KHQDH0GLqMz
YSP6J3ECzIZerHtC82SPlehPxAzIh6dwnmfXiANhJ/ofcSrMhxdwB6bDdpjF
+xIPrT36odM8cqEcdEYPguXKE7RFX4KbyZn6o9NhCjodUtF9Ybz+Fv4mOVJu
9JvvSY1UG/3mJXTh9yOITZVz9DvVGHbAG52VZ+XEITAMPRAG6+4wGJ3hoXXG
GehOyqFqBXmqhXJs0XPTVHs4ZdFz2msmbLPY8yh6gEftVeO96ExYja6F/ega
j7vVJblUTZckOX0AvVkvJRZbfGs8rLP4ZhH6OZFgFfALrrC4RcyFbzCRdRFx
JIxRbmGTxUz9gA0es5IDd6E768UWOaxEF3rsfRjeJjlVLtWD+9CjoAx9zCI3
Y2GtRY7moud59Fq2eg5d6nGXLFikb3n0Up7F3z5MzqY9dFZ9Q3vrzH08Zlqz
rJwc87i8ZlE16uYxI5oNzXBjjzvo7OXJ3argqMUdK9QLHr12QN/1yJlytdti
Frfz7JDFTI5Ub3m8Uw13oVdAgcWefyxmWrM8yaL3mnrMknpwgkfOletSGM76
s8VsqkbFHj2nXlMPqbZDPLxIV93BPws9cqUzybu+6hwWHlbm4TGtk2ejPTxT
XqkaadbkWfIqzZy8qp1Hr8iz5E0tPWojj5LXPbOYfXmevPNDMjsNFt7QweOu
8ojjHjOu2T5r4UW3LbxWnlSn2nm8k4dke3i4vFs9vR49x6NXqi1y+9HCy5Rj
efE6j3fy5EkeM6VZ0v8J8rp7FrMvz9utu3t4e/NkNgo8cq8Z+Q82EKTV
            "]]}]}, {}, {}, {}, {}}, {{
         Directive[
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.85, 0.85]], 
         LineBox[CompressedData["
1:eJwl0/dXzXEYwPF7hTLLjKxCssnOCqGQUSJ7RMlMZhGZIXv/UX5AlJE9MrKy
EsKr44fXeT+f5/P93nPPPefGZOWlbwkGAoFrjDZkawVjzAdIYioJjGMsB5nG
dMaznu/emaCtSOYqP+w2ap1G6DnumXtpb9pymDYcIY6jlJDPL89u1d/aTs9T
ae6rD/WCtm/48hyjA7NIZTb9GMJgBhCkPx05TiknWMZS/vqonfpAl+hiFrGD
7dy3f04925z/aB+N5RANP2Qem/jpbrO25jLhZLKQWncb9K4u0Azmk8s67tg/
4ys5zt+0p8YwiGj2U8w+WtKD7pR7Nl3TmMcX5xZ6ieaspcYuSz/pGt1DIV3p
Rhhnue2+i97UJ8w1z+GdeZXe0FPalFfm5VqlV3QijenMC7tO2oiBPHKeqTPY
RQgpvLR/w0Xza33MdU46N+GteYVW60otYDdRlNmd1vcaqU/1FmfMoXwwr9aP
OlSbkchn52yNZzjD2MskJjOCUYykiCnB//+Tf+bUXL8=
          "]]}}}], {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Dashing[{Small, Small}], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
g/8HH6pTEg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Dashing[{Small, Small}], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
/wHLGQQh
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{Small, Small}], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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
aeE=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2], 
         Dashing[{Small, Small}], 
         Thickness[Large]], 
        LineBox[CompressedData["
1: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

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJwV0vk/1HkAx/Hha9lybDWSLcQoWR6OQVpS70+lyFFYdEhWUXSxqR5R2/JQ
D3epwWZLCBG2B+vowA6NMaKxmFwx31hXpdA0jpKx7Q+vx/MfeOkdCvEIlGcw
GK5f+9+eCHYJ2/v45hTpkO/rXvvNtitqrSKZOxEgO+u+h6WPrsoDsTuZ+/DH
1rx0E5Yl7ikaW5gyg1E5VF2jydqGJNNlMbrMcPAqGnersX5C1NMrpd8z4+B0
p0VzEeswLiRyd2gw03H1hvuviqwwnP/lwHV15n2UqHDMvmFFw1NDhaus9wTL
Sns6qEkO4rQMN38J4sFWtb2WmZmBB6x1yqnZz6C6Rc2h7moO5PyNx1PMW2EQ
ssNztrwA0rqLhk+8RZBWSB5aR/+J30JGAnxrO2E9q+lve6AUJ3+/1L105Utk
rxLqlL4tQ65bq7aerRhHnKtijF0rYWOcYdG1qx8LUglv7eAj8KdN0Tw4AGlh
QJG+axWiF/aMCkIHoTl6zPlTYQ0STZOSo1cPI2aXr986nVrYGmTePVE6glKz
u+MitzpY2ddUqAe+Bl+YcJRkPIVf5ukA/pK3mHjArb45yIMZT+FiTuYYHNOS
RyVMPpxVc1KI23vE2yp+UTnYAGVdHQ3loXF8HtIcMbwhQGKxh0uTyyS8XFof
K/Q3omjU34ej/wGC6bbg5+uaoBXzSufj2AccyQ+dSN3XjDKbwUMWfAkm1MsP
rs57jttuXj7fJn9EXmxKTuFLIXQUOdn/eksRBm693uJ/0NDiHXTbdAqp+wRH
i39oRe1c7OC7mSnEps13OfJa0b9xyyut9mlMshU38YPbkL6Sb+heMIPBccvk
DartyPV9aKAVOov3puYthXnt6Cgzy2tw/ISTQhlD5iTC3lMa3UrMz6Ambul4
DItwRtC417XnM9ZYHDS6ffEFKi3l9p8umUOVSGLUoNsBJ4WC70zDvyBo1kvj
w+MOKLx+sf2ZxzwSLiRMz/l1Yql5qPmctgz1UdfqlOY6UanRFcQeliHu/qOI
RZwuRC2p13OoWQDPrNxwbEM33B5eE4RvY5DlNpfqhG3dkIRE/s0tYZC+rJW7
k8/3oH/Gu09JS46YGPU1OWq9xExpgOeqSDmSan2CLV/x9ZuzFYl33smR09kt
ibf29+LM8U2r37vLkyPXFtrXT/Uixbyoe1OFPBm546XUkNgHhwUfD5kuRXpV
Lplbs8XQZ9gbxF+hyOj8Gfv8JjEiVWZXOcdQRNuu6JinUIw+zeKlKnEUcY8Y
SJZrFSONrT6flEiRqmlXsU+HGIsPD4mucyiSPGFwbkm/GBL+5aj0bIpsHOjO
D58SozaB31dQQ5GkejtlF10a2jfD24O5FHkqH8b+xKIRkWvSaFRHkVlyf8+9
tTSsalLLiuspcqhmeS7DmEb+eGB8STNFrCvH7SrW07jqrvjjox6KvMrPOqXj
TGPM94lJeC9F1Ec6U5pdaTgeO6VvK6aI0xrVqvNuNOSjO9Wq+ylSnhWuJPKi
ca783jB3lCLx6R5ZMT/TENXu7418QxFuV2yD1WEa5kK1ti1jFJEu574bCKTx
dvhcNW+cIn43jG3sjtNwkBj9dXmSIimt/n5vTtLIldH52yUUaVK7eSUtlAZD
mZOhKKXIvEtL0bYwGr4rHDiCKYpYJii0T56l8R+jolJH
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJwVyX881HccwPHje1wpc7aWsRKXVjKuOL9O8/l09VAUd8iMJJEf+VFs6ddk
Zx6aH7WjIlaNXFdd6zT6Qca9k19DcZyf37CTyI8tmRwOZ+2P1+P5x8s0+JhX
qCaFQnH/0P+KAvYXlx2Pcj7bEloQYsWRSl+4zvGZrsjSOj/kR4kJ0KK69dyY
fih4sks7ULIF7j1Zd9WKeQQt8I5375FgUAdVK0yYp1EDn1PFkfDgNiubMGKm
ofu5YltnSRAkGKsvr2bmIaFZ34STJBbCLpX0rWKK0bUx5XO2hA+huctSHJ3L
kZFKLqgPyoJwdu9WcWI1SrMwF+W05sE7j/7TLGkDaqgpOKyx8gYcNLu/XcyR
IV2dDhN1qgge7hSUeUXL0U0Rzdv9iRju+Vpl1vZ0ogTfYGbIjiJoPstot7cn
kYwraFgfUAwH6u3Sa/z7kE5+tB2KfQD1Gik83UMKFDp3YPar4kdwpVh9uXZm
AI0mekwPNZXCwlih4Oy5QXSpZcJ2+uUTKLl+i21kP4QOWIia3nxWAeuCy41r
GocRr8TvWjJTCn35lg+8+CNoK0P/UJLjU9gS3rSosBxDzbIX2e99qoCNTycl
SMfR0iqdiG0Hn0HOxXOPFmL/QVWBstfTidVwRylkpGtPoNXOq5eSM2pAK5Ju
og58h+YZw9XJRbWQtPb18lK7SXQ85ufN9s/roLsHZSqXJhHf/bEVdNZDt1fT
0U3kv2itTURf2cyf8KC9f1QhmkIeRXnmP2k1gt9VGs6LeY8+FggNln/UBHeM
g97ucJlGEfH2vy98+Rza7mLHeLoSeU66Ddc4vADRFK83d1yJGr8dqVP7NwMn
6YR/xbMZ1OkX6Pr3yRb4w8AsPixjFm0bF7O6sAx6IzVGNEPn0L57o4aTMhn0
1IXNbNiiQvYOo+7xvq1QED4wsHtGhQaV7V7eL1uBXpthFtgyj3zLtCwjI9tg
v4WUUOUuoJydSp/xiTbgepg4pX63iK7JLfaJ+HIwPqOjdx2pUYyl6Y0GWjuU
jS2XFtOWEK1cE3adb4d5A8faMsUSinQ1L1F/3gG6G0+xhD4UfEWo935dYQfE
FURZh1RT8AWK04ozNp3Arhhdu56pgfdkek1ZPuuEuN7ffG9d0sAdY+ab9+7q
ggUypbKQoom/2O1iJ+zqguk+YVxwmCbeHsvIOhzYDd7Jez9hNH74TWMVP7zq
Bi2a7oC/HYHlm2Yr5XE9sEGgv/j1VQK7edbqXpzpAT6dMWJ4ncDbs1TOb+Z6
gMyylvf+SmCHVmbstoUeyLzsLQ4uJPBGz1/ahikkqPKyfY6KCUz1PHbFSYeE
5puGRSmlBK7gGZoOrSHhRLnpwYdyAlvxYlgOHBJkTtZuJzsIbJZZGHphJwkW
lRxbdheB18i6cl65kKCAkBVPSQLr8Dhz5/eQ4FYrKm0aIPAw10A6sI8EY5k5
fXCCwPncql0Z4SSc8mTPiyYJnC1QnlIcIUHe5jYcMUXgCy0Wd22jSUjtiKp4
qyTw99yclYpYEv4lJRGqRQJ/w41qZZ0hYW+A1LtyicAeggLN9AQSbvc1O/M1
qNilpcPmr0QSAhQTq7S1qJjFxTlpySQ8PkShNGhT8WZBfH1/Cgn6g/TxjGVU
zGi5O2uTSkL0YdNODx0qNtJTmKelk1A3tLVKfyUV07mf7u8/T8J/iQ95fg==

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2]], 
        LineBox[CompressedData["
1:eJwVjns00wscwLefx35ED0pHV8UReeZ1lSTfL4pUujdEdWvlEStlDi7Vrahz
UudUpJKRuvSge7lSayqPyOpiCzUVWWUtxkjbbDaM3O4fn/P58/OximaG7iMo
FErID/732kvLSpfUJfnGM5OLc0cZvjxB3e5H7C2w0z6XnSIOBC9v/0OpbDqk
DR5q9xNHgGxEdyyUnQg6Gz4I7cRxwAuSePmzTwAv/XK0hTgNHqve9axmZ0Pl
HJmNmTgLXDZ1lHuyb8CfwiKaqfgqHEjbdMWDXQmsZymH54lLYbLSQFg73QCC
hy8ykrofQeeFt0bN3Gaor9Mgp/oZKC1epVREdcDkDpPbi2OboZmu558g6ITt
q4q/cc63QYjxpW0H/+mCU1m+FbNKX8PF50/r5wiFwMiVhIdz34AXozHYbawX
uEdyK00EXWDMYSXt6fsMQZ++5HtW9MAu75K4dM0XeC+Wpcq5H6ElMSp6/UA/
8O6/lp8JE0G8uVFSaNsAiEUVGYL6zxDbon+36oMUCFEsKQ38Aidsn/Q/bxmG
ldfl3fc5faA+Wxvi8GkEkh123AoMkEBJ1N3mdqkMGLYBgVdbB+Bhaumt+VI5
JIsobixPKTTXFB8eUijg9IFrC+Iah2B/d9qvP0lHoeKBgb/E9St4j6fWq1RK
6OGFM9wbR8A6jMEe0aqgaatV/OoNMig6varCTzEGe/miiImdcgioWeHtq1WD
eNtSzRorBRz5l8rPU2ogsSGoNrJHAa3GvD6jgXHYLqoafpUzChsiay47ySYg
cD9pXhWuhPDDWevL+idh7evgAwwjFeRcO3qeJ9eCV8mRx1mdKuifiNllrJmC
XLuhZCJ/DFpd7F3Kh6dBlb1ua2SIGj7Em+UrVN9h5+4LTiamGjie3ku9/HUG
+IaNjqV8DVh8bp/8i0nBAqZHfn7mOOTS/BvoSgom+OTNfFs3AW3m1np+iVQM
GhSdWzo1AZbOrLx0JRVtpxYtqG6ahDVOf5QJmQTOlfk22RzTgril+3iHlMCI
glvCUbcpKInj3ViYqIMl5WqFzY/P5XJ7vwtSHRwr8nByvzcNL44uXhHJ1MUt
anrM7bTvILt5rrdqVBd1aXz9VO8ZEFXHm3gd0kOu2rLdQjEDUn5XjumoHgaU
ubfm/UbBJy852RaJ+vh3U3C9wWMKmiXMDuUM6GPD6pPxFSZUPGeo3XMzgYZd
fS5zid+p2Jy3TVYnoWFqRufG56+o+NL84A3xIA3XGxXq0AVUFFw/FUIO09Cs
YG+dppOKn+7cKw+T0bDmwYizYxcV1RwDxpCGhhQJbd6lj1Rc9q5etNCAxPOb
fbr2DFHxlJmtINmRxDvmd2K0OgSeLfQ5yXImMb00wSJPj8DsJWGuT11IDPZw
f7uCRmCBbWa2wc8kDm9uCIw2JLBqZc/GYh8S3TLf27fOJbA3IpvbFkLiU4mx
/OpiAvt6bicrfyExJ+XNXdelBA7Ra63MQ0ncS7kWxbMkUB03mBEbQaLuIrvO
aWsCZ6f7+2jpJG4M8a+OdSBwvnb7sGUUiRY9JPO7I4GLMpiFgTEkfovrWM5y
JtDmTNF4bjyJFzN3FfBdCXSYxS57tJ/EKGPr0H3uBLrmtEZ8TCDRo1BqOONB
4EpTkZ5O4o/e8iouy5NAn3z1Q7skEt+x0465ryLwPwUoTwQ=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2]], 
        LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAh7dr92A+cD5A9QYBxzZqvi6xnaUH
zU0/Tg474NkLSL9/0xmsxsxdP0AMrXKlC1i/qORXL6bMbT85C+Y7iwtovzzt
9vCVzH0/toqCIH4LeL+GccbRjcyNP3TK0JJ3C4i/qzMuwonMnT9T6vdLdAuY
v74UYrqHzK0/Q3qLqHILqL+5mP15XA2/P4Rfi25TDrm/YSFvPTcRxz+bQHiQ
6JzCv97Ce6rhdc4/catT4BiUyL8Kl6R8ez3TP+skCvy5DM+/kVMQfYT71j8H
L+hxZovSv/R0XO7CCds/6tK4SyjR1b+TvPYVEgXfP8zj3eCiB9m/jwVLy+9d
4T+B1Apc1gbcv0PfCkRxYeM/iUwlPcJG379tPE3psULlPzPSI4KzJ+G/tay2
6Xoa5z+gNF9DYqTiv2tPkKJeGuk/tlqRN21B5L+XdeyHAfjqP7Zwx57UwuW/
Mc64Jb/97D9gSvQ4mGTnv+k5rB4F+u4/iFrLMLj+6L+LFBEiBWrwP5lapps0
feq/WiUEERVr8T9WHng5DRzsv+N3OJYEW/I/+9FNSkKf7b+k46R3AV/zP0tJ
Go7TQu+/89ikhkJe9D+Me8iXYG/wv/4P5itjTPU/acoFooUv8b8/YF8tkU72
Pxl7vsXY//G/PPIZxZ4/9z+/I/kiWsLyv8cNaIrwK/g/pOcIrwmB87+KQu6r
Tyz5P14NlFTnT/S/B7m1Y44b+j8MK6Ez8xD1v7xItXfaHvs/kKopLC3i9b//
YUi5ah38P1JFh1OVr/a//rwckdoK/T8K2Ga0K2/3vzMxKcVXDP4/lszBLvA+
+L8k53aPtPz+Pxe5nuLiAPm/oyZYh1Xo/z/YwFDFA7/5v62/uO0BdABAbSp+
wVKN+r/mDObiSOsAQPiLLffPTfu/umYvhpZsAUBWT1hGex78v2xhmfRT5QFA
qgoFz1Th/L/lIM15s1sCQD3hhoZcoP2/+uwcrRncAkClGYRXkm/+v+xZjavv
UwNAAkoDYvYw/7960xlYzNUDQBru/kJEAQDAzxFwG0tVBEDSxGZsJGgAwALx
5qk5zARAhZePshvIAMDQ3HnmLk0FQCIbdgUqMAHAfGkt7pPFBUC6mh11T5EB
wO+6qgybOwZA8acv/IvwAcD+GETZqLsGQBNm/4/fVwLA6hf+cCYzB0AvIJBA
SrgCwDyS6P07NQdAqJzsxfi5AsCNDNOKUTcHQCAZSUunuwLAMAGopHw7B0AS
EgJWBL8CwHfqUdjSQwdA9gN0a77FAsAEvaU/f1QHQL3nV5Yy0wLAHWJNDth1
B0BLrx/sGu4CwG7cN5vtdwdAwyt8ccnvAsDAViIoA3oHQDyo2PZ38QLAZEv3
QS5+B0AvoZEB1fQCwKo0oXWEhgdAEpMDF4/7AsA2B/XcMJcHQNh250EDCQPA
iIHfaUaZB0BS80PHsQoDwNn7yfZbmwdAym+gTGAMA8B88J4Qh58HQLxoWVe9
DwPAw9lIRN2nB0CgWstsdxYDwBRUM9HyqQdAGNcn8iUYA8Bmzh1eCKwHQJFT
hHfUGQPACsPydzOwB0CETD2CMR0DwFw93QRJsgdA/ciZB+AeA8Ctt8eRXrQH
QHVF9oyOIAPA/jGyHnS2B0DuwVISPSIDwFCsnKuJuAdAZz6vl+sjA8Bv/Vop

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJwVxX040wkcAPC96FpeelJIV5dJ9/RCQ9dUevL1cnoRl7xUrBKLuqZi1ptj
iVBL7nYPbqlE5WWrJEtvl31/tLE0rxEmCxk9uQhRLHN3f3yej3XYMb9wColE
8vnP/1dpHStMjQ2I+dvNWZo0New8M13PNzQgyCZdUqVADVrLWs0AzYAYqJEY
S8+rwcD70DfFDANCtslVlnpODe6lOWtjp6lEhAvH2jFODTK+UXHPCJV4uKqi
P4mjhrL52mxpO5UIMD7CW+GlhltbRbzAQiohfCG/xJupBkZ9n87KmUp4uNkP
NJ5oBy/f4TXLmimE7WD7hHyoDcj20QmMKArhdUi0dh+nDQ7Yt19/RqUQeW9N
c2UdrRBkOxWVmkMmGGkvnzwIbIXJLbMs2h3IxCjTVR8tfw1OckHtSgWJGLyj
jG5hvgaDDUqnJ/tJhFWQMKuupAW+FXT0X+2fxgsU8750eguY1+coXBdN4/Lu
tr7ey83ALvVW9gboUZ9WYtFt3gy09hpuVtwUGjt5RN9KeQVN40RCRek33G5m
ET9FegWju1KdJlt1WDN0U/pDVBN48daZ/kTWYZzIc0FvdyMoUkO3a9dNIvvE
MgfXvY0g0gQz80MmMGmHPJpd2wC/26n4moyv2Baad2DR5gbQlJtE/fjkC77U
cA3Wc+ohzNA5JbJ7HP0yaq4l+9SB0S+aaTvLcdz04MblKfdaMGrxs9ZtHENx
3acP1CUqcPCHAnfuZzzpjzlMs5cgSLPwFUhGUcotK5Ea1cCGWbK8t40juDfN
2pL4Rwmm8Z07i2eOIG/O7J4vXdXgsqZWKrAbxsn0KLJMVgV5BYXMg4GfcLBw
kt+QpwBf+mdm7IIh9LadETJbJAfj2PW+bhEf8Xtxcob65HMwrTzqqKsfQH9h
il3T4Uo4m3B6T5nbB5ycd2+JBbsCchVLWwXC9zhH6HP0/c8E0CbQ0l/fh0uH
29apYmRgJdWJnbZqkVZGce11eAZnWMsoJvffYaXPKmN/s6fgFbv81jt6D+5a
WJgRTHkMcquazJajXajqNFbyn5fB7IOPrvKknWh5PIaYkEhh+MrCuzxPNXqQ
q9jC8PsgKV+543j/a/zjXH1KUmAxjP29IIn1/BVuKTFrENpJIKd6a8ApVgMS
Csdj7eJ8KA2RRowF12DfOV9RXUweNM9a4a1bLMcE1kLeh/xsCL3m1vXm4VMs
TfBkS0qEUL06FEsZdzBxRKsSiBNh+RtX3Zfy25g7urGgd18iCJLpazf63Eb8
nHnGxSwRvNveFldzJDg57rl6hH8WGuP35bwpKsIYXf5fQQEJ0KFkxX9nk4/V
NJXcV/8bdJbfOfGAcRUv2KmGLoq5kDsnctDF5woqGHE3wIwLYWzbiBecbCQ7
2gWO8qOhjyYJ1BSJ8DQz7WlwQBR88i9cQ7PJxKY4kaG/ngO0Zg/tI0YaZuaK
mOniMLh0urJZxRGgSf7X7DF+KMy1cpN3F53HFPFu0t6A/bDosMtNI5tk/HjA
MWuXngUhJG6ljBGH9847Vvwp9oNftx3Le190Cq8Lhy+GBvhCTFZkwlyb40hn
su/u128Dk6C6OBUjEnt2s9uuiN2BPqR0ptuEY3JLVQdXvwEOGaYO9zP24OaJ
qu+KxavB6shX9WJ7b5znnM5uEi+B/D2s+495HNnZ+vBcNsPd5V/zVH8n
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0]], 
        LineBox[CompressedData["
1:eJwV0vk71AkAx/Exk57NVkqObXNEpZXG1eHRtc5ipSYSW5ialQpF1pKkWjSu
kNugLfE4G0fsYhyfL9mZQpM7GsoM1rUVmQrNNNv+8H5e/8Bbm+HneJZMIpEc
vva/XqV+6ws6KUS0dqRsUk4ED6+UbrXnFGIHUlbdIIngrF0TF/OMQgy75W1Q
kQlhnfFF6ttGIUwyW0wtJEJoR8SLdrRSCMFqOX/WRyGGTpaWNtdQCKokbMRu
RggnhYn9w39QiO7+4OaSXiHML3gwlC9SCPXbPhG+hUJYONTm6MhRiJOafyY4
2QixscVVxTWHTOhZebdzpkbw4UjuoygzMrF3+zDpbeII3ss5W7jw5YjFfY8a
Iw1G0GFzdPURbzkigRh3MS18DX55dceYlESEn9C32i56Ba5xS/lvKSRCGviv
Vt3GV8ixVu2iGpEIVm0k/aDvMHZ+LuF9GyNDvL2QnVU0hJmEvy4oEF+QS1Gh
v5sTINFRyVm6JMV+61a5oQMChDOsNxltkcK417Qq8dpLGKVSLlW6S2AdE86z
4g2CqsTKDrj1GWXxSdNN5EGoEdeVfqhcQu736rIuiwE0JM7Jb59ZRFVHWNB4
/AtUlO4Z8lNehAY/T4K2fpyeWmNIPryAIvH98SzlftB/bfTsDfiEGG/G8L6j
fbCnckaz7n7E/Pl73KD4Xrz/xvp1ef8HhN2uUqoc6MGkUX7jMpkYHrK4i4+U
e8C6mvRd0S4x6Bl79avdu2Eq5jf86D+PyRqvlw4lXdjMEVmpZb3Hk60nMssm
OtGRG3Fof/ccnjao1ymadKK1b4matzgLC8ujXX4v+Sgya3GXbp4FSd1t3azL
MyRcpyofbnwLkrnahsvv2uGtE2GiofgGbPIp85vn29C4Yt4uLmwG2YoO+nc+
P8EUjSIWzk+BRd29+DyNhyoj4pda20nYTBeO3V3Lhdgpo0Of8w9M5nhpvoWt
6FHc8FlTYRzP0v09n2o+hp5inU550CiKmbwF3YpmuF76NLT162epUSr+1bYE
tniJ3DYeGIHbkYEV9281osvyeanPqWGs0RE1DbA5SJ820Uv/NAjtHdIyKqsG
qxxftCfl9cPRa/lZUXI1AswrTvOie7DcwLcgk6jEutOim5JtndjmxbXpZ7Bh
uSpZ98XKNtizLjpff1iIx4MjaS6jj/FwzdzsuNIDhK5tNS07x0GsvIH8SlkG
bFWN128TlIIZPFCaT4tB89a04EafUjiGOmkxZqKxx2yxjyYpgdYNfrIWMxpU
t+bkYI0ScJitIVn1UVB6cGzl3/QivEmrOHRHlwkBNUBGH8vH8ero0VBJOIZi
vdr1Bdk4KLq8u4AWAj7bINpRkoXXU+c0tJlX0Nz50TpEIwtX59yX5dQHo0A1
qolLz0QZ6afuJN0g+D0orDwzlgoVLZ1LYZIALAvsMjQUxIFbk29fTLuAqboz
xdc0YrHEvbP+Xv058GVzOm30aBj0X5tI1fVCRpyS6tmxSKSJj0fclDBw/GDh
wi5BKJ4wFILKaT9Ds5s300m/AsPfRWuzdU9gwn3ylc9YINLvcdhMiSPmpx1j
rQQ+eFrb11ZPswOTnOofMuaJjA+3yCkSSxjvLGF7CE6h3dM3sJdmBjbXVZwq
sEdnA4snf0wPC/oH7Fw2+TQhlfwwvdi26T8k6bCB
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2]], 
        LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAsuJMBoTrB8DsEzSyD+QCQAEoTT2j
6QfAbAaw/pPiAkBQbU10wucHwOz4K0sY4QJA7vdN4gDkB8Dr3SPkIN4CQCoN
T7593AfA6acTFjLYAkCiN1F2d80HwOY783lUzAJAk4xV5mqvB8DgY7JBmbQC
QHQ2XsZRcwfA1LMw0SKFAkBS6FRMA/EGwM33M+E5HgJA4btjbld3BsBh/9DG
Ir4BQJoaz48OAAbADcDWNe5fAUBv1x93qX4FwMkk45W9+QBA9bWI+uYFBcAh
TYnLXpoAQJfy1kMIgwTAiRk28gMzAEBjuoGMjAIEwBE+l0QXm/8/4aNEcbOK
A8BJ0PVPyt3+P3rr7Bu+CAPAoKphPYUQ/j/FVK1ia48CwC8MAdbjUP0/OknK
qHsYAsDt33GBB5X8P8qbzLRvlwHAzPvvDjPJ+z8MEOdcBh8BwOKeoUcCC/s/
aeLmyoCcAMAYimBi2Tz6P/A/QzheHADAfefwj3Vy+T9Tfm+DvEn/vxvMtGi1
tfg//TgjIoRG/r/a+IUj/ej3Pwo3B/mQVP2/z6yKiegp9z9O8bVbZU78v+Wo
nNHbWvY/5sEdvf9M+78rF4AslI/1P+HVtVbfXPq/pwyXMvDR9D8Tphh8hlj5
v0VKuxpUBPQ/qLmr2XJl+L8ZDxOuW0TzP5Hj9zUld/e/HEY8VCiI8j+yyQ4e
n3T2v0HFctz8u/E/NfNVPl6D9b+cy9wPdf3wP/DYZ+rkffS/GRpUJfUu8D//
1DKVMX3zv4q1OZt0yO4/cRQueMON8r9PRTJCRk7tPxoQ9OYcivG/V2VFrSe0
6z8mT+qNu5fwv8uTv25QNeo/DEkzZ0BU77+fptxVA77oPzpsJ8qYUO2/tEkU
AcYm5z8uFnyde2/rvzf7sgLQquU/kDhmiO1l6b/7PGzI6Q7kP7jhsOPpfue/
Lo2M5EqO4j+Jt208cqHlv7/BTyY2FeE/yAXArImb478lDVtYYvjeP83aco0r
uOG/prPkEOf82z9/UHYLuVjfv6t6o1GLwdg/tUTr9jJU279uCqjdQ5XVP3ZG
IcPBlNe/Crd6Fouf0j8UOYK+boTTv1gIBa/j084/enJINWFyz79P3LCKztXI
P28lVeMUAsi/wUHo/OH1wj86dG/fCeC/v3vQE/9oLLk/xNM4ez3QsL+5IR9v
kY6qP95CZIn8jLC/jnnaL1ckqj/4sY+Xu0mwv2LRlfAcuqk/WiDNZ3OGr78N
gQxyqOWoPyuZKNlrbK2/YeD5dL88pz/Oit+7XDipvwqf1Hrt6qM/FW5NgT7Q
oL+3OBQNk46aP0pMpJ28SaC/Y+iKjh66mT/8VPZzdYafvwyYARCq5Zg/zc1R
5W1snb9g9+4SwTyXP3C/CMheOJm/CbbJGO/qkz+3onaNQNCQv7Vm/kiWjoo/
QL5IjHmGj78KxutLreWIPxE3pP1xbI2/XSXZTsQ8hz+0KFvgYjiJvwbks1Ty
6oM/+gvJpUTQgL+uwtLAnI56P5cJSS56bH2/V4Gtxso8dz86+/8Qazh5v/8/
iMz46nM/gN5t1kzQcL+genuwqY5qP0agSXJ7OGm/8vcwvAXrYz+Mg7c3XdBg
v4XqzI/Djlo/pM1K+n3QUL9Pym9O945KP5YnDKVJYXC+LADlb1HfaT7Mu4Bg

         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[0.6, 0.4, 0.2]], 
        LineBox[CompressedData["
1:eJwVy308FHYAx/G7w90Ky2Gdh2pTuZ6sTm0SjSiUiENdyXKiCy0sD6nmKUoa
I8pDi10dL3HnlYptF/n+yvUglcc8VNRZTZFnnbs8rf3xeb3/+pjsD/U4QKNQ
KK6f+1/NPvlQ7nMGWSgzWxWoopGKrqHj0g4GOeVa8Khvgkb2NU1rPG9jkMG2
ecGHFTRS/rfhAuMWBql5P3r1yBiN7Ermbs2vZxD+PCk7ZoBGriy9I7xczSAi
b4fFmXIasfQVcksLGGTZyI+G1XU0EtC672bVfgbhLEpn6FykEa8lfP+613QS
1OjScGMtjYh0hrPCD9LJaOlOkzXNVOLfXakXN6xBAgPVF2WEU8ktHUp8ZKgG
UYv9kv5Bi0pC5R0/fTGhTgar/KNNyiikar6F4+kIdTLL1W/jOlBItFldyIFx
NaK88Kz6Sc0szr/uY8l/USNZHQY9pZRZOKoyypwmaSS6Xrc7Zu0MeOX3ap1P
0sjMl6JBtSPT6HTirLimSSM+BnFenpVTGN389YmZs1RCb2aey303iaDuS659
ulTi9tKqJ2PFJI52FWjdyaCQN9lGc+O8P0FR3Wak0qEQLssx2SJdhauRVp6/
r5uF7zuG4eUmJTKtGrcZmc9AGhSfQFVXYsPGRLtm22ncsE6f0d8yAW2GrS7f
agoTt708FkUoIMsUJJRvmMRXdMHkcPFHWO4Vj2xw/oSWAm1p1PtxdH5QWuU5
qvCi95DrqNE41lf5nzL3UiIpga/4xnsM0c5WIamCCdDlwnGD/FH8e8WQcztA
gZbhnDp64wiYlvPH2BEfsYlrerNYZwTB2cbpgtBxKP2Cwm3shlFUmVoXGDoG
3Z9HmT/0DyKfaaxRGD+KCNgI/EMHUGtxw7AyZgQhIcqDkS39KMoVrJn99fNX
05054NGH1ijtByybIWRc9AlUdr6DdIev/KX1AJjtTv2Dm3rBEvZP6/n0o6nC
N2d77Vs0JqY8Vni+x7KxN8NZpm+gLvfL3x7Si5rm7HB7UQ+mwBSbZr4Fw+a1
MHG5HO7mLcHitH/wRG/1BN/4FRYuaDATieXQHByfOb3gJc6uldql2b9CZEq2
X1JXBwI4iaLuTS+weeNBw+KyZzA3uTtHP6kd58zPLcmuaEaFxdJWYVQLWI2r
mFLFU+yKVTgs8WmA1t3euO6Rh9idTWs3HHmAuh5q3g7NWqQOlfBj64AaTVHD
861SrI9dbLpHVo5nf+04nCUpBcdPJHNKKIeb0IAttyvFyi1LAyxsylF/pqd7
dXsJLPVdHJeFXQP2RLk/opZAzczT/hKvDOLJ/HVUXjFy9/pZnWaXIMF2QBVC
LcSdWzErvWVC7PmNpX1BchEV8XFB622EcPcVx3La8+CSRuOuCPsDWzi2w/XU
PLCK5rgW8PLBaRa00Hg5kLSyHM6w80Cf/2deGPU82tZ9972PLAMHrEtcciVn
ERUXKvg2LB1uXY1rGqgpsMuJ2n+FlwbrOKUunZeMtvtJ3qnsFDBrnTrDqUmY
Nb3szJfF49iFx/UFkuPIOuGeVsqLgVuncaYW7yiWi/edOs8+BvbCQ7uPUyPg
MfdEZKAsDIXb9B6JJcF4Gq77opAdBG7T9V3J1ABMNK+uj5bxobouvH9P4g37
gOyoPJk7RCeroJI4w9au6OHNnWE192RegWlTQTX/AS8AkLY=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwVjns41HkYxX819/nNbx8ilXZrLLPpJl2UCt9TKW0bWmwXKbbWRLHWlpZt
0kiWUlsqw4ZuZJUWlUohExoqRZY8ZlyS5JZb7rdtpz/e5zyf533Pe47RLj8n
z4kURdlr57OGm7lY6OuwQE0wr4gJyCVps/yLVJ+5k+PmnZtLKsR/bgvSZUGu
1jSu4DwiYr3iw3WTWFDeCe+tPf+IZA2uVKVM1t5L6yeZZOaRFqXxFuvpLMCz
yHTrsJJscO4NlH7DgvjZwT3vlhUQUeDZnCwrFi6fq3w3lllEIuMkZ2f4avfj
8hKbrDIynKPr6nhB+y8+aqf/mkqSLqEWJ6hY6L6mySy/X008vNa43hzQ+qfV
NmtO1hHqev3+P4zZkMt8rqeGN5ALBWUaIxc2dIzW2VsPNxKZpNBFHcqG+JCV
s9T9PXEI01HuyGCDos0D1se3EMO8W0FX37BR5ngkLFjQTioHUiW3GQ48nj2/
5WvfQaoDUt7WLefgzMgS9IV1kaqXwx0l3hwUd8l27hnsJoWSpPYwBQfm47Vz
Fk75SFI3Jy6jijjgN/l0mjj2Es3LpPMxAxxcniXc/VNIHxmx/dQ4/DUXppxk
T+pSP9GLTgv5ypkLca6fu6pigHzZeE9XJOeC0rFsbukfJDNp/e7sDC42WZtJ
LRYMk72/76+PeMOF15NFihe7RkhS89zHYoYHjxYLl/yQUVJttrwnyJqHsiap
oCFrjIzvv6R3cS8PpsGKjW6aceJN8e3qFTxY+lfAeOg/Uip9Utyg0vpnig1O
GFCQPNdYpffyEO9cWZ6RTCFAYPfJ2oQPUYBR5IfVE8CczixvdeajpqBvukPN
BERPOhTrIefD1KOod8e+iZjyi+JmbAYfKa3mRUe5LEQ8F96Jq+UjXvlXww8x
LKz6OeRZtkCA7sLjFQ4SNvrbNponLBdAdk+nwC2PjVhP/4hvpQLI+xVDUx05
sHjYZnZfIUCOUebstjYOHotyi7oKBPCKK7viLeNCkRzlv7ZbgMDVBz5+QfPg
aZjt7SYWQvk6zebpNR6MT1q72NgLIc9qebVwqbZ3lf6phsNCBIY/8Egv56N2
b+frK/8IURKqW+zkI8CLUbHefLUQsS+8DiaNCnBfmpIQJKQRz94ipmOEiCqN
MIxaRkP/uK2u2JTGnSP7Up7sptG94oHa9R6NUkHisexzNCh14aUbm0RQRy12
lilpHFOVpqa8EcHPzsrU9jENy6uRl+c2isAetx2n82m0HLaLTmsSYYHX5r/j
CmhstMgLzmwT4ZhN0OhDlTYvKe17ZZ8I89sfJQ6X0EgKOTVYxWcgt93Qd7Ca
htLquzW8hQwmjzg9tVHTODCVZ3liMYMb6dsvcjU0TPry5zFLGVQY+q5X1NCI
SF1hoLeSweye0/F362lsMpzTOmMtg/KEStu+Jho1g/zTS7cx2ONcNy3nPY0z
/xaGPtjOYIzf3BnaTAPp8kCrnQxmHRiK1WvV9pEO/bh6NwPZhukdiz7Q8Kls
XuLgy0CXMskf0bL4VuLsV34Mku/Oi8nvoFF20n2Gy68MysQ2q5y6aCyxreK5
/sbA8/U6A8NuGu9mnhurCWIwEunY3qDl86MOPe4yBmdWbVVe76Gxvkr4/m0w
A8mgR7T/Rxpjt1VqzxAG/wNcsiG+
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwVkHtUjHkYxydzf9Vr0uhyDCXqNJVLRthTdh6OZXSZ2pZymdJFdkpqZVAt
E6k1yUlstXZXt3GZIiVlGhn7+x2rKFqlURtDjXFaVChissm++8dznvM5n+/z
POc8c2JTwuKn0Gi0YKr+7yOBHUv4PDoc9Ln9ddGeG2J9/i1VJcW05Prs6243
xKpOndHflvJVZW2mh3qxS0RFdvx0il3Swhcs1YulsakGLZ/K84TJtz80iS+k
8RWbnCh+c7RkfJ9OHHtuY32pK5Wvlk5EZtSLuyb7fYS+lJdW7w6eVItF7udr
ZJEUB2ueSAIq0dKgAq+BLCrv3uPsNh+jjOF0j3oN5c0S1r/8NuRPdzxXep8O
cDCwrC/hAapweDyn/z2Vb1bGp+3sQdnlYbNhFgOi/crXq4xGVHm29TfzagZ0
jMaYBE4mlKKJd3iSwIBF5vRhXrEZNczW2o2dYED/ICcfSwbQ6UIvXlwjA/C0
0sN57S9Qc075Mb6R8sENyzXfDKKkwVbVczoTQs+uzFK+G0baEMccQsgEy9HE
At1Xb5HSY6ZVyLdMeHv/TdXxwhF0ZP+sz91pTOCofedOezmKRPdXjzeUMEF3
aHLNaff3KLLYZU9dMxMKhqf4sjPHkFA2Z4Q+SO3bfrQ9E39Au4u7hxR2LChI
Cl7ULbCgL4F5cqEfCyRfOkYNqeNoPi3+uSiaBafKeraa6j6hXo93fTIVCzj3
nH65O3UCeYSef/z4EgscWX1pf0o/I93oxojSByyA9m1NcXmTqIWLwzI/UfMu
7i2mZ1/QPucgqdaZDRh8/9CeoOHzVcdap0rYELRsj3KH2Arb1967dTaFDXJF
UfL7l1ZYWO+Dfy5kQ+jyjyJG7hTc5BXoV6Fng+Tm3qdZvnT8Wp2rZTxjA79r
WZSqm47jim7XXWRxQO7ZaxOrYODwiWveuxZwwLD2lPqCMxMPxXRqjn3HAeuh
U9YZiIlp/iXqlh85sDG8cYsuiYUb+fkl4RUcUKx1OHiAZONaudLRs4UDgswI
g/0lNnbzmWsneM2Bv/dftXHexMErLEM22+y4EG21QVAzzsFdoh2qNj8uWAKn
86o1XHzx1YssRRwX5j2pFSnDCOxWnndAoeKCYCzfu2eEwLPann08eZnyXXlE
WelUrBuNSmV3c2FiWduNYbE1Lix+lIQ+UfvNL8p5T63x6xrinyJXAozr3RLU
uTZ4sHlrzM21BMwLPsO6LiSxvyAlSi4hQIYyzTneJM5PVW4h1xFw2keGQxeS
eLFzyYbNAQQ42s/IGFhC4oy0R+tGgwjg9/00bAsk5nhtWOwaRgBjV6JBHk7i
eQUB9CwZda/QR21/mMR7BzbRPCIJELDJTFMOie/4J3xup1iW/mpLtYrEO14e
+ei0lQBD5JkZq/JJfGVV82BdDAH33Gfk7vyVxCvHxAbTdgL0OkvKrVoSnwwM
6TzyPQEWz4dBx6+Q+HlF1F/z5QQsL6kTbr5KYpX0wJ30BAIaDiWa3zSRuEPT
pLdNIuBygDF8ZguJXSdbrzVS/FavEw3cIbFifa82cicB3guLeHV3SexgZblc
lUxApZ20bU0nieUR7JqQFAL6czw1tgYSN12yvzhGsYuFlW3sJrE1w73y9x8I
iE40R2t6SRy12ffcyl3U/4xoRaqRxP8B3aswew==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwVzntUjGkYAPBp7vNVYymdSlG0TMVKU5qmab9X2i0pappkUym6IhJt4VQT
SUJO7C7GGnZT1KImHTW28T5jSEjIZRm5HEJlkmroqvbzx3Oe8zvP1XHNJmki
nUajhVDxLaem2k8avUdAer8sOnUvH6WwBY7RlO047rLuQspl7kLNXQJapk0K
Xl/AR0nPAyLzWglw+ummT1oeHyWEZZxktBDQfsR32uZMPor1vjHf7AYBgb6z
9dnxfCTlbQ611xBgXTQYWeTNR+LKa6VkJQGN9orwM13mSO8WvnNuLgFPLt1y
zZSYo0Wr5QuMEdQ+/muxRmGGMrD66e4fqPuEV8KCMVO0JVnfixkE7N+atdEz
1BT5XDp27eEzHkhOKKsvVhOoLRhxDtXwAISq+1oTAgmnDvjZFPJAsNGEP7aC
h1YV+PvuiOVBdrIov6aei8J9csp3C3lwujXqkZHgoinHZC3rTHnQYFwbdzGV
gxQCkcGmgws1V6pYytts1D9B375ZzQX5l/Z91g5sNDl3Q1NZKRdEPZ8DzeUs
RPPXyHOTuNAcNvKutI2J1D62HrMkXJBESU76CZhIpJ9a8bclF/50TCxJ28tA
e2Bo960uDtxbsS1W8JyOToRsd7qj5cCnoK2JMRI62jXzjVv2HxzoOBcVMrPE
BAmdVy7sWc8BqM1dbvGGhiofrx+R+HOgIGtvUe5iGuq9nTTX04YDSDbhPzB3
ghxLptlz+9gQ6KV+97zrK/nAs4JdfpMNDms+NjqcHyO3LxXGdivZcDZlRLYr
YpR8z1m9lchiw5DhQZTecoR0MssYaltKObhgZph6iHT1K81MdGRDs7F6ukPC
IDk8fbmqbZgFKbaVRW++/0IeWWyM6mxlQcO0bXVNLUZylC/SPalgwROF1TJl
8QDpbFbkdDiPBc3x8+1al/WTc8LwwGcZC+KYM87ZD30iDZLf84XzWHBqSUO4
Lr2XlKdLc2zoLLi36FVb8b8G8lnQBS/9Uyac8iyb5+PRTdIirT4k1DLhO3V0
33H1e/JzVaLZ0T1MeDWgE0l4b0lVebihfDUTQl2aVl0vfE1KOgXiaA8mIDcD
0+7ES7I0mshv51H9Lt5O/J/15Pms4kKv1wyg2TeO3A96RB7T9w2L6xkgH/VQ
OTffJYM7Bl1tDjIA/ol5Jq29TjbPICK1yVTdQyvdoawnLcsYnyb7UvNxFfEp
0nxyzp3jAb5TKeO8GIVehUUeyWn7LKl+2gHHcWEtDjzufvipBWU/xdv4A7U4
JfXmi8wplJvq0pzRRXyWNZh5YRLl1q6chvI6LPhRenoGQflFuPJxej12ruaa
0CfoIP865+UUjgaLrR7ODh2nA430LPs1ToODck4GK79SzvdL1qs1eN3ShUfF
Y5RZMb1/bbiCq96vnb9lmLL5oQm3NoxdHHBMxwAdEH/84JllWizeU7zL/Zur
mRm/7NDioI8RlfJ+yqGmMtOzWryu0WC066N8yNp6k8lVXLXSdn/ER8pWwlML
667iy/itqqyHcr33zs5XV/Gt2ar/+gyUV6IEhbkOdxsDZpV8oKwIEYwn6fDI
Kosl7d2UfWREzWEdJnQvNrp8c3uUIR502Nal6rfsLso58a0WPTrsWpp5uamT
+n96Ss11m2v4f9rVPgk=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwVjmlQk1cYRkOWL3saJSCMlk1AoYFSCVtETVlULJRMTVlUEFOhiAozImrB
KgIWEhQRgmiBpjquqdYULCAg91VC0LakskMFhRIGCghGUCMS088fd945c848
cx2laV8lEgkEQgT+Plzi/QCbYCoT9Lba+ORYDjT1BIwrMSao7awr7aM5cGgy
oHaRwoSjK5MGeiUcmLQUSmrJTLDxwCShYg50JgmL3YhMCBdtDHPaxIFLrLU0
rokBd5K03oMCDgTFBBoHXzIgr0ZLE3M5cGJ2ff+hpwxwiGir9mtjQ4NNIy+w
mgESnZbbuJoNCyOx12cLGGBzv2UFUrCgs/mU8kACA/SpzVtUJBbsPudrmS9g
wM8pdTlhSUwwsUlPZUwGvOi7lbyniwGR2Rtd7J7Rwav0Usw6vBNido9P1NDh
KL0sxVhOBz7fprNLTgeJIc9dgNGhL1wmroung8Oq9PmVyTSQsz92lfnQIVsX
v0/RTYWekZCd7mw6THhtxqaDqTCgHuXFjdBANPKp6s1VDMbsrzgeq6cBn2S1
mMvDQCUbUnmdogEt3RityaAAlaoqr06gwXTVQM/UABn2OV944uRPg93CegvF
ZjLIA80Vziwa/OVc5vdCRYLb8/k1vFEqaLLTlrcvI0HRtfxN52qpoHbfTI8/
QgRK6vIN43IqXD5jZ9v7xAJyuztOu0qpwE962asLs4BGH3PMGx/cyzU/Zf1C
gAXfyKxaFhVuOih4N5YRoOMLb4tQPQZHRh/EZLHNSLq9iJRYj0G247ZKVpcJ
LTBYcelnMFAHTa9V3lpE4b8TvC2/wQDMmbMX0t4h33TZvhw/DIbXUMalfgto
VYfA9IyDweowudCD9xZ1ukUz/v6XAuJ3zEs7+9+gPKfK1Jt3KXC+uCCx9LfX
SOeZ4Rt7lgLGCsL+suJXqNOnNbM8kQL+wRkF5qh5NDToZ60JxPt2vTllzRy6
eMzRM4dLgeE5ceH6Vwa0HzyqPMfJIDbVHbBsf4E6rHRpqmYyFL8VBO7/ehbN
JI4115Xg3muuIffZNLKMsk+s2YOzxzVDZekkMoge54vWkcFBKhH/YD2Bvt1g
xalaQgZurtGXdWUMjQ0dnRqfIIEopaRHETeKVhzeHqppwlnmUvlcP4y2q3e8
LiolgcPQDp8S/hBaYzIw3PaSYPj4jqCcq/3oQcj7CskGvC/5Urm0uQvF8j3y
Uq1xlsb0i7fqUMh5bKzOigTQPaNOcdchT/JwqAXOhE0nZXkWOkQeLKEqLHHm
Vwvrb7cjdaFRfpeL96+YVfasdoRNtZwlMz/8B+2a0fyJ7tzYpvzRTASR2nWq
0PcRUloJCPr3RACney1X2I+Q/AR7lwfOorKtlUj/ECXEghMs4pyZHTFX8hAx
6a5Xx94SgRDyz+1ts21Immy46TVPhOy+0wfdrmtRRPcf7Mw53G9xjgg+rkX+
osupLS9x39TgEhelRRybaK8oA753cby3mKxFd9uaarJm8H7v5wHGhFZ02fsc
r/U53g/1LVnq34qKlGkZHJwhMnXyk49a0e7DTn4Xp3AWVFTsvKdBkaPvyicn
8b1rnx38TqFBwsgeozfOYPswvHSvBrk0/hr7/X+4PxXvcitIg7irChq0E/j+
+3mT1laD/gd5ilsp
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwV03k02/kWAPBEJBJJSPL70W1sbSl1WqrtK6K+V9RWO2OKzkNtQ4dQ7aBj
jVn60qoy403R8FrBo7V1QastpekzSu1jprTPUstYIp6qrmJ+74977vmce849
5957rkFonE+EColEiiXi/1lNIJOcWmGCWmzCeISIDS1TLQ/iXzNh24GlfWcy
2ZB47t6LuFUmJHhqns7KYMNUd+1nwjUm6FrzZSVpbHh0rFBy8gMT7PvYpcNn
2fBtrFASpsKC8O9sjtonsGGpYLPEj8cC5x6pHSeMDcOKmCtWFizYKa5LSD7C
hm26DrTgJBaELJxRtyGzIeaTbqSiiQVWSQ/Bq40Flw2DL/LfsmApyD8kW8QC
y94e/Wk+GygTjGs6fBZMG0PV+xQ2xJdd19/9jgkMykTx121sIDWxgg/XEnMZ
/xlQSNWA8DyfWJtwJnDWl9UtHDRgy+IvFlM6TMj1MTE2Pq8BAqvBQYM+dfjM
P8xa/FQDKntN/rX1R3XIqqTgFQxNKPqUZ7TTRh2Czg4G6HtoQo3AKM9pngGO
H8ryqTmagFv72XwuYUDZx3K+86AmaGH6cZqODFiS0vykTA48CTuiLVLQgbP9
Ps3flANDZekiVjEdhCHnhPfdORAvpjwvt6NDf+KQ11AsB+4lX7sQNa8G8e5W
c1dyOVAR33K4VqwGqS7eEW23iHrZ3V9CjdUgR2f+uGSAA6FbpAFxXTQYvVlE
N3rDAdfZ1uZd4TTYq9ttFqHFBUzw+29ApsFSXb21ykEubC0y4T8vpsIcueaj
+zEuFNZuleqYUWHedPchzyQurJ9y2TwrUwUj7VbjjUIuKAIP1iR4qEKvoZqS
9YALZjCinz1MgXR2n3vfKBdIjo2rgjAKRDXU+wqUXLiVGdlgPqkC/gd5Q9G6
PNikbLpRFKECDSNGlorDPOiyK8n0nCWDO/j67AjhQfsPN762CCDDQhpplpXJ
A3x4sSq8lwSylCf7ykt5kLRc95/m/SSQejPfrrTzIM67rqX80AZSuKleLZnk
Qa4QK6CRlCiRrrXxThWDWoaNZ67kE6JIKv6gG2LgfHutimn7EXUpPKM6nDCo
YVome1x/j0jR1aOvojGoqrAUGpDfIX6zuLNBjMH3+0JMjf3W0M2u9Ni/VWNg
q7hPZgauoj0NqxdiujHg2DQEVbuuIG2ZTg5pEQP5nc2XalWWkU+HskBMeACO
k6jLCnTp6ZiUJ8fAacsQuWREgej91+7tXMLgwgptvrROgT68NJx2XsYAt3+5
sOqvQGNv99jkrWIg++OlaXHlEqo0tZ03WMegR5D0PYkvR1N79d5cJ1x6+TVH
vEOODCxIpANKDNblyTQlU46KLNu1HDcwcDndEFP9YhFlOzjanSTjIP9R3KyV
tohOBXsU3KLioDS5b7l4bwFZ/xzkaK+BQ+iJvAXK9nk0XGiy6zHhxluzWBxj
Hp2+uqpmr4nDuvM/fNuX51B1zflOAQcHYZWQqt86h/R+bXQT8HBYJg2H1gfO
IdV1DV87bRz0EgOaJ7L/RL2RrcFIFwcOdzSMOzqDYmLPQytht1L7htGWGUQ/
42eA9HB4LX5mklU6gwSihUlbfRyyfC2Pn4ieQXeubIq03Y5DfoL5gYA306io
Ly7msBEOpMT/ZZRRp1G4tf5Z/l4c5upM8z1VXiGr75ysnhK+G3h50uHFJNLo
Fr73N8OhPU73mbxhEt39+8OzieY4yDJ5XUejJhFLFPjtTQsczkmFmzZ+nUB3
OvJTdh3Cob/jRo5J8jgScx7wGwkXZD1b13MbR0EBrz4escRhVOvJgkRvHNEX
9qWGWuHQlvKT64HzY+hLjd7UYj4OAZFBPzhh/0Wqfox04rrQ2DQmX5wdQc+L
zW1LCTPqnplfSxlBtTPHlOZ2hPebu+WyR5B/ckW6h4DoR9bsajN9jqqv2GeI
j+CgTfdrivT4HYmmTqLNDsR+Hr24qOgbRl/s+WmjgvDVaFr+ba9hRGodz5A5
4vDvArWJHU6/oc8n0zI3nHHYbfeVSwF9EJmYlkOOCw4PfEvMNmIHkPJ0N0nn
KA51ES81dvb0o0rqNpG1Kw4Xxx+ro9Q+lOYhsOskTDWQrQXn9SKfy9Fkfzcc
Hq6ne2Rs6UGfjO+KvnHH4dCjr8QnFp+i/lNjdqoeOEj3+4qjzDpRRTNN5WfC
kp6BFXfvDpRC2dtu4InDHVnajuMuT5CXm19WPeFIemaVufpjZPjPVAHywsGL
8kWna9oj4j+kKj2Ev1lzoebJm1GvUVf7l944XDp4YaBe/TYqi1vJWiCsmr1R
Gt8lQH8B3LLeAg==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
1syR2+wlIO+OtF9wJon/AfDYKRM=
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
+IeTcC95c53kX6uSpyXuXQ7g33hji/4Hx985WA==
         "]]}}}, {{{}, {}, {
        Directive[
         Opacity[1.], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
jsP/AAYWPko=
         "]]}}}, {
      PointSize[0.015], 
      RGBColor[0, 0, 1], 
      PointBox[{2.495009616850869, 0.47594354202533395`}]}, {
      PointSize[0.015], 
      RGBColor[0, 0, 1], 
      PointBox[{3.0547652045687026`, 2.27694595039571}]}}, {
    PlotRange -> {{-5.08, 5.08}, {-5.08, 5.08}}, AspectRatio -> 1, ImageSize -> 
     500, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-5.08, 5.08}, {0., 5.07999993984832}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      FormBox[
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{
        "\"\[CapitalAAcute]rea n\[ATilde]o detect\[AAcute]vel estimada\""}, 
        "LineLegend", DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.85, 0.85]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.85, 0.85]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"r = 2.54cm\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"r = 3.81cm\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm]}, "RowWithSeparators"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6682847680962944`*^9, {3.668284889300365*^9, 3.6682849052610073`*^9}, 
   3.668284981855772*^9}],

Cell[BoxData["\<\"area_detetavel.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.6682847680962944`*^9, {3.668284889300365*^9, 3.6682849052610073`*^9}, 
   3.668284982142751*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ExpandFileName", "[", "\"\<area_detetavel.pdf\>\"", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["\<\"C:\\\\Users\\\\pcmultimedia\\\\Documents\\\\area_detetavel.\
pdf\"\>"], "Output",
 CellChangeTimes->{
  3.6682848312381244`*^9, {3.668284889672847*^9, 3.66828490586748*^9}, 
   3.6682849821497564`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       GrayLevel[0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
+H/WvD2U
        "]]}}, {{}, {}, {
       GrayLevel[0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
4P8BgjrulA==
        "]]}}, 
     GraphicsComplexBox[CompressedData["
1:eJxlWHtczmcbf+o59DxPOj9TCTNhWBNp0bT9rhZKkrJep2FKzKFNvGWodUAH
oXJYai8Wy+sQ1vbSiL2/Xyk6bChmoxyqlcRSKyLk5bnf7/18Pnn+uT/f33Vd
932d7+t+3gpZPm2hsUwmW2Ikk71aYyTzhKUXTCmarRJwn6CM8IlJJlJ4xlm/
81pLjkE/eaffnIEk53TgvoyPjjzyTXvW9lwEPzD4gff+8mL6rBHWHEO+qd/s
RccXPOTywJAHhjww5H1Sqtb+cfgulweGPDDkgSEf90NtYHrfSi4PDHlgyAND
Pp1hAfLAkAeGPDDkA5g+XB4Y8sCQB4b8feYPLg8MeWDIA0M+j8WDywNDHhjy
PfkLWD4Q+IFBxzmgA4OOdYreLg1NZqv0vf4cM45Bv6vXXykl6/1oxTHoSfrv
RpwOjHOBT+n1tCFfvdwT8R7bhxL19DYRdGDQN+hxLacDgy7T/yQP0IFB38z4
BdB74hR2Hsf+TD8B9m1k+nN/YV/YCzriBQw6+OFf7IMV9Q+Meoc8MPbv6U/U
J85BvYEODDrqCXRg0FEvoAODjnoAvSdGvsMe5CfsAV60vzV27xkt7ah2Shl9
u5ekE8OvROy3on16O43JdfnxSIssNWUzzOnAoIMfeY39gDMYpgkPj9xUldnQ
YX0c/hKBx+v1vCZWGnsE3wvU8fwBPVOvd6EA3KK3r0HoWUegNzI63381k+c4
iJ3H9/uR6SPAH7ALeuM7MM5FPoGO76hffA9lK8e4j3A+8gMY+QCM+AMj3rAb
9Yx6B1a4r172VaSK7PXfO0Xwo97ADwz+0/r8aOf7ox7BDww/GTM5ng+X9HFU
SFVs5fEFRjyAEV9gxAf6ID7A/Zg9XD/4F/HpieFvxAt06Iv6xvnwPzD8j/PQ
H+EPYOj3E/Mf9zfuD5zH7gUZzx/UNfIHGPmCfcGPc0utluwokVvwfAUd9wNw
z3kH9GffTbuYu92Sxw/9AfmDfgf87vXUax/8ZE1Rej2fiuBHPoAfGPyxjJ/f
r7AP58M+2Au/w3+Yn2Anzgcd/Q505Af848K+S8CwF/Lo35DvGT/cV8CoP/Aj
P+Fv3D/A6LfIR9g3dmvWp9H1Vq/Nlxm2aR9P9jOWkrfVvxNWqHptnvR3tIu3
GGIsHXwwMsfunJLr/9HJ7h92Weh4P7EZaVf3ha+O5zP6a/LRVziY05HfkId9
A2aWRx5wUHH/dj9xPlO3wjA/Qd/Z8+jc+PRuAfbA3j4ba7a12Gp5vha1jPFW
hRnmH+RDnc3Ma4WtavLIyzhwvVFFYR/6vnXF5YWovek1PECuo8S87S4/vnlf
VO39+nnDJB2NvuC9uXFXJdc/PyHn09KcS8J7553OetjrKPzozJQFDXeEdUFN
P98NeTl3dbYM8zr0XLgRb2/k3m1FrtMC82pvGVNA93w/B8GUr3saRtgO+VhD
XSNW3Uwx1kr9Swd9tNFBQ33ZKlmfDHpXWW5OxybX2NWu00oDbG6ZF7tZkX1t
0G2HTKU0YOv43XlkmLc8Y8ZMippgQ4v/HOvsIT0Rg87MORQ3SUknImoqOgPa
xMb9O9MsxylpbeGcHJ+KVjGwMebXReLLeSJ3oe0++3axPVNutDdKQaEl4+7c
OPOnOCTryIGVSxS0p3in305lg9Dlu4UWfaGksBlRu51M2oSUUbUhR8NVZLWg
OL4xvVO4+t3lPnMn21BN1tPYv756ItQG11v/N0BDsQ+XdmdplNSvd15UQpSG
HLZFLzTZruTzUwDLLyreM7RufphhnqqzNbban2RFYwPtm1K2KGhe2y8/58Zq
ycPxjzHKq2oyzy84fCXWgtct4pytOld7PNuM15tv4Y9v/pBgKu1j31/rz9Z3
OneGrjGVFLlhBWmi+rX+dZvli4TzcN/mTvKKWJVueM+hP2n/c6U4sEkpwR7E
Z8OR+aa29Yb3GeanEcviwo8puvg8pp2gi8p2+Vuk/FDnsBIFry9g1Av477mv
KE272Cpgf9QL9ndh+wtdWrOyCDs19+8/lNFvlBSpef3AX7ueW0VkD1cR7EM9
wb5ezD6CP3vOJzrmT/p7jbI6eoCW1CZ2zjOjzaS5w70bjueY0ub56x9MLDWT
sgd4FX5apKFL02Mr2hpMJeMxN5v83jGhsB3DyjMkGc//PJb/9Kw65verp3tR
F1ul4U7u316baUmpsfFvLHNUS4dCVrp6nTChd655Zg62lkuoPxdWf1L1yAPy
jmPWtCOpyfOzjhdif4tczYJ91pTmtOl+tKtMmhok2NpFvpxnHj32nNW7WwB/
JuMXwL+V8ZO6qc+dJ6vVdOHjrIYv/I3JcvemZpNP1BTTdbUisNWIoF860496
JxzcsmW9KTU+jYj2tu/F7cEaWnNp0NqdvV6bZ9W/yBP6m5nR2BmVdl8XGuZb
8APP2eVhvWWi4b2FevyD1aOY+ezF5LJEG5q/om5wQMwj0clGY+RdY3h/OU9d
ej+z1YZelLz3fPOIB2LTROdJ61x1/P3lZH1GHDFGR7Oc6ibkTrxt6O8n9P1d
AD/ur41zd2uKR+qoovqqecXgOgHnYf5D/7nP+o+Q2p5gP7LAhna1nAr/Kqpd
gD2439Hfwlh/E9SzLdx6ndXyvF2cbJvcJjOl0KKyLwNXawn7ZbL9RPTrxaxf
i9DvLNOP9/d/s/7O+78X6/8C7A9m9gu4L1LZfSHAfybn9P4T4O9Q5m/hxuWi
JnMfLeXuTrwZPUhNqawOCHXRM64uU5eYX84053NKqXOfNZWnNCRzOJ+4QjSV
vhxUn5l3WsP72eEZ/m7x3xjeh8C4T1OH5Qx1nWB4z6O/urH+KvnMLQ9fvtuK
3IUHWbc9FdISP0+fek8Vz6dmB6l+vb2K/FNVce7CY3HQ6GGZ799S0ic+j8uk
2Y/EkUk7qzaGK3l8q8blJ3esUtLsv7IyLL3ahGOfta8906KkxSlvf5AzpUOw
HPbcruScisc3zv6KTV67ija8mO6qrOri+qLP4f5zYPcf5Z+v6mgQDP9nRJ+2
a3ZtVlPzwACjZm+1FKDXU83tVSdW1Axcr6YRA4MVSzeppPwtppuLI9W0YcbF
eJdpKinl+8pdNy6a0BCvWcmnkuXS5SNzM1oc1DSqZBv1uqiQ/vWs2CU5QUUH
vQ/axLU8FXWLcic4x6lo3qKDl1SnnoodVeVLiiYY/t/oW98S4lenoHWRscmr
8+6JRb+pk9y9FbyeQqassXx/h4IG+0x1fBDWKD61nj87skVOG0zbvYamXRXL
/e2+fahTUNLw1k2J26rF1QWe1Xu85fy9mtj4dsTYo3LyWuXoKH5WIZbrAt2u
+Mqp2eGVvZHicmXl7+kL5VSTtLVpbN3F/9eTnPxSX/lriZD8lkf/lX0VvF4r
SyMelyXJaXJBpuuvsy4LK6Mnft73rpwCfo7pE9BWI4xvt55zNUZB+bdOBM63
bRQsh/vOvrFMRW5u7/urIjqFoScPPbgUZvi/5LeBic3BXS/9p6+Ll3pZTM05
NMua+o2Nuz/yn0aEfBvH8o2u6/uU4X2F+viE1Qd/X4Ww+pBQHz3fV+H3s927
m1RS1dHDv6sKTfi8a3lqn1/9OTmfTzMDNFFBK+R8HoV8aO+sZcGnjGlRV7wm
cYoJfWj66GTAdCMJ+jsw/aXStkP52/KUNGpVQUlnWYdoKRvq1vnQhHYoAzbf
Oiqj9PzgAq9uDV1/22RU9WgT2iN7PMuxyIK087zGfT5DQ8Hfzah2K7ekC2PW
rd9ep5LMY6vrC59ZkyzI89jaP5+Jxgu+SVtwT0GtkZW/OWy+J4CuYHQB8peY
PN9fzfaX/geKlGCZ
      "], {{{
         RGBColor[1, 0.85, 0.85], 
         AbsoluteThickness[1.6], 
         Opacity[1], 
         EdgeForm[None], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlmeM0EUQxXepR8cDjgMpd5RDOiK9cxRBwEN6kaqiqIiCKPYOCKiAoCCo
VBXbRzW2aGxYo2LvvcXeYmJ9z/mR3IeXmf/+d2dn35Td0oVLJ51RJaV0bE6p
quRi4RShs1AgVBOqC12FKnzvFjYJG4QWQlOhWJgmjBZ6CHWFmtjYImwWaglr
hNXCUcIqoY7QQOiOba9pyLhtHIasJ/QW6guFQmPWeW4TpOf25X8RfllvJCzF
dh18bYSNfcw7nLH62F0gHC/0E/pjr7nQjHVNmNuIPRow7u8S7JmbrcKNQinw
WEthhdBaaCssY76/BzNWJgwThgrthR3CemGIcJOwTuhArLoQm3bYKCE21Rh3
rLoRxyPhugZxKmD8TDiqDU914WozegF+F8OBY9qTuPSC+3rsWVCJ64ZwcyiW
/nb8V8HfHfjdoVIszeMxxLuQGDTjXyHxKoLrYr7PFUakyNN9xKqI/y3hfQC6
bS2H91ZwXwJ3jflfzJpS/g1E9/pziF8bYtuOOdtSxHsQ5yojlkM5Xzt8bcGe
64njEcIuYSOxbM1crz1JmCeUc77OxHR7ijwYLlzLf9vpA0/m+mZi7VgcTZwc
o1EpYl+dWFl3bU4VRrJmljCWNWOxa5uzhXF8n0+cXHPjkeZ8TIr6rs/cfvg0
R5jA94Ws6c/YAHifK1TwXQHv5nwivJbio+PsXFsrXJ2ibibBh7k+FtvOg/bE
wJxOYZ6/j2NdGbprbAjnN3c10EeyV2/O5nN1g8fq8DcaDj02jbFD3Jm3K4Xz
KvFlWQiP4+Dn9BR9x989iZnjdZVwQSW+xsNzP7gzbxdx5uaVuDNvZwgnVOJy
IhyeJszHvx2c3zy4P0zl3EuEhexxqjBZ0DXxf1+aAodD4dOc35qippy/Z6eo
MdeX++icSv4uxEfnrHP7CPyYDx/eZwZ7VeD/QOa6HjoJJ6OXIxcx7vpwT6wC
jwvY91LGM3Ix+iXoXjcLXuzLbOIxDt+X4PtcOK2As+kpcuiWFDnjHnq7cBtc
LIY773VWij5bm/nWnWN7WOd+6bwegf+3w6Fj6jvX/cF3tHPHueR8dO67F7lX
7EzRm8z5NSn6i7l1vjh/+vL/YuZcBi+HOLHeBXk5unN/JX45L65gzLV/Jb64
lq9iH9eGe7t7vnvAasb2otdGrkH3+S7ijCs4j/uqe5p7Y0fW7sGu/69lzp3C
fuYN5l9bfFyJn+bkVmyvw645cT37jnT9Xsd4R6S/y+HPPA6Bi43Exes2sfZ6
9KpIf7s3uBf47ixg3QbW1mW8HnIL+g3oXuf69L1SkqJnWW+P3Io+CL0UHuxr
GWPbmOOxHYxvYQ/3FfdI3x0dkNs5+zq+rbvWToQr56ZzuybSueu8XaTE+TJF
37GsyKE3keyUo9eMkhydI1/vEx4ndn8IH8HbcP1/LkW+vCSMz9HnXEOuAefG
WI2Nydw5kuNy5PQ8yU9S9F+/YSfkyMdBkgNzvAv8/y/mDNbYkBz58bXwD1zd
iy3PeV2YnKPP3S/8jc+TNPZtirp30eQc9V9HsmOOfn2P8DD8PCN0zpEPIyW/
SHF/dLPtHPX/POf32c3B5/AwNIct23lK6JejRznHdsPbMjjyW+I9YUaOun1T
aJsjfj8Lv6ToqWcSu6X41QXfbMc10op9nkyxl8d2Mr6ePHOOuA5dj3WwZd21
vBHfNqDvws9aslk7R+6twK7viH347/jO1f+7U9w/trcXmx/Do/10rftddegt
Zd31/pnwbAr7y8mZZcy3z2X4vZ+1d6B7fDV7+UwvCxNz9Mem+FeEj/vg+Tvh
YIqe8JtwAJ8PcAbrX6WoDdfCn8KnKeq6isYeSlFfz8KLfR4h+WKKft5IeuMc
992/KXJxmHnU2IMp7rg5btjkXoFkDWFmipprQ905Z11vztsijTXN0TN6S/bK
cQ90lbwrxZvFtp/A/nEaf5UzvsJ6r20mWZyjN7wl/J6iT3r/mvjwglA3x9vn
baF6jrv8gxQ173xwbb3GuXpI757jbnQNNaeOyiR/SnHP95HeN0ffqif5SIq7
2mfYSU49IEzJ8Rb5NUXeO+ffYL3X2sYPKfSp0t9Jcf9Pl/5uivvQPWMmfaNE
sjTH++N9oX+Ou9l1XJ555zqGOd47B+HOvDWQfDTFO+J7Yu+4F0o+luId4Zh8
k4Lbp4UPU9wzrTTeOsc76UehfY73zeGSLXK8k/4D4vpKWQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFdsyFEUh+9Vs/ZKzNJSo7RUlai2aLU1q6rUHm1tihB7j0Qk4qGJRPrk
mdiC2PPFKCL2DBJ7xIoRfL+c+/Dl/O74n/+9555zoovm5ZdWcs5NgcqwF7p6
5xZgI+E5TGW8HVsDHsAoxmux6+A4FDPehu0I5+Ao5EMBjGHtETYTlkAHxl+x
I2AW/II9kC2/8FZnYc8WbBrcCj7lqy98h3asT8dmQDd0IixEL4Ja6NowFt0d
DkOSt7UoqI9uABPRKfAUShiXYSPgGBQx3qqzwgn4BolQFf7A7xALnTmHvQNh
ObonDEHnwkp0L6iDrgvj0D3gBxR6ix3GHYLWiGJsKQxDXwvf5sJf+BfuHqtv
vMVIsSmE89CUuUnYOKji7R/yPRq+wL2gFfNqLER42ztGb46u7k1rLhJdE3IU
W6iHPo2dAOPD2z/ErneWAz9hLHMbsCP1H/QlbOewZ1d4Y71tFrRk/UDwpZxr
xLgx5KF7w1lIZrwYGwMtvMVQsZvs7CwHYW44k3QU60VhLhrd0JsvxbQt+hN2
GkyFNt7eWG9bAk0Y3wlaMdwHzb39azbsD2fWWedAK285pNzRP2O9xTAu/ONU
+EZ79eYng0/5Uk4OUC7ARmc5cybkgN5eOdmZtXhvsUqA9t5qRrUyU3mA7uMt
F+crT9AXsZ2c1dhQxuNhk7McVO2+CG+pGs5gfBmbpLPA/fAP+V4DzdBXnNWO
cuCl4s7c5vDNDPQHZ7VeDp9DjBVb1eTukBPKBdXMG82zvgObChXwyllur4In
uhfrO0POpKBTvfWKeOiCTvB2V/WkAvRtbD9nPSaG8Y3gWzn0MZyxPOwZ7K1G
VZsrnMVmkDetGHVHX8eudpZzuqt6oHqf7qxe8B6b7qwnqNfdddZ71PPUO56F
tyoLd33trFZ1Z/WyI85yWT3tps7N3PDg84Ji5S32ekPVUhosdVZT6m0VIVbq
ccqdLFjmLIfewQRvvUA+s9GZkOxsT7q3mCqW8pnnrSdGhTtfhf7eciE5vMVj
Z71Qb/If6omiNA==
            "]]}]}, {}, {}, {}, {}}, {
        RGBColor[1, 0.85, 0.85], 
        AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwt0udbjQEcx+FzrGzZ2UrZys5OoZIKUXZRod7kD0Mle++KZJQRKXs0kD3D
3cWL+/p8n99znVfPCc/dk1EUDAQC5wk1tmoZo+wDeoZ+dl9GMoJSt9P0sXtz
zR6uk+hFT3pwxf05O+1n+pNfPCXHrVh/sJdpnqcyhQrPT8i3H+s3Gin0/EjL
2Wg/1Cyt1w36Vbvqff3IBz4x0W0CD+xMvaTz9LLO1wbdpAtZxAKWsJjNfPd+
H9l2pX7mFPuJc1tKNDFMp8R9u77Qq8TbVZqgL3W5VusyTWQFW0hmJUmsIqXj
e5BGOqlc97vV+kp36Wu9wQx7JrM47HmN3tTZOif47/seoZ2j7HBr0WDHx2cb
rWaG1uhardU35NrHdZze0zAdxkX7BJ3tELrRnS5E0eZdpL7X8fpF68izT2on
fasF+k5jdS537fV6TC9wm3We7+gfftPEbrdmHapDuGVH6GQGM4iBhDOWQ96f
Y4DdnzGM5qDb2f///79Adl/C
         "]]}}], 
     GraphicsComplexBox[CompressedData["
1:eJxlWHdYVNcSh23swkrbVQE1sRJFRDSIoJh7YwOs4GfDJ4oBSUQj2BXFGrEh
YgdDbKDGEh4xYkGTOzyxYgHFFlApUqIYEMQSUB/uye/sl83+c7/fTrkzc2bm
zNx2X0WOmiozMzPbaW5m9vG5hKxXR9ywIjwjd5wfdsnSlpxG74gavMaC/w8M
+umKNhPbi3JOB9577cPYIDd7OvZqyKbGF+8k8AODHxh6gSFf2WZC+InQei4P
DHlgyAND3m/9rej7R/7g8sCQB4Y8MOSX/1wcmNA6j8sDQx4Y8sCIAzD0JTAs
QB8w9AFDHzDkA5h9XB4Y8sCQB4Z8FYsPlweGPDDkgSGfzs6HywNDHhjypvyZ
LC4i+IFBb83kON0UL2VP8SeD3mY01OCfhtYa4mRHfxjsVfL/gUFfY3iaczow
/ANm56ejIQa+txJwrIH+QoJeYNC/M+BiTgcG3czwIx/gOEYXwP9Pupxj0MEP
+fXs/VweGPQRzH4B/q9j/onAz5iciHiAjvMDBt2Ufzh78vMABh168D74BTow
+Ezjj3oGRn3CX2DQ/1l/Ol4/4AcGHfUBOjDopvlvGj/kL/wxxcjfXJnPlGeB
Cko0yGUJPSNPzLNJUtN+g16ZGHagZtm+c5a0rcB1/edFWtJLUflzD9j9nZcy
Aj8w9JUb7CuTwG+qbwfTx+sH+oFN6bAb8njvwPpjj1RXdHTEcM7PJeCBBv4H
Up7BHj3PV9DhL/CfzF4BduA9pk/wwz/ghUwfx6PZ+7n+48w+AfloGlfTew75
Cno44+cY/QZxQNyhF/HCE/0C+Qws8144PWaeihYb9DVw7Gjge839QT8BRv8A
No0v+gHsMo0H+gHsQz+AfcCwpw2zh+fnLaZXbPvHWa3DtGZUc3yZLHaQFfcf
cUT+oZ7xftQnMOoT9QYM+5FPwKb+o36BUa94P+oP54/zhL2m2PQ+gV24j4Ab
U0bdPLrVlhAn1D/OF/0B2PX3+Af9Ttnz8wY/4g1+YPAvY/w8f9FvYQ8w7FEw
e7j96DcX7aZtuyC3IQ92jpyOcwcd54z34/yRL8hHyAEjDqcM8a6TwI98Az8w
+M8yfl7/eD8w9MA+yMFf5CP6M+xFvqA/IN6YJ5EfpucBf3AewIgH/AM/8hH8
wOBHvwI/6hX8wOA3tRf1DH5g8KO+wY/4gh8Y/OiHiA/qDfK43xAfxBP5gvsO
GPWF88F5QB/ua+gzjR/6Aeim8YJ9oJvGB/UPumk8TPsB/D/qP2Du/ATjPpMy
6YvuJW2N80l6ix2vvGot/rW/jOjgsMLGWUarjoVYtSy1/9e+8uSvzo71OeaU
HFaSXROk4P7hPlyb8dGuKcL9JYmZUrac2z8/4dNTp/MU3F7ox7wc8qYidoxc
zeMN+1HfC3WquE+aG+cL9IcS3fgHWTVq8a+CpffuntUSni6u3nsejLel+GUr
mk/voCa/FgMPb2+hpvLDOdtm3ZTT7+6H5C/T7Gnbmsovv375QXKYqQt48aOc
XN5FhPU4liNov1og3nhmQZcf+MTtKpCJtjbLvZ0OWFLlrB9yM19ryfb06G7K
q9aUNrTQoXilJQ2/+Hm4i6Thz3l3LD9JPqmhdsKue/o9Gt5fi5i9pD2ZeSR/
mQ2v/7a6x9bZnnbkWDy6qFWikkpayuwOrLEjz0DHyvUbFSTFJHhrL6lpnkvy
oeW+Ksre3bkkZIZxfheW9vZfPEhH3zzx6u5Db6W7Kbedgofq6H5Sw7LnMW+l
kO+CMuwjVeQ5Ls9he1aDVJvrXrG5QUk+HTstarP4jRRQvvR6uNQ0fx6d2nK/
Y53UZ9FJmUzbZIfhvF/w/S4m62M/2SAMi9R4FfQ1zuuQr2Lywo5Ou5qPHauk
MpqSftv8hQB7Cpk9AuydwewVHoWPLJrXW0Vhhjx4I8B/L+a/iPi0YvHh8/qZ
uYU5rwPMxfyn4xWzoo3ze9iM+eMTd2oonD1FnFc6Oy8xf8IvuaOiLcnZOcJ7
ZftmfB7cq7pYfGJvM0L921e83hm2yIpulNS8TQs03v+oP8tf8rMDK437V6C8
ZMu2hRo+z7tNXx6VpvhLmv1ZRmnv8cZ5/8i4EZ4rdhnn/T+3t+43Pk7JMe7h
13Y6x2D/lxLqCf0X8uhn4e8zrCuKlRxDvkuXUQUJ04z7UU9mj3G/ZvUuIp9M
530t809EvpruP3oWH3GLW8fNFc7G+aK1zVFN6H572uS6oWqJhxn9x8W37ESq
FcWFrKoefLkZTermdvjdVkuKD434ZdMpLT1c4Wju/d6Oeo4KTC9+LCOHjERv
5X0LyoxttTW0WkbH/JabFVaqaE2zBZF5bh+kwV9cGzK0vwUd/76l6/Z7ZhTb
zueT2a0VZJcSNDvJu1yaumHu0nO1cvISfQrelJdKzyouyl52k1PZf5Nay9Py
pLiQ765r2zbtYQubPyxtlStl368estJTTmfKPsZpjoT+kMj6gwB/NjN/xPlh
obb77SzozZ30kYMevhdSb3Q4ZDHfgvSukWsDrcxF+OPB/BHRjxJYP+L9qpE9
RVe3WwMGDrWkSWHWI+7O1IqIVzyLl/hVYW7H6J1aPjfs2njq0G8u8n99n9nP
8pfzY9/Z0fhh6JVYHYXMKukUsPSV5KrTmPsWGudv9aMBLgFyPcWmb+15/NMq
qfvIiKrEGh19uNDrXZxbtVQ5uLv/Sg89zz/Vvu3vyvz19PkN37jy5DzJ1f6c
5NZbT0GuJYOODi4y3gc/Ge4DSefuUDJziJ5Ork6dfDk1V4A+3Pe9Lrme93HU
U9RP49eHllUI64J/0GS76ymn4K51TqcSAfbivo+rW+3onqmj5D/PRMUsrhM8
S/v7jupmSVu+3n26ZmhTnv1NT2R0Cfq/Yfol6D/P9HP7DjL7uH8DmH8C/JvC
/BMQr3gWLwHxsrhoiJeAeIexeAvuI6dZ30605nsE+ozpnopzQ50EszwQwY/6
4vsk4xdnv39sFrFGzef32qI7Xa+PVJPtZqej3b5XUPrBvi7jahX8vOfWzsza
dElB/TJa2MZfrpZChi+y7bNNQdOvjbmVVVklRV3NO+jgr+Dnkzb9s+VtVilo
XvSxp892PxEOnjy5xGafgvo/H5g/cG+5UG/tOkY/wfg9ZvC0vun+wUrKdfr0
t6ldXghVygWaPnFqPs+nTt4Q9dcFNW3x2xe1xU8l+gdY2Z8qUlMrp5sWnX5V
iap2263lu43fW3yC9+x13quhiaeUY9ZnaMSL3Z0W5Z0x7qHxXVI7ewwyfg/z
C74aFfmDHXkL1UlFXyoo+qzDU4+nahqyuvDx/osqmpDsY79xsPF71yu/ul97
dVRxfK3x2wdBc1RU6dXh8M+3GqSJx4rHXt6lpJt9pvkW5tXz/WzYrJRMq9ha
qUegIvJKHzk9bffx/VOFRy8nbA59LqdzTlcbkmLvCpdHOOyp1ytop0vNhtgt
BcZ9jskLk4e53mxXraC5uevutY95JsA+7Eu1VoM250SoON5/fOWCNK2KJvke
Xftjxishdktp1xlZTXvanDKlX3ijsMl3dPfolKb7NGXsu6jZDQLig/gjPn1Z
fETnQd9MPhhjQTFkE+rubC6GRx0JfttVTSpFT/87T+Tir/2XbLo1Tk2+3ef6
dt6qEMeICdL7Hhqy232/a1sztYh8Rd/y2pw0eUmpcT/GfNr57oT8wvYK8vDK
z/X8TcXnS+w9ejrX+1JtgySefv9zso2ez5eoT/S7I/Xvux5JlVNUXWbHEv1j
Pp+0LL/jvD3vtuSl7NxDWiDn+zXkMY9CP+bRpY75uvQ6FZ9Hn9qMTD0c1LQf
ei2vcp9jLkYk1Gf3crXn35vgH+ZV+OfC/BNR79i/n/dLrXbRWtJDbT9bh2+t
+Pey2RMblEWVGvHaocKR80o0nH9KyrgCz6u2dKP3ylVbS1SUdPh61/wvNJTj
8b00pM6CYF8rZh81W1ZQmtXYtG+N/jIt+kmjdD43+cyKEAt66FGgHjPASFcw
ugD9uUy/mGz2JqjD/2zIctKAvt+O03CsZphaHKh7eWWVkuJtPvNf16FeeuMv
fhh+pam+L2z0WJH4Ugg/tF52S2X8nrUjQLN49Czjvvp/RPKCMw==
      "], {{{
         RGBColor[1, 0.85, 0.85], 
         AbsoluteThickness[1.6], 
         Opacity[1], 
         EdgeForm[None], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
Ov8i36juJ67Lrsnmsxdn+x+AydAp
            "]], 
           PolygonBox[CompressedData["
1:eJwtledvj2EUhs+hiE3snSoVq6iarRql1SqN2luoTRurtVq71KZGJCL9IPHF
/yJ2EGLECokRQYhw3Tnvh8u5n/f99Xmf54xb6qqK0vJGZrYGUiDLzSbDRvQe
GIeeCpvR+yAHnQ9b0DXQCl0NdegT8B7qWTcQte8XWMW6klilZ+iusAi9Al7B
IyiBBdCRdxfgOnoatNG34CC6LzyGc6yvEtPgCLo9zEEvgxboi3AD3Rq2omvh
NHouvIYnMA8Wwm/YzPsDFt9IQefCBu0NPdD3iYWwBJqwPgn16KHQDH0GLqMz
YSP6J3ECzIZerHtC82SPlehPxAzIh6dwnmfXiANhJ/ofcSrMhxdwB6bDdpjF
+xIPrT36odM8cqEcdEYPguXKE7RFX4KbyZn6o9NhCjodUtF9Ybz+Fv4mOVJu
9JvvSY1UG/3mJXTh9yOITZVz9DvVGHbAG52VZ+XEITAMPRAG6+4wGJ3hoXXG
GehOyqFqBXmqhXJs0XPTVHs4ZdFz2msmbLPY8yh6gEftVeO96ExYja6F/ega
j7vVJblUTZckOX0AvVkvJRZbfGs8rLP4ZhH6OZFgFfALrrC4RcyFbzCRdRFx
JIxRbmGTxUz9gA0es5IDd6E768UWOaxEF3rsfRjeJjlVLtWD+9CjoAx9zCI3
Y2GtRY7moud59Fq2eg5d6nGXLFikb3n0Up7F3z5MzqY9dFZ9Q3vrzH08Zlqz
rJwc87i8ZlE16uYxI5oNzXBjjzvo7OXJ3argqMUdK9QLHr12QN/1yJlytdti
Frfz7JDFTI5Ub3m8Uw13oVdAgcWefyxmWrM8yaL3mnrMknpwgkfOletSGM76
s8VsqkbFHj2nXlMPqbZDPLxIV93BPws9cqUzybu+6hwWHlbm4TGtk2ejPTxT
XqkaadbkWfIqzZy8qp1Hr8iz5E0tPWojj5LXPbOYfXmevPNDMjsNFt7QweOu
8ojjHjOu2T5r4UW3LbxWnlSn2nm8k4dke3i4vFs9vR49x6NXqi1y+9HCy5Rj
efE6j3fy5EkeM6VZ0v8J8rp7FrMvz9utu3t4e/NkNgo8cq8Z+Q82EKTV
            "]]}]}, {}, {}, {}, {}}, {
        RGBColor[1, 0.85, 0.85], 
        AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwl0/dXzXEYwPF7hTLLjKxCssnOCqGQUSJ7RMlMZhGZIXv/UX5AlJE9MrKy
EsKr44fXeT+f5/P93nPPPefGZOWlbwkGAoFrjDZkawVjzAdIYioJjGMsB5nG
dMaznu/emaCtSOYqP+w2ap1G6DnumXtpb9pymDYcIY6jlJDPL89u1d/aTs9T
ae6rD/WCtm/48hyjA7NIZTb9GMJgBhCkPx05TiknWMZS/vqonfpAl+hiFrGD
7dy3f04925z/aB+N5RANP2Qem/jpbrO25jLhZLKQWncb9K4u0Azmk8s67tg/
4ys5zt+0p8YwiGj2U8w+WtKD7pR7Nl3TmMcX5xZ6ieaspcYuSz/pGt1DIV3p
Rhhnue2+i97UJ8w1z+GdeZXe0FPalFfm5VqlV3QijenMC7tO2oiBPHKeqTPY
RQgpvLR/w0Xza33MdU46N+GteYVW60otYDdRlNmd1vcaqU/1FmfMoXwwr9aP
OlSbkchn52yNZzjD2MskJjOCUYykiCnB//+Tf+bUXL8=
         "]]}}], {{}, {}, {
       RGBColor[1, 0.5, 0], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1:eJw12HlUTP//B/CZuRdJolIqiSKFsrWvr3crRUr2+CStlpA1rdqEVNol2Yoi
qWhXvC8l2mihlDbtmxbtSX3fzvn9/przOGfmzLzvmft8vl5XwuqMmS2HxWJZ
sVmsf681fgpOvbtoJiAp6Gbux62QHfkj5vVOmuk57uSf/iETouO939/YTjPr
v0n3XxVhwDVzbdeBbTSj+aKZQ2Xlw+HC8oUy+jSztVPHsvl9IWhWO8mPa9PM
5HNnr9izRSDeIX6wUItmijz681QbS6B5zqnHNio0w7qbO5AkWA7vBJcUyyvS
jOpSmf6PvBUQK5U7wNlCM+EV7JXbpirAVn+++qP1NHOgS0h5JqUKenyfVDSI
08zwRgUl4exqKAnfMZ60jGb2j4QsW3+iBpIeD4u5CdMMt0jNplmh73CmQPuY
KD/NvN5nrxtuVQsjVOPMvjk0YyfHinYs/gEz3kKy5b0U49TAOnh2bjM0hb7Z
9aCLYhJT3yfa6zcDE2vjdLqdYl7GCwjZ+DSDz/tX73maKEZawq7sznQzcHFM
DhpWUkxhVPLrP20/gc/rmt/7bIpJf1TsNhXWCr+DNySFZFBMlI0Pn8THVvj6
8FuF5SuK2bol4GreZCtEMquWzz6nGA9nI0Wr/9pAlMWkqT+gGEOdkuNfxNth
9ZWJ5vSrFOObkKvXGdABPgq8u8CbYlb5vemLzuuAlu5V74o8KGZcK2e0pbcD
Hu0xedToRDEH9i6wVjPsBPF18Ue5TlDM/T6NN9tmO0Hk2+6WQzspJtrBIifZ
vBt416e0cpZSjG1uePD72l443VywO1CAYvoznpyImO2Fsoi6/KWLKUYibTR2
g1QfBLDmPpadTzGC/Ydx1pk+mF992GbfHw6z8dmR/RqcX0B7cbc/a+IwRZfy
jucu74fJatsO06ccxnKW542/yCD0HS6YI/SEw3w49vmyq8wgNLZISv14xGEe
W/xtOKQ8CPn9Tda2dznM/JT5+/v2DELgXPOfzkEcxrnpeZbprUGQUNpZH3uB
wyjyrLU2Yg+BYYRS5QjiMGdFDfdP1g3Bnd3z3kbVspmV7ry/Tp4cBgeDXMHT
1Wyme13o8AKnYUCqZ07pVrEZ12sBM7Hew9AlXiPWX8pmBvoijmbeGQaVnnhX
XYbNRKQsWXTh4zB89zRQ7Y9nM2Ft87gOSIyAcPLVdN0LbKZn2dtvEl9GIIqL
ft7Py2aaNoS26wuOgfjyRPml8ixm1Z2YobjrE9CUxLW8pmQGx+iGDUX6TsGt
xkXcUov+4v8ufc1af3waZjzLJG6Z/8GbvBXwCd4ZoE8NN5jmT2Ljn1MDKqdn
QVjYoSJr/gReBhV91lYslM9jfPzSqTE8WbomnP83C60/17Z+V+0IFr6gFKp6
lo1iIz9LVUgO4z/2/sdkfrFRKi1R8PTGEJZcIOv7YA8HRVkHyG+PGcA/fKRe
2GdzkPEDXQV3xT4ct7CEJ5KXQhtPl7hbzO/GLh4psdN7KCSXO6HoH9WOBQMz
h4ciKZT8avrRy5vteGOSlPbX2xTakMjirfVox4eux/3NiKLQpjtcHdK27bgk
QaTAKZpCW5yEIz9sbscFpotujNyjkIq8yhirpA0v8u2hqh5TSPe5U6bT31bs
rOWCVr+i0MG7Y0q2Vi3Y4d3T3GUlFKqUySh13tOCKX5+/R7iHZnnrYIMWnCF
k8fa7FIKaVUMBmata8E3vqdSZp8pJDmvt23+8E9y3sRZ9woK9Z5rCk32+YnP
rVspnVVDIXejT/3jj5uxVPannORWCo3V+Pny3G7GF4WFio61UcjRVl9U4kYz
9hP5oCjZTiErz/f6Rqeace5IkHRYB4UMMvNiYhSbsXLt29OnuikkrmcV4R3Q
hDtiXkdTAxTSGZY3FvzSgJNNqhszJymELh5WZ9IasC/vm6yDU+T3jvuuPRnV
gNu+tY/+IVb7823Ou6MNmDFTidWappA8dfmtw0g9LjjknJc3Q6HVAnkbC0Tq
8ZY7U1QMRaN58nr8523qML+UJurkodHcDAeWuGEdFtmbW39pIY1o5Yj+T3J1
+IedQvMcXhqx1DuKxcdrcZC+kZjkIhpN6Fz3Kb5Ri7M07U/s5qNRj1npiETK
d+y8Z+vxO4I0Kj23p6Z8shr/Lb+nn7acRjbO+bCruRprli70lhan0Z8rW55W
FFbjFafvqt0lXhe42LkyrBrnysiv9FpBo+sJpaJf5arxSKLRWwMJGunX61nU
HP2Ge4sTjHNW0+itvmJ7Q1EVLgrbPay+nkb7djw2tkitwmcON+U/IP5lJpDZ
GFmFX5sF81GyNBKzHPJrsq7CJgNXVn8idnF5IfPzbyU2fWG3dscGGimnSDm0
ba7E5XMyM9Q30yhVWGi45045VhQ7MD9HiUYq26eS9T3K8e+urCABZRq9c288
8dCqHFMuRq6niCtb4lv2ri/HQZnS/itUaNR58MxjL+cv2HvV/StuqjQ67f3K
Sg6X4bXL15aLaNDoSqdLXcu1MpylYFZ6gjh4h65ZlGkZft23ZlMu8Suhr9pU
SykWDxzYYK5Jo7HE0ZW1dCl+kMrMD9GikXuVSpOvUTEuV9ip1oJoFKTC3q8m
UIzzRm3T12rT6P69os8DP4qw6K7wSEdixt78rfmpInwh3Thsmpiedr23KfgT
ztRoPL1Ql0YBq/Gh+m+FWJc7No1fn0bRF/W/yx/Nx7LHDaOfb6NRY2u0Xrhc
PhYV/J5YTyxpNpg6Mvke2+0OVl5oSKNnG+7eyAh9j2W2BnxwIM7uHFRTLniH
t/IvTZcyolH1wZh7atIMrl9+pdFjO40UglsFlDoxNj6xIy2BONchqG/sCsaj
Kc50OXGxVNu9yy/f4r0WLLEVO2jUdfsWy23JGzwZwbcyi3iVW8cH77oc/PRb
nsdnYxolHgi5r3s+B//c0yo6QLxFUcOJ5snB2qKR8ot20gj1h8j4aWbjmnWJ
dcbEFpaaN288zMS3RD7PFhB3aHRZG6lmYsfCKM+fxKdEwjQWVGbgx8s4Hn+J
3Sq7fgVQGfjr5px+eRNyffTCTYPt0vAi9u+EaGJJCVi7a/YVNlzXuzCN+Nnf
bjZ/1Csc2BA6WEycnQlpYUUvsZbg6PpJ4mqZXsHbsqm4b1bB1cSUnJ9btiHF
PwVPjlYWWhMX53sFbc5LxpXfZW85EXcpyg0prHiB2w6IRt4jXi3qm6ne/gw/
Zyj3VuLQBYruJaLPMKPrYzFMzPrbrnvI9CnO/9v6jrOLRvVNWytccuNx1jVj
3pXERhUTt7mHnmDkfGBcjjj7/TOL6DVPcFfbNit14ognC/pyQuJwAVfjmz3E
9O28V4YfY7HIHd9kS+Jz1085104/wlW7l0g4EO88+WXupP1D/C7s900v4ss5
rLt86g9wUoKO703iPTFWMpvj7+Hj1JWZcOKFVmt0Hd2icb0RvhxP3KN3vfxW
ZxTucC24nExcKN3zX4rZbXziSvZUBnEs947ez28isNTPuzN5xB6/XlzulwnH
iavO+OYTm5cvmssbHoqPMFsCioiV086Gyc0GYy/pTsEvxGtkE7SjvwZhCSZA
4itx09CJw7WJN/GarlUp34mjsjY4CXtdx8YjSW/riU3df4fs338Vy2ySMW0m
nq+bmRQp541XNEZYtxL78I0EPZ/ngc8pj020E4/EuBasTXfCCg6Gi7uI7WSo
qQTLs9gk7tazbuJke8EjO0Tt8NWpTwU9xCv/bgsP6TDDJ/1Gj5K5GTnssd5X
fU8VzpgJev3zvgQX7JZxBKosZST/+ZNG8sg7LwdIS9yg/+/zw6FfCqzCL8D0
Cpmef9/nPW/brbZOF7iUsISvk5hLq1k27Z4n5IqP5LT9O89lMf4LH30AzAvb
fhLffnVgXGHIDwylboY0Ejf2hdePivrDpLYOU/fveklXvMvUCwSd472O1cSZ
qX5V6srB8MvIL66CuK5stYFYaQjEBPIfKCWe6XmfPW0ZBvmfbwUVEktyHV3f
MBoOSbF/DRji4zr3Ft9fEQVia55pviIOOKLu45F+B6zK210TiVPdakctDO9C
N4dPI5Z4IlPwx4rz9+FAyCadYGLento1LPohPLm/6rof8cMJGUvHzw9hIpJj
6kacL/ix0tQ6FkIMvGzt/v3fVgvxvJOLg2rbFWnmxB1bbPU3T8SBBIr33knM
bUpl8wU+ga/BJxIUiM384V5l5lNoC3w17w+5fw6rtqs5hj6DO2az3D3E9l3+
3xeeToSL3+udvxO7GVQLGEolQbKQXnQacQLnlD8OS4EjyyPbrYhrD8wPT1ZO
hbu0hr4xscWmeiv3J6nQC7aLlYmPN3mxlnm9BGFutW4uYg/NMvV9Kmlw8mr6
4yckH2jBh9xS8WlgOKtheZP4Rt+52mGBdODdpHLNkTj8rrBTyEA68F10X6r6
L28mrV+VxmcCmphF+SSvvmZMyegKvgY1zfsZuSQPzQPLxvl8XsMgW1I6irjJ
5mFh8+BrOP38F3WBuEfAwMajNBdA2XR2LfHs2ZAHOT5v4Nr6rukgkreCS5cs
EHZmII73+GJNks/fvd3PzaYwoJxWp7CYOLq/o7ajg4F1wYcLWkjeryzMeZqx
5x0I6Hmt9iNed/GIwe5N78F1pKHrA+kHVJXoFdSZD4LtCh5rSZ+UK14bKRYt
gDjJmpGxrTSyjLK2n7ezAI6s8O/OJ/b8T8zYM70Amsf5jQ8T485A4XNeH2Cb
jc60nwGNtKYdU/Yu+whhN2+M5+vR6LOFsWTozo8gJrrP+Aaxxbu1EZ+9PsK4
w9DKncQefi0uW7s+Qp+Pt3Y16b83i/cYqGZ8gindW/bNOjTSkFJuEDMphnd+
Krr1pF9LrwmYHvQuhmXVBefvEB/uGXgfkVEMwv1VEvuI3VKePuUVKwEjYbux
MiB5rip6gdVdAgc9izyzSF+r7fzL3eZdBpfi2gTPkX6PyT0as/dQOewPXSJ6
lcwPw4y5t4hTOayo4/xeR2xUuPtYQ2g5jMdWbiwn88dEub6CbXE5aKmO1QsT
7+lYW3pBtQJiGuymYxVInvL9/hO2tBJCu25siybzi4ed96HKqiqg7+TVLCHz
0LeTrtqRA1Uw5MtzKGEdjWTPXpA2X/AVHPeL66oS17naDf/U+Qqh7Ue0D62l
kVKI0c2hl19B6AcavS1No/5c/tzFwd/Apchl88gqGh3hixM12VEDXvxvUpXF
SP+mDGqG2NdArfKiJTnLyLxirHW0yrsGPpaea1YlDvCvTdifUwNB57XTVUVJ
31CLFS3XfIdb5dhgizCN+MfcTM6yamGf5LqF85bQqKBun29Yeh1oD7BKtRbQ
SOYxd3+NWCMolIBu2ziF6t7w3dZTaoSGubZxRsQBNcLopUkjrJm0d08do9AA
t3Sov3cjhNhX33cZpVDmWV0lza5G2B06E8E1TCE9cPOITWsCz8B7Rgv6yb7x
69I1pSfNoOdz//xzMs9vv961lK3RAh8zmr/sLqOQ7JWXOsWGLfC2K9bqOtkX
eC65nArb3wIWJg9255F9otSaJ1/qfAv8uDRhIllMoZ2w6bRRYgv83UWndhRS
yGzMqSBMuBWuXpszbcpQ6IDNvLNrRlth+9lG+edkX7FDa4q3J7eD3HI+m7MR
FNpjGybf2d4FJfHO22v3U+jD07CtRgv7YEhHaNl2fgqJnO7vs3IegAM2HMsl
eRy00jRvtd3eIXh5d0sK11EOkkpMvntx8TDU5pUHLvjNRuGvVU7LJY9AVa9l
6gIPNtIz5xEq0h2DtxEFjsWzLNShFuiH/4zDBbbgYS97FhqqeGJmETkJYr60
+I/QWRh4drJz/+4/4MiVs31qyQxs4HPdpcj1F2zW9KvpOE5D9QbJpbkPZuC9
sL+ea9YUZBvkVpbJspB3y59SxTsToLrr5Vb+Pyx04FfuWlmzMfDO2yihPsNC
/o2DdTe3jUGxdPKUNZuNcop0I9u1xuDwTOKLjHlsVCuwnOfa+jHweP5Y4OAS
Nlq53k3Iix6D93Oimh7IsZH2CP9Fo4xRMHrt4SRnyUZZi/jcRvhG4dCqHQnb
PrCRuohSqnXGMKzpPqSU+YmN4hRe+7GfDcNg8skPq0rZaPrgb6mImGHwVbvZ
OlPJRvebrRzv+QxD8q7iFRnNbLSx8gu1adcwcDy3RUlMs5EdayjZqOc3PK3X
uzG1hYPUHjfWvBT4Dedi9wgfU+IgLZ8ww4Y5v0HzmE3CN1UOerLQ5/Kf8SGo
HPb5kIo4yGlUN3RR/RBMc+ez7XeS98efVQqLGwITVW2XquMc9I7V592zcQjG
IjRPJj3koFJxbZFijUGQu0lvb4rjoB8GJVeXbBgEG8+SdfwJHHRZ/ff0zhWD
UHXiYI/TCw4ytFpvHsYehFS4eFz3NQfdLHkU/sx/AE50J9nXVXGQTP2CW+Jh
/dCoIWbDNY9CfqolFvf8+kBwS6uuOjeFXjq8uWNl0wc7pBNXnV5IIZzGGzah
3Qe5fCqtVQJkD54Mmhs+3QtRHbutHqyk0JWNQU0XzvSCWfBNSyU1ChmNL7eQ
294Dha1Th21OUchGwOvYo6pOMCu2dh5zpJC3R9pg7eNOaEwtjbh+gUJiDUqe
SRc7Ydz9/uckVwr14X29gkKdICOsg0ZvUMgtjO9ayq4O8N9xY5VfPIXkXpq8
0HrZBkLyv0E4kULb5rk6p7q0QazIocOJLyj0YM3fvVd12yC3QzbiczqFgnJH
snWrWqHPs3zu0nwK3Q4O2HeupwV2ZiztSWii0Dyz4HLNoWaou+s5V43c9yv1
FxQnvWgGO+9uyVKyp8vk35KdPNYMV0xyDw3+olCooVttQ1YTpHZblKmQPTs6
IL7+rVUDaJR/7C6epdDQwMD4ww/18Clz09z/yJ5dVWSyZXJ1Pfz04YAXN400
P3R78nyvA37x+NQiknuccw87SuZ+h/v0orJDJEdZb9V7vPVqYF2vU/cvsgcX
i1q8uuZaDbrZhpL8JIf/PG3LdKj8CuX3X2k9JrmN3xY9OjJYBYevLjukRPbY
WC4BledUFVww+xVmrkgjoU3zl22lKoClui+1j+ylC8Yar1t9+wKBK3CpB+kh
2e3XG9a5lIHoXJnuxaTHhk9I6TR2F0N8X/CcONKL22YeFQcKfIItVZMSiqR3
r1+T886pK4C3OVZaH0mvH/XmEa+c9w6MHpaYHyRzR46uu0qjUDb83/Ng9P/P
g/8HH6pTEg==
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1:eJw12Hc4Vv//B/D7vs+pJClESETJiJY9zzGLEkkLH8lsqDRlZqVSZCdpUZSE
sqNebyNllVFEVvbKyJbxfXf9rt9f9/W4rvu+7nPOdc7z+XodUZtzpvYsBoNh
w2Qw/n3WB8i7DOwn0Z3k4Nt5n3ZBTtTP2Hf7SNR/0iUw42MWxCT4Ft7aQ6It
3yWGrgsgcM+S6j2ym0Qar9tYRHYRWJZUrZTUI9GuHm3rtsIS0KhzkZvSItHM
K1efuPOlINwtfLREk0SlXkP5Ki3l0LbkzDM7ZRIxHuQNJ/NWQQHvmjI5BRKp
rJUc+sRZDXHiecOsnSSKqGZu2D1bDfZ6y9WebiHRkV4+pYXUWuj3f17dLEyi
sW3yivw5dVAesXcqeR2JDo+Hrttyqh6Sn40JefCTiF2gfvsi3w84V6x1QpCb
RO8OOepE2DTAONGycGgJiRxkGTHOZT9hwZdPpmqAQC7NjKPnl7ZBa9j7/Y97
CZSUVpjkqNcGKM7O5WwXgd4k8PDZ+bWBX+HbQo5WAkmIOlTen2sDNpbxUYMa
ApVEp7z72/kLuHxuBBTmECjjaZnHbHgH/AnZmhyaSaBoOz8u0U8d8O3J92rr
twTatfPO9fyZDohCG9cvviKQl6uhgs1/nSDIQOlqjwlkoF1+8qtwF2y6Nt2W
cZ1A/ol5uj13usFPnnM/5UugjQHvB2Pyu6G9b2NBqReBpjRzJ9oHuuGpmfHT
FhcCHTm4wlbVoAeEpROOs50i0KNB9fe7F3tA4PuBdot9BIpxsspNMe8Dzi2p
Hay1BLLPiwgpbBiAs23FB4J4CDSU+fxU5OIAVEY2Fq1dTSDR9Im4reKDcIex
9JnMcgLxDllC9rlBWF5naXfoLwtte3nssDrrN5A+7F0vW1mo9Er+ybz1QzBT
Z99t8oKFrBc53gcKjMCgZfESvucs9PHEl6vukiPQ0i4m/vMpCz2zmm+2UBqB
oqFWW/sHLLQ8dfnhQbMRCFpq/ss1mIVcW19lm9wdAVHFfU1xl1hIgUPK1pA5
CgaRijXjNAudFzQ4PNM4CvcPLPsQ3cBEGzw5f58+PQZO+nm8Z+uYqE86bGyF
yxjQKufO6NQykfuNOwtxvmPQK1wvNFTBRMODkcez7o+Bcn+Cuw5iosjUNasu
fRqDH976KkMJTBTeuYztiOg48Kdcz9C5xET96z58F/06DtFs5KshTiZq3RrW
pcc7CcLrk+TWyjHQxvuxo/E3p6E1mW19ffkCxOqEj0b5z8LdllXs4qvm4b8r
37K3nJyDBe9K0bvmf2G7rzyc4lwA8sxYs0nRDBj9mh1WPrsI/PxO1dnLp2Ed
VT1oa8NARRxGJ6+cmYSZis0R3H8YaMuFzi37G/BxXVIMUznPRHFRX8Srxcbg
r2PgCcnfTJRGiha/uDUKYitk/B+bsVC07R25PbHD8NNP/LVjDgsZPdaR91QY
hPiV5RxRnATadrbc02p5H7h5pcbNmRFINm9aITC6C3iDssZGowiU8nbu6Zvb
XbAtWVzr2z0CbU1icDZ4dYHFzfj5zGgCbb/P1i1h3wXliQLFLjEE2unCH/Vx
RxcUm6y6Nf6QQMpyypOM8k5Y5d9P1D4jkM4rlyyX+Q5w1XSjN+Hn4uiDSUV7
m3ZwKniRt66cQDWSmRWuZu1AcHPr9WPvzbpoE6zfDtUuXlI5FQTSrB4JypZu
h1s/0gjTLwQSWzbQuXzsFz7fpEXPagINXGgNS/H7BRekN0hk1xPI0/Dz0NSz
NhDP+Zyb0kGgyfoAf457bXCZn6/0RCeBnO31BEVvtUGAwEcFMfzc23gX6hme
aYO88WCJ8G4C6Wflx8YqtIFSw4ezZ/oIJKxrE+l7pxW6Y9/FEMME0h6TM+L9
2gwpxnUtWTMEoi9bqqH0ZvDnfJ99dBYf75S/1OnoZuj83jXxF1v17/clBceb
AZkqx2nOEUiOuPrBabwJii1c8/MXCLSJJ39bsUAT7Lw/S8QSJFomp8t90a4R
uMU16B4OEi3NdGIIGzSCwMG8pisrSUQqRQ59lm2Enw7ybUs4cc6qdZcJTzVA
sJ6hkNgqEk1r3/Qru9UA2RqOpw5w4Zw3rRgXTf0Brma7Tt7nJVHFBbP6qpk6
mK96qJe+nkR2rkXU/rY60KhY6SuBc/fvtZ0vqkvqQOTsA9UH2NJBq11rwusg
T1Jug48IiW4mVgh+k62D8STDD/qiJNJr0rWqP/4dBsoSjXI3keiDnkJXc2kt
lIYfGFPDuX5o7zMjq7RaOGfZWvQY+7cpT1ZLVC28Mw3hImRIJGQ9GtBqWwvG
w9c2fcZ2c3st+Wu+BkxeO0jt3UoipVRxp84dNVC1JCtTbQeJ0vj5xvrvV4GC
0JHluYokUt4zm6LnVQV/erODeZRIVODZcuqJTRUQbobuZ7Br2hPaD26pguAs
iUAR3Es9R88983H9Cr4bH13zUCHRWd+3NrJQCVLrpaoE1El0rcetsf1GJWTL
m1acwg7Zq2MabVIJ7wY3b8/Dfsv3TYtorwDhoOGt5hokmkya2NBAVsDjNLQ8
FPegZ61yq79hGVTJ71Ntp0kUrMw8rMpTBvkT9hlSuDcfPSz9MvyzFAT3R0Q5
YyNH8w/mZ0rhUoZR+Bw2Oef+cHvIZ8hSbzm7Ugf39iawaPpeAjrscencuIdj
Luv9kDteBDInDWJe4Z5u6YjRjZAtAkHeH0lN2GKmI2njM4XgcCBEaaUBiV5u
fXArM6wQJHfd+eiEndMzoqpUXAC7uNdmiBuSqO5o7ENVCQRN66+1eOE5QD6k
g0exB8Do1N70ROw8p+DByWsAE6muZBV2mXjnw6tvPsBBK4aQyF4S9d67y/BY
8x5mIrk2ZGNv9Oj+6NuYCy++53t9MSJR0pHQRzoXc+GXWYfgMPZOBXUXkiMX
tASj5FbhOYQeCpUM0MiBeumkRiNsK2uN27eeZMFdgS+Lxdjd6r22hipZ4FwS
7f0L+4xAuPqKmkx4to7lNY/tUdP7+w6RCd925A7JGeProxthEuKQDquYfxJj
sMVEKan9i2/BQHpgZTr2y/k+Jnf0WwhqDhspw87JotLDS9+AJu/ElhnsOskB
3nsyaTC4KO9ubILPn12mOTUwFWYmakpsscuKfIJ35KdAzQ+Zuy7YvQqyo/Ii
r6HziGDUQ+xNgv5Zal0v4RUiPDuww1YoeJYLvgSk42c1hs2Y79KxMHkBRfMd
BSw8lzW17qp2y0uA7BtGnBuwDaun77GPPgfa9ciULHZO4UurmM3Pobdzt40a
duTzFYO5ofFQzNby3gybvJf/1uBTHAjc90+xxr5w84xrw9xTqD2wRtQJe9/p
r0tnHJ9AQfif2z7YV3MZD7jUHkNyorb/bWyzWBvJHQkP4SRxbSECe6XNZh1n
jxhoMoSrCdj9ujer7vZEQ7d78dUU7BKJ/v9STe/BqWs5s5nYcex7B768jwTx
Xw8W8rG9fr++OiQZAUkbz/kXYZtXrVrKGREGx9DOO6XYSunnw2UXQ8BHoof3
K/ZmmUStmG/BIIruiH7Dbh09ZdmQdBs2925M/YEdnb3Vhd/nJhiNJ39owjbx
/BN6+PB1kNwuadKGvVwnKzlK1hdEWiJtO7D9uMaDXy3zggtKk9Nd2OOx7sVS
GS4g72SwuhfbQZKYTbQ+D8bxd1/2Yac48h7bK+gA12c/F/djb5jfHRHabQqn
AyaO/5ubncxsD9U9VKHOmfL6/POhRDfwyDxG1VpLiv3zZ/WU8QIfJyo9aave
v9+PhX0ttom4RM2JSPb/+z/fZbvvdva4UVcS13D1YLNptsmkP/Sm8oTHczv/
nc9VIe5Ln/woyryk8xf2vbdHpuRHAygD8duhLdgtgxFNE4KB1IyWNmr8d70k
qguydIMo7ZMDznXYWWkBtWpKIdRvw4D4auzGyk36QhWhVGwQ95EK7IX+wpw5
63Cq6Mvd4BJsMbbjW5onIqjkuHl9hH1S++HqRyLRlNDmlxpv/+0Jx9T8vDLu
UzZVXe5J2GkeDRNWBg+oPhaXehz2dBbvT5GLj6gjodu1Q7A5+xs2M8gn1PNH
G28GYD+ZlrR2/vKEmo5imXhgF/F+qjGxjaNC9X3sHf7db5v4OApk46k6e5F0
c+zunfZ6O6bjKVE6wXcfNrsJkcMV9Jz6FnIqUR7bNJB6WJP1guoMervsL35+
LFW6VJ3DXlL3TRfZ+7EdewN/rDybRF3+0eT6A9tDv47HQDyZSuHTjUnHTmSd
CYTwVOrY+qguG+yGI8sjUpTSqAekup4RttX2JhvP52nUAGW/Wgn7ZKsPY53P
G4qfXbWPDdtLo1LtkHI6dfp6xrPnOB9I3ifs4gnplMGiuvVt7FuDFxrGeDIo
zu3KN5yxIx7wu4QOZ1Bclz3XqvzLmxnbtxUJWRQ9vUgX4bz6ljkrqcP7jlLV
eJSZh/PQPKhyisvvHTXCFJOIxm61e1LSNvKOOvvqN3EJu59H386rIo+ilEwW
pbAXz4c+zvV7T93Y0jsXjPOWd+2aFfyuiIrnPLlaA+fzD1/PC4upiFJKb5Rf
jR0z1N3Q3Y0o6RDL4nac9xtKcl9kmhVQPLo+mwKwpS8f0z+wvZByH2/u/Yj7
ga5N8gnuKaJ4u+S9pHCfVCncGC8TLKbixerHJ3eRyDra1nHZvmLqmEhgXxG2
939CRt4ZxVTbFLeRJTb0BPFf8PlI7bbTngvQJ5HmnHPqwXWfqPDbt6aKdEn0
xcpILGzfJ0pI8JDRLWyrAqnILz6fqCmn0Q37sL0C2t129X6iBv18tepw/71f
baavkvmZmtW569imTSJ1caVmIeMyqiBAWacJ92vFDR6To75l1Lq64ov3sS37
hwsjM8so/qFa0UPYHqkvXnAKlVOG/A6TlRTOcxXBS4y+cuqod6l3Nu5r1X3z
7J2+ldSV+E7eC7jfY/OOxx60qKIOh60RvI7nhzFk7ivgUkWJNLL+SGMblhw4
0RxWRU3F1WyrwvPHdJWevH1ZFaWpMtnEj23WLVVxSaWaim12mIuTx3nK9edv
+NoaKqz31u4YPL94Ofha1NTWUuT9/Po1eB76ftpdK2q4lhr157BIlCaRzPlL
EuYrvlHOh4V1VLAb3R3Gfml/o8K6jmlZSJFIMdTw9uibbxTfT3ringSJhvK4
81aHfKfcSt12jG8k0TGueEHjvfWUD/f7NCUh3L+pIxqhjvVUg9KqNbl4j540
0jxe61tPfaq40KaCfSewIfFwbj0VfFErQ0UQ9w2xWsF68w/qbhXo78R7Nvek
h/F5RgN1SEx65bI1JCpuPOQfntFIaQ0zKjRXkEjyGftQvVALJV9O6XROEajx
Pdc9XcUWqnmpfbwh9p16fvqNcQu1ecbRM22SQMPsEmGBvi1UqGPdI7cJAmWd
11HU6G2hDoQtRLKNEUiX8vCKS2+lvIMeGq4YwvvG7ys3FJ+3Ubp+jy6+wvP8
npu9a5nq7dSnzLavByoJJHPtjXaZQTv1oTfO5ibeFziuuJ0JP9xOWRk/PpCP
94kKW44i8Yvt1M8r08ZiZQTaR20/a5jUTs3vJ9O6SwhkOulSHM7fQV2/sWTO
BOG92m7Z+c0THdSe8y1yr/C+4kBvLtuT0kXJrueyOx9JIDP7cLmerl6qPMF1
T8NhAn18Eb7LcOUgNarNt24PN4EEzg4N2rgOU0fsWNZr8llog0n+JoeDo9Sb
BztT2Y6zkHhSyoPLq8eohvyqoBV/mCjinfJZ2ZRxqnbAOm2FFxPpmnPwlepM
Uh8ii53LFhmoWzUoAP5OUZeYvJY+jgw0Wv3c1CpqhhLyJ4V/hi3C8MvTPYcP
/KWc2XL3zK5ZgK1c7vsV2OYpu81DqtrOc1C3VWxt3uMFqpA/UNc9exZy9PNq
KmUYtG/73wqF+9Ogsv/NLu6/DPrI7zwpGdNJ8M3fJqq2wKADW0Yab++ehDKJ
lFlbJpPOLdWJ6tKcBMuFpNeZy5h0A896jhtbJsHr1TOeo2uY9IYtHnw+5CQU
LolufSzLpLXGuS8bZk6A4TsvF1lrJp29istjnGsCLDbuTdz9kUmrCSim2WaO
weY+C8Wsz0w6Xv5dAPPlGIyknP64sYJJzx39Ix4ZOwb+qrc7FmqY9KM2G+eH
fmOQsr9MJLONSW+r+Ups3z8GLO/d0aJzTNqBMZpi2P8HXjTp3prdyaJVn7XU
v+H5AxfizPhPKLJoTb9wg+Ylf0DjhF3idxUW/Xyl39W/U6NQM+b3MY1m0S4T
OmGrmkZhjr2I6bgPfz/hvGJ4/CgYq2i51Z5k0QWMQd/+baMwGalxOvkJi64Q
1hIoUx8B2dvkntZ4Fv1Tv/z6mq0jYOddLs2dyKKvqv2Z2ycyArWnjva7vGbR
BjZbzMOZI5BGXT6p845F3y5/GvEycBhO9SU7NtayaMmmFXeFw4egRV3Ijm0Z
QQeolFs9DBgE3p0dOmrsBP3G6f19G7tB2CuRtPHsSoKGdM7waa1ByONS7qjl
IeiBmeClEXMDEN19wObxBoK+ti249dK5ATANuW2tqErQhlPrrWT39ENJx6yl
3RmCtuPxOfG0tgdMy2xdJ50J2tcrfaThWQ+0pFVE3rxE0ELNit7Jl3tgyvPR
l2R3gh6EQwO8fD0gya9NT9wiaI9wrhup+7shcO+tjQEJBC37xvi15ptO4JP7
Q/EnEfTuZe6uaW6dECdgYZn0mqAfb54/eF2nE/K6ZSK/ZBB0cN54jk5tBwx6
Vy1dW0TQ90LuHLrQ3w77Mtf2J7YS9DLTkCqN0TZofOC9VLWDoDforShLft0G
Dr59YhXdBC1ZdFdm5kQbXDPOsxj5TdBhBh4NzdmtkNZnVak8R9AxdxKaPtg0
g3rVp76yRYIeHR6eevKxCT5nbV/6H0HStaXGO2c2NcEvPxblw07SGh/7vDl+
4L1bOCGtlJ+kWReedJcv/QGPyFWVFkIkzfig1u+rWw/SAy59v0VIukzQ6u0N
9zrQyTEQ45Yg6b8vOrOcar5B1aO3ms+kSRo+lD49NlILltfXWShuJek4Nh7l
V0QtXDL9HW6uQNJ825ev20VUA0PlUNqgMkmvmGy5afP9KwSJQIWXOknL7LnZ
LO1WCYJLJftW0yQ9dkpcu6WvDBIGQ5bE65D07oWnZUE8n2Fn7Yyowi6SvnlD
1je3sRg+5NpofjIk6eO+HMI1ywrA8Em5+dF9JJ2r46ncwof3rP97H0z///vg
/wHLGQQh
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
aeE=
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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

        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0vk/1HkAx/Hha9lybDWSLcQoWR6OQVpS70+lyFFYdEhWUXSxqR5R2/JQ
D3epwWZLCBG2B+vowA6NMaKxmFwx31hXpdA0jpKx7Q+vx/MfeOkdCvEIlGcw
GK5f+9+eCHYJ2/v45hTpkO/rXvvNtitqrSKZOxEgO+u+h6WPrsoDsTuZ+/DH
1rx0E5Yl7ikaW5gyg1E5VF2jydqGJNNlMbrMcPAqGnersX5C1NMrpd8z4+B0
p0VzEeswLiRyd2gw03H1hvuviqwwnP/lwHV15n2UqHDMvmFFw1NDhaus9wTL
Sns6qEkO4rQMN38J4sFWtb2WmZmBB6x1yqnZz6C6Rc2h7moO5PyNx1PMW2EQ
ssNztrwA0rqLhk+8RZBWSB5aR/+J30JGAnxrO2E9q+lve6AUJ3+/1L105Utk
rxLqlL4tQ65bq7aerRhHnKtijF0rYWOcYdG1qx8LUglv7eAj8KdN0Tw4AGlh
QJG+axWiF/aMCkIHoTl6zPlTYQ0STZOSo1cPI2aXr986nVrYGmTePVE6glKz
u+MitzpY2ddUqAe+Bl+YcJRkPIVf5ukA/pK3mHjArb45yIMZT+FiTuYYHNOS
RyVMPpxVc1KI23vE2yp+UTnYAGVdHQ3loXF8HtIcMbwhQGKxh0uTyyS8XFof
K/Q3omjU34ej/wGC6bbg5+uaoBXzSufj2AccyQ+dSN3XjDKbwUMWfAkm1MsP
rs57jttuXj7fJn9EXmxKTuFLIXQUOdn/eksRBm693uJ/0NDiHXTbdAqp+wRH
i39oRe1c7OC7mSnEps13OfJa0b9xyyut9mlMshU38YPbkL6Sb+heMIPBccvk
DartyPV9aKAVOov3puYthXnt6Cgzy2tw/ISTQhlD5iTC3lMa3UrMz6Ambul4
DItwRtC417XnM9ZYHDS6ffEFKi3l9p8umUOVSGLUoNsBJ4WC70zDvyBo1kvj
w+MOKLx+sf2ZxzwSLiRMz/l1Yql5qPmctgz1UdfqlOY6UanRFcQeliHu/qOI
RZwuRC2p13OoWQDPrNxwbEM33B5eE4RvY5DlNpfqhG3dkIRE/s0tYZC+rJW7
k8/3oH/Gu09JS46YGPU1OWq9xExpgOeqSDmSan2CLV/x9ZuzFYl33smR09kt
ibf29+LM8U2r37vLkyPXFtrXT/Uixbyoe1OFPBm546XUkNgHhwUfD5kuRXpV
Lplbs8XQZ9gbxF+hyOj8Gfv8JjEiVWZXOcdQRNuu6JinUIw+zeKlKnEUcY8Y
SJZrFSONrT6flEiRqmlXsU+HGIsPD4mucyiSPGFwbkm/GBL+5aj0bIpsHOjO
D58SozaB31dQQ5GkejtlF10a2jfD24O5FHkqH8b+xKIRkWvSaFRHkVlyf8+9
tTSsalLLiuspcqhmeS7DmEb+eGB8STNFrCvH7SrW07jqrvjjox6KvMrPOqXj
TGPM94lJeC9F1Ec6U5pdaTgeO6VvK6aI0xrVqvNuNOSjO9Wq+ylSnhWuJPKi
ca783jB3lCLx6R5ZMT/TENXu7418QxFuV2yD1WEa5kK1ti1jFJEu574bCKTx
dvhcNW+cIn43jG3sjtNwkBj9dXmSIimt/n5vTtLIldH52yUUaVK7eSUtlAZD
mZOhKKXIvEtL0bYwGr4rHDiCKYpYJii0T56l8R+jolJH
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVyX881HccwPHje1wpc7aWsRKXVjKuOL9O8/l09VAUd8iMJJEf+VFs6ddk
Zx6aH7WjIlaNXFdd6zT6Qca9k19DcZyf37CTyI8tmRwOZ+2P1+P5x8s0+JhX
qCaFQnH/0P+KAvYXlx2Pcj7bEloQYsWRSl+4zvGZrsjSOj/kR4kJ0KK69dyY
fih4sks7ULIF7j1Zd9WKeQQt8I5375FgUAdVK0yYp1EDn1PFkfDgNiubMGKm
ofu5YltnSRAkGKsvr2bmIaFZ34STJBbCLpX0rWKK0bUx5XO2hA+huctSHJ3L
kZFKLqgPyoJwdu9WcWI1SrMwF+W05sE7j/7TLGkDaqgpOKyx8gYcNLu/XcyR
IV2dDhN1qgge7hSUeUXL0U0Rzdv9iRju+Vpl1vZ0ogTfYGbIjiJoPstot7cn
kYwraFgfUAwH6u3Sa/z7kE5+tB2KfQD1Gik83UMKFDp3YPar4kdwpVh9uXZm
AI0mekwPNZXCwlih4Oy5QXSpZcJ2+uUTKLl+i21kP4QOWIia3nxWAeuCy41r
GocRr8TvWjJTCn35lg+8+CNoK0P/UJLjU9gS3rSosBxDzbIX2e99qoCNTycl
SMfR0iqdiG0Hn0HOxXOPFmL/QVWBstfTidVwRylkpGtPoNXOq5eSM2pAK5Ju
og58h+YZw9XJRbWQtPb18lK7SXQ85ufN9s/roLsHZSqXJhHf/bEVdNZDt1fT
0U3kv2itTURf2cyf8KC9f1QhmkIeRXnmP2k1gt9VGs6LeY8+FggNln/UBHeM
g97ucJlGEfH2vy98+Rza7mLHeLoSeU66Ddc4vADRFK83d1yJGr8dqVP7NwMn
6YR/xbMZ1OkX6Pr3yRb4w8AsPixjFm0bF7O6sAx6IzVGNEPn0L57o4aTMhn0
1IXNbNiiQvYOo+7xvq1QED4wsHtGhQaV7V7eL1uBXpthFtgyj3zLtCwjI9tg
v4WUUOUuoJydSp/xiTbgepg4pX63iK7JLfaJ+HIwPqOjdx2pUYyl6Y0GWjuU
jS2XFtOWEK1cE3adb4d5A8faMsUSinQ1L1F/3gG6G0+xhD4UfEWo935dYQfE
FURZh1RT8AWK04ozNp3Arhhdu56pgfdkek1ZPuuEuN7ffG9d0sAdY+ab9+7q
ggUypbKQoom/2O1iJ+zqguk+YVxwmCbeHsvIOhzYDd7Jez9hNH74TWMVP7zq
Bi2a7oC/HYHlm2Yr5XE9sEGgv/j1VQK7edbqXpzpAT6dMWJ4ncDbs1TOb+Z6
gMyylvf+SmCHVmbstoUeyLzsLQ4uJPBGz1/ahikkqPKyfY6KCUz1PHbFSYeE
5puGRSmlBK7gGZoOrSHhRLnpwYdyAlvxYlgOHBJkTtZuJzsIbJZZGHphJwkW
lRxbdheB18i6cl65kKCAkBVPSQLr8Dhz5/eQ4FYrKm0aIPAw10A6sI8EY5k5
fXCCwPncql0Z4SSc8mTPiyYJnC1QnlIcIUHe5jYcMUXgCy0Wd22jSUjtiKp4
qyTw99yclYpYEv4lJRGqRQJ/w41qZZ0hYW+A1LtyicAeggLN9AQSbvc1O/M1
qNilpcPmr0QSAhQTq7S1qJjFxTlpySQ8PkShNGhT8WZBfH1/Cgn6g/TxjGVU
zGi5O2uTSkL0YdNODx0qNtJTmKelk1A3tLVKfyUV07mf7u8/T8J/iQ95fg==

        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVjns00wscwLefx35ED0pHV8UReeZ1lSTfL4pUujdEdWvlEStlDi7Vrahz
UudUpJKRuvSge7lSayqPyOpiCzUVWWUtxkjbbDaM3O4fn/P58/OximaG7iMo
FErID/732kvLSpfUJfnGM5OLc0cZvjxB3e5H7C2w0z6XnSIOBC9v/0OpbDqk
DR5q9xNHgGxEdyyUnQg6Gz4I7cRxwAuSePmzTwAv/XK0hTgNHqve9axmZ0Pl
HJmNmTgLXDZ1lHuyb8CfwiKaqfgqHEjbdMWDXQmsZymH54lLYbLSQFg73QCC
hy8ykrofQeeFt0bN3Gaor9Mgp/oZKC1epVREdcDkDpPbi2OboZmu558g6ITt
q4q/cc63QYjxpW0H/+mCU1m+FbNKX8PF50/r5wiFwMiVhIdz34AXozHYbawX
uEdyK00EXWDMYSXt6fsMQZ++5HtW9MAu75K4dM0XeC+Wpcq5H6ElMSp6/UA/
8O6/lp8JE0G8uVFSaNsAiEUVGYL6zxDbon+36oMUCFEsKQ38Aidsn/Q/bxmG
ldfl3fc5faA+Wxvi8GkEkh123AoMkEBJ1N3mdqkMGLYBgVdbB+Bhaumt+VI5
JIsobixPKTTXFB8eUijg9IFrC+Iah2B/d9qvP0lHoeKBgb/E9St4j6fWq1RK
6OGFM9wbR8A6jMEe0aqgaatV/OoNMig6varCTzEGe/miiImdcgioWeHtq1WD
eNtSzRorBRz5l8rPU2ogsSGoNrJHAa3GvD6jgXHYLqoafpUzChsiay47ySYg
cD9pXhWuhPDDWevL+idh7evgAwwjFeRcO3qeJ9eCV8mRx1mdKuifiNllrJmC
XLuhZCJ/DFpd7F3Kh6dBlb1ua2SIGj7Em+UrVN9h5+4LTiamGjie3ku9/HUG
+IaNjqV8DVh8bp/8i0nBAqZHfn7mOOTS/BvoSgom+OTNfFs3AW3m1np+iVQM
GhSdWzo1AZbOrLx0JRVtpxYtqG6ahDVOf5QJmQTOlfk22RzTgril+3iHlMCI
glvCUbcpKInj3ViYqIMl5WqFzY/P5XJ7vwtSHRwr8nByvzcNL44uXhHJ1MUt
anrM7bTvILt5rrdqVBd1aXz9VO8ZEFXHm3gd0kOu2rLdQjEDUn5XjumoHgaU
ubfm/UbBJy852RaJ+vh3U3C9wWMKmiXMDuUM6GPD6pPxFSZUPGeo3XMzgYZd
fS5zid+p2Jy3TVYnoWFqRufG56+o+NL84A3xIA3XGxXq0AVUFFw/FUIO09Cs
YG+dppOKn+7cKw+T0bDmwYizYxcV1RwDxpCGhhQJbd6lj1Rc9q5etNCAxPOb
fbr2DFHxlJmtINmRxDvmd2K0OgSeLfQ5yXImMb00wSJPj8DsJWGuT11IDPZw
f7uCRmCBbWa2wc8kDm9uCIw2JLBqZc/GYh8S3TLf27fOJbA3IpvbFkLiU4mx
/OpiAvt6bicrfyExJ+XNXdelBA7Ra63MQ0ncS7kWxbMkUB03mBEbQaLuIrvO
aWsCZ6f7+2jpJG4M8a+OdSBwvnb7sGUUiRY9JPO7I4GLMpiFgTEkfovrWM5y
JtDmTNF4bjyJFzN3FfBdCXSYxS57tJ/EKGPr0H3uBLrmtEZ8TCDRo1BqOONB
4EpTkZ5O4o/e8iouy5NAn3z1Q7skEt+x0465ryLwPwUoTwQ=
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAh7dr92A+cD5A9QYBxzZqvi6xnaUH
zU0/Tg474NkLSL9/0xmsxsxdP0AMrXKlC1i/qORXL6bMbT85C+Y7iwtovzzt
9vCVzH0/toqCIH4LeL+GccbRjcyNP3TK0JJ3C4i/qzMuwonMnT9T6vdLdAuY
v74UYrqHzK0/Q3qLqHILqL+5mP15XA2/P4Rfi25TDrm/YSFvPTcRxz+bQHiQ
6JzCv97Ce6rhdc4/catT4BiUyL8Kl6R8ez3TP+skCvy5DM+/kVMQfYT71j8H
L+hxZovSv/R0XO7CCds/6tK4SyjR1b+TvPYVEgXfP8zj3eCiB9m/jwVLy+9d
4T+B1Apc1gbcv0PfCkRxYeM/iUwlPcJG379tPE3psULlPzPSI4KzJ+G/tay2
6Xoa5z+gNF9DYqTiv2tPkKJeGuk/tlqRN21B5L+XdeyHAfjqP7Zwx57UwuW/
Mc64Jb/97D9gSvQ4mGTnv+k5rB4F+u4/iFrLMLj+6L+LFBEiBWrwP5lapps0
feq/WiUEERVr8T9WHng5DRzsv+N3OJYEW/I/+9FNSkKf7b+k46R3AV/zP0tJ
Go7TQu+/89ikhkJe9D+Me8iXYG/wv/4P5itjTPU/acoFooUv8b8/YF8tkU72
Pxl7vsXY//G/PPIZxZ4/9z+/I/kiWsLyv8cNaIrwK/g/pOcIrwmB87+KQu6r
Tyz5P14NlFTnT/S/B7m1Y44b+j8MK6Ez8xD1v7xItXfaHvs/kKopLC3i9b//
YUi5ah38P1JFh1OVr/a//rwckdoK/T8K2Ga0K2/3vzMxKcVXDP4/lszBLvA+
+L8k53aPtPz+Pxe5nuLiAPm/oyZYh1Xo/z/YwFDFA7/5v62/uO0BdABAbSp+
wVKN+r/mDObiSOsAQPiLLffPTfu/umYvhpZsAUBWT1hGex78v2xhmfRT5QFA
qgoFz1Th/L/lIM15s1sCQD3hhoZcoP2/+uwcrRncAkClGYRXkm/+v+xZjavv
UwNAAkoDYvYw/7960xlYzNUDQBru/kJEAQDAzxFwG0tVBEDSxGZsJGgAwALx
5qk5zARAhZePshvIAMDQ3HnmLk0FQCIbdgUqMAHAfGkt7pPFBUC6mh11T5EB
wO+6qgybOwZA8acv/IvwAcD+GETZqLsGQBNm/4/fVwLA6hf+cCYzB0AvIJBA
SrgCwDyS6P07NQdAqJzsxfi5AsCNDNOKUTcHQCAZSUunuwLAMAGopHw7B0AS
EgJWBL8CwHfqUdjSQwdA9gN0a77FAsAEvaU/f1QHQL3nV5Yy0wLAHWJNDth1
B0BLrx/sGu4CwG7cN5vtdwdAwyt8ccnvAsDAViIoA3oHQDyo2PZ38QLAZEv3
QS5+B0AvoZEB1fQCwKo0oXWEhgdAEpMDF4/7AsA2B/XcMJcHQNh250EDCQPA
iIHfaUaZB0BS80PHsQoDwNn7yfZbmwdAym+gTGAMA8B88J4Qh58HQLxoWVe9
DwPAw9lIRN2nB0CgWstsdxYDwBRUM9HyqQdAGNcn8iUYA8Bmzh1eCKwHQJFT
hHfUGQPACsPydzOwB0CETD2CMR0DwFw93QRJsgdA/ciZB+AeA8Ctt8eRXrQH
QHVF9oyOIAPA/jGyHnS2B0DuwVISPSIDwFCsnKuJuAdAZz6vl+sjA8Bv/Vop

        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxX040wkcAPC96FpeelJIV5dJ9/RCQ9dUevL1cnoRl7xUrBKLuqZi1ptj
iVBL7nYPbqlE5WWrJEtvl31/tLE0rxEmCxk9uQhRLHN3f3yej3XYMb9wColE
8vnP/1dpHStMjQ2I+dvNWZo0New8M13PNzQgyCZdUqVADVrLWs0AzYAYqJEY
S8+rwcD70DfFDANCtslVlnpODe6lOWtjp6lEhAvH2jFODTK+UXHPCJV4uKqi
P4mjhrL52mxpO5UIMD7CW+GlhltbRbzAQiohfCG/xJupBkZ9n87KmUp4uNkP
NJ5oBy/f4TXLmimE7WD7hHyoDcj20QmMKArhdUi0dh+nDQ7Yt19/RqUQeW9N
c2UdrRBkOxWVmkMmGGkvnzwIbIXJLbMs2h3IxCjTVR8tfw1OckHtSgWJGLyj
jG5hvgaDDUqnJ/tJhFWQMKuupAW+FXT0X+2fxgsU8750eguY1+coXBdN4/Lu
tr7ey83ALvVW9gboUZ9WYtFt3gy09hpuVtwUGjt5RN9KeQVN40RCRek33G5m
ET9FegWju1KdJlt1WDN0U/pDVBN48daZ/kTWYZzIc0FvdyMoUkO3a9dNIvvE
MgfXvY0g0gQz80MmMGmHPJpd2wC/26n4moyv2Baad2DR5gbQlJtE/fjkC77U
cA3Wc+ohzNA5JbJ7HP0yaq4l+9SB0S+aaTvLcdz04MblKfdaMGrxs9ZtHENx
3acP1CUqcPCHAnfuZzzpjzlMs5cgSLPwFUhGUcotK5Ea1cCGWbK8t40juDfN
2pL4Rwmm8Z07i2eOIG/O7J4vXdXgsqZWKrAbxsn0KLJMVgV5BYXMg4GfcLBw
kt+QpwBf+mdm7IIh9LadETJbJAfj2PW+bhEf8Xtxcob65HMwrTzqqKsfQH9h
il3T4Uo4m3B6T5nbB5ycd2+JBbsCchVLWwXC9zhH6HP0/c8E0CbQ0l/fh0uH
29apYmRgJdWJnbZqkVZGce11eAZnWMsoJvffYaXPKmN/s6fgFbv81jt6D+5a
WJgRTHkMcquazJajXajqNFbyn5fB7IOPrvKknWh5PIaYkEhh+MrCuzxPNXqQ
q9jC8PsgKV+543j/a/zjXH1KUmAxjP29IIn1/BVuKTFrENpJIKd6a8ApVgMS
Csdj7eJ8KA2RRowF12DfOV9RXUweNM9a4a1bLMcE1kLeh/xsCL3m1vXm4VMs
TfBkS0qEUL06FEsZdzBxRKsSiBNh+RtX3Zfy25g7urGgd18iCJLpazf63Eb8
nHnGxSwRvNveFldzJDg57rl6hH8WGuP35bwpKsIYXf5fQQEJ0KFkxX9nk4/V
NJXcV/8bdJbfOfGAcRUv2KmGLoq5kDsnctDF5woqGHE3wIwLYWzbiBecbCQ7
2gWO8qOhjyYJ1BSJ8DQz7WlwQBR88i9cQ7PJxKY4kaG/ngO0Zg/tI0YaZuaK
mOniMLh0urJZxRGgSf7X7DF+KMy1cpN3F53HFPFu0t6A/bDosMtNI5tk/HjA
MWuXngUhJG6ljBGH9847Vvwp9oNftx3Le190Cq8Lhy+GBvhCTFZkwlyb40hn
su/u128Dk6C6OBUjEnt2s9uuiN2BPqR0ptuEY3JLVQdXvwEOGaYO9zP24OaJ
qu+KxavB6shX9WJ7b5znnM5uEi+B/D2s+495HNnZ+vBcNsPd5V/zVH8n
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0vk71AkAx/Exk57NVkqObXNEpZXG1eHRtc5ipSYSW5ialQpF1pKkWjSu
kNugLfE4G0fsYhyfL9mZQpM7GsoM1rUVmQrNNNv+8H5e/8Bbm+HneJZMIpEc
vva/XqV+6ws6KUS0dqRsUk4ED6+UbrXnFGIHUlbdIIngrF0TF/OMQgy75W1Q
kQlhnfFF6ttGIUwyW0wtJEJoR8SLdrRSCMFqOX/WRyGGTpaWNtdQCKokbMRu
RggnhYn9w39QiO7+4OaSXiHML3gwlC9SCPXbPhG+hUJYONTm6MhRiJOafyY4
2QixscVVxTWHTOhZebdzpkbw4UjuoygzMrF3+zDpbeII3ss5W7jw5YjFfY8a
Iw1G0GFzdPURbzkigRh3MS18DX55dceYlESEn9C32i56Ba5xS/lvKSRCGviv
Vt3GV8ixVu2iGpEIVm0k/aDvMHZ+LuF9GyNDvL2QnVU0hJmEvy4oEF+QS1Gh
v5sTINFRyVm6JMV+61a5oQMChDOsNxltkcK417Qq8dpLGKVSLlW6S2AdE86z
4g2CqsTKDrj1GWXxSdNN5EGoEdeVfqhcQu736rIuiwE0JM7Jb59ZRFVHWNB4
/AtUlO4Z8lNehAY/T4K2fpyeWmNIPryAIvH98SzlftB/bfTsDfiEGG/G8L6j
fbCnckaz7n7E/Pl73KD4Xrz/xvp1ef8HhN2uUqoc6MGkUX7jMpkYHrK4i4+U
e8C6mvRd0S4x6Bl79avdu2Eq5jf86D+PyRqvlw4lXdjMEVmpZb3Hk60nMssm
OtGRG3Fof/ccnjao1ymadKK1b4matzgLC8ujXX4v+Sgya3GXbp4FSd1t3azL
MyRcpyofbnwLkrnahsvv2uGtE2GiofgGbPIp85vn29C4Yt4uLmwG2YoO+nc+
P8EUjSIWzk+BRd29+DyNhyoj4pda20nYTBeO3V3Lhdgpo0Of8w9M5nhpvoWt
6FHc8FlTYRzP0v09n2o+hp5inU550CiKmbwF3YpmuF76NLT162epUSr+1bYE
tniJ3DYeGIHbkYEV9281osvyeanPqWGs0RE1DbA5SJ820Uv/NAjtHdIyKqsG
qxxftCfl9cPRa/lZUXI1AswrTvOie7DcwLcgk6jEutOim5JtndjmxbXpZ7Bh
uSpZ98XKNtizLjpff1iIx4MjaS6jj/FwzdzsuNIDhK5tNS07x0GsvIH8SlkG
bFWN128TlIIZPFCaT4tB89a04EafUjiGOmkxZqKxx2yxjyYpgdYNfrIWMxpU
t+bkYI0ScJitIVn1UVB6cGzl3/QivEmrOHRHlwkBNUBGH8vH8ero0VBJOIZi
vdr1Bdk4KLq8u4AWAj7bINpRkoXXU+c0tJlX0Nz50TpEIwtX59yX5dQHo0A1
qolLz0QZ6afuJN0g+D0orDwzlgoVLZ1LYZIALAvsMjQUxIFbk29fTLuAqboz
xdc0YrHEvbP+Xv058GVzOm30aBj0X5tI1fVCRpyS6tmxSKSJj0fclDBw/GDh
wi5BKJ4wFILKaT9Ds5s300m/AsPfRWuzdU9gwn3ylc9YINLvcdhMiSPmpx1j
rQQ+eFrb11ZPswOTnOofMuaJjA+3yCkSSxjvLGF7CE6h3dM3sJdmBjbXVZwq
sEdnA4snf0wPC/oH7Fw2+TQhlfwwvdi26T8k6bCB
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAsuJMBoTrB8DsEzSyD+QCQAEoTT2j
6QfAbAaw/pPiAkBQbU10wucHwOz4K0sY4QJA7vdN4gDkB8Dr3SPkIN4CQCoN
T7593AfA6acTFjLYAkCiN1F2d80HwOY783lUzAJAk4xV5mqvB8DgY7JBmbQC
QHQ2XsZRcwfA1LMw0SKFAkBS6FRMA/EGwM33M+E5HgJA4btjbld3BsBh/9DG
Ir4BQJoaz48OAAbADcDWNe5fAUBv1x93qX4FwMkk45W9+QBA9bWI+uYFBcAh
TYnLXpoAQJfy1kMIgwTAiRk28gMzAEBjuoGMjAIEwBE+l0QXm/8/4aNEcbOK
A8BJ0PVPyt3+P3rr7Bu+CAPAoKphPYUQ/j/FVK1ia48CwC8MAdbjUP0/OknK
qHsYAsDt33GBB5X8P8qbzLRvlwHAzPvvDjPJ+z8MEOdcBh8BwOKeoUcCC/s/
aeLmyoCcAMAYimBi2Tz6P/A/QzheHADAfefwj3Vy+T9Tfm+DvEn/vxvMtGi1
tfg//TgjIoRG/r/a+IUj/ej3Pwo3B/mQVP2/z6yKiegp9z9O8bVbZU78v+Wo
nNHbWvY/5sEdvf9M+78rF4AslI/1P+HVtVbfXPq/pwyXMvDR9D8Tphh8hlj5
v0VKuxpUBPQ/qLmr2XJl+L8ZDxOuW0TzP5Hj9zUld/e/HEY8VCiI8j+yyQ4e
n3T2v0HFctz8u/E/NfNVPl6D9b+cy9wPdf3wP/DYZ+rkffS/GRpUJfUu8D//
1DKVMX3zv4q1OZt0yO4/cRQueMON8r9PRTJCRk7tPxoQ9OYcivG/V2VFrSe0
6z8mT+qNu5fwv8uTv25QNeo/DEkzZ0BU77+fptxVA77oPzpsJ8qYUO2/tEkU
AcYm5z8uFnyde2/rvzf7sgLQquU/kDhmiO1l6b/7PGzI6Q7kP7jhsOPpfue/
Lo2M5EqO4j+Jt208cqHlv7/BTyY2FeE/yAXArImb478lDVtYYvjeP83aco0r
uOG/prPkEOf82z9/UHYLuVjfv6t6o1GLwdg/tUTr9jJU279uCqjdQ5XVP3ZG
IcPBlNe/Crd6Fouf0j8UOYK+boTTv1gIBa/j084/enJINWFyz79P3LCKztXI
P28lVeMUAsi/wUHo/OH1wj86dG/fCeC/v3vQE/9oLLk/xNM4ez3QsL+5IR9v
kY6qP95CZIn8jLC/jnnaL1ckqj/4sY+Xu0mwv2LRlfAcuqk/WiDNZ3OGr78N
gQxyqOWoPyuZKNlrbK2/YeD5dL88pz/Oit+7XDipvwqf1Hrt6qM/FW5NgT7Q
oL+3OBQNk46aP0pMpJ28SaC/Y+iKjh66mT/8VPZzdYafvwyYARCq5Zg/zc1R
5W1snb9g9+4SwTyXP3C/CMheOJm/CbbJGO/qkz+3onaNQNCQv7Vm/kiWjoo/
QL5IjHmGj78KxutLreWIPxE3pP1xbI2/XSXZTsQ8hz+0KFvgYjiJvwbks1Ty
6oM/+gvJpUTQgL+uwtLAnI56P5cJSS56bH2/V4Gtxso8dz86+/8Qazh5v/8/
iMz46nM/gN5t1kzQcL+genuwqY5qP0agSXJ7OGm/8vcwvAXrYz+Mg7c3XdBg
v4XqzI/Djlo/pM1K+n3QUL9Pym9O945KP5YnDKVJYXC+LADlb1HfaT7Mu4Bg

        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVy308FHYAx/G7w90Ky2Gdh2pTuZ6sTm0SjSiUiENdyXKiCy0sD6nmKUoa
I8pDi10dL3HnlYptF/n+yvUglcc8VNRZTZFnnbs8rf3xeb3/+pjsD/U4QKNQ
KK6f+1/NPvlQ7nMGWSgzWxWoopGKrqHj0g4GOeVa8Khvgkb2NU1rPG9jkMG2
ecGHFTRS/rfhAuMWBql5P3r1yBiN7Ermbs2vZxD+PCk7ZoBGriy9I7xczSAi
b4fFmXIasfQVcksLGGTZyI+G1XU0EtC672bVfgbhLEpn6FykEa8lfP+613QS
1OjScGMtjYh0hrPCD9LJaOlOkzXNVOLfXakXN6xBAgPVF2WEU8ktHUp8ZKgG
UYv9kv5Bi0pC5R0/fTGhTgar/KNNyiikar6F4+kIdTLL1W/jOlBItFldyIFx
NaK88Kz6Sc0szr/uY8l/USNZHQY9pZRZOKoyypwmaSS6Xrc7Zu0MeOX3ap1P
0sjMl6JBtSPT6HTirLimSSM+BnFenpVTGN389YmZs1RCb2aey303iaDuS659
ulTi9tKqJ2PFJI52FWjdyaCQN9lGc+O8P0FR3Wak0qEQLssx2SJdhauRVp6/
r5uF7zuG4eUmJTKtGrcZmc9AGhSfQFVXYsPGRLtm22ncsE6f0d8yAW2GrS7f
agoTt708FkUoIMsUJJRvmMRXdMHkcPFHWO4Vj2xw/oSWAm1p1PtxdH5QWuU5
qvCi95DrqNE41lf5nzL3UiIpga/4xnsM0c5WIamCCdDlwnGD/FH8e8WQcztA
gZbhnDp64wiYlvPH2BEfsYlrerNYZwTB2cbpgtBxKP2Cwm3shlFUmVoXGDoG
3Z9HmT/0DyKfaaxRGD+KCNgI/EMHUGtxw7AyZgQhIcqDkS39KMoVrJn99fNX
05054NGH1ijtByybIWRc9AlUdr6DdIev/KX1AJjtTv2Dm3rBEvZP6/n0o6nC
N2d77Vs0JqY8Vni+x7KxN8NZpm+gLvfL3x7Si5rm7HB7UQ+mwBSbZr4Fw+a1
MHG5HO7mLcHitH/wRG/1BN/4FRYuaDATieXQHByfOb3gJc6uldql2b9CZEq2
X1JXBwI4iaLuTS+weeNBw+KyZzA3uTtHP6kd58zPLcmuaEaFxdJWYVQLWI2r
mFLFU+yKVTgs8WmA1t3euO6Rh9idTWs3HHmAuh5q3g7NWqQOlfBj64AaTVHD
861SrI9dbLpHVo5nf+04nCUpBcdPJHNKKIeb0IAttyvFyi1LAyxsylF/pqd7
dXsJLPVdHJeFXQP2RLk/opZAzczT/hKvDOLJ/HVUXjFy9/pZnWaXIMF2QBVC
LcSdWzErvWVC7PmNpX1BchEV8XFB622EcPcVx3La8+CSRuOuCPsDWzi2w/XU
PLCK5rgW8PLBaRa00Hg5kLSyHM6w80Cf/2deGPU82tZ9972PLAMHrEtcciVn
ERUXKvg2LB1uXY1rGqgpsMuJ2n+FlwbrOKUunZeMtvtJ3qnsFDBrnTrDqUmY
Nb3szJfF49iFx/UFkuPIOuGeVsqLgVuncaYW7yiWi/edOs8+BvbCQ7uPUyPg
MfdEZKAsDIXb9B6JJcF4Gq77opAdBG7T9V3J1ABMNK+uj5bxobouvH9P4g37
gOyoPJk7RCeroJI4w9au6OHNnWE192RegWlTQTX/AS8AkLY=
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVjns41HkYxX819/nNbx8ilXZrLLPpJl2UCt9TKW0bWmwXKbbWRLHWlpZt
0kiWUlsqw4ZuZJUWlUohExoqRZY8ZlyS5JZb7rdtpz/e5zyf533Pe47RLj8n
z4kURdlr57OGm7lY6OuwQE0wr4gJyCVps/yLVJ+5k+PmnZtLKsR/bgvSZUGu
1jSu4DwiYr3iw3WTWFDeCe+tPf+IZA2uVKVM1t5L6yeZZOaRFqXxFuvpLMCz
yHTrsJJscO4NlH7DgvjZwT3vlhUQUeDZnCwrFi6fq3w3lllEIuMkZ2f4avfj
8hKbrDIynKPr6nhB+y8+aqf/mkqSLqEWJ6hY6L6mySy/X008vNa43hzQ+qfV
NmtO1hHqev3+P4zZkMt8rqeGN5ALBWUaIxc2dIzW2VsPNxKZpNBFHcqG+JCV
s9T9PXEI01HuyGCDos0D1se3EMO8W0FX37BR5ngkLFjQTioHUiW3GQ48nj2/
5WvfQaoDUt7WLefgzMgS9IV1kaqXwx0l3hwUd8l27hnsJoWSpPYwBQfm47Vz
Fk75SFI3Jy6jijjgN/l0mjj2Es3LpPMxAxxcniXc/VNIHxmx/dQ4/DUXppxk
T+pSP9GLTgv5ypkLca6fu6pigHzZeE9XJOeC0rFsbukfJDNp/e7sDC42WZtJ
LRYMk72/76+PeMOF15NFihe7RkhS89zHYoYHjxYLl/yQUVJttrwnyJqHsiap
oCFrjIzvv6R3cS8PpsGKjW6aceJN8e3qFTxY+lfAeOg/Uip9Utyg0vpnig1O
GFCQPNdYpffyEO9cWZ6RTCFAYPfJ2oQPUYBR5IfVE8CczixvdeajpqBvukPN
BERPOhTrIefD1KOod8e+iZjyi+JmbAYfKa3mRUe5LEQ8F96Jq+UjXvlXww8x
LKz6OeRZtkCA7sLjFQ4SNvrbNponLBdAdk+nwC2PjVhP/4hvpQLI+xVDUx05
sHjYZnZfIUCOUebstjYOHotyi7oKBPCKK7viLeNCkRzlv7ZbgMDVBz5+QfPg
aZjt7SYWQvk6zebpNR6MT1q72NgLIc9qebVwqbZ3lf6phsNCBIY/8Egv56N2
b+frK/8IURKqW+zkI8CLUbHefLUQsS+8DiaNCnBfmpIQJKQRz94ipmOEiCqN
MIxaRkP/uK2u2JTGnSP7Up7sptG94oHa9R6NUkHisexzNCh14aUbm0RQRy12
lilpHFOVpqa8EcHPzsrU9jENy6uRl+c2isAetx2n82m0HLaLTmsSYYHX5r/j
CmhstMgLzmwT4ZhN0OhDlTYvKe17ZZ8I89sfJQ6X0EgKOTVYxWcgt93Qd7Ca
htLquzW8hQwmjzg9tVHTODCVZ3liMYMb6dsvcjU0TPry5zFLGVQY+q5X1NCI
SF1hoLeSweye0/F362lsMpzTOmMtg/KEStu+Jho1g/zTS7cx2ONcNy3nPY0z
/xaGPtjOYIzf3BnaTAPp8kCrnQxmHRiK1WvV9pEO/bh6NwPZhukdiz7Q8Kls
XuLgy0CXMskf0bL4VuLsV34Mku/Oi8nvoFF20n2Gy68MysQ2q5y6aCyxreK5
/sbA8/U6A8NuGu9mnhurCWIwEunY3qDl86MOPe4yBmdWbVVe76Gxvkr4/m0w
A8mgR7T/Rxpjt1VqzxAG/wNcsiG+
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVkHtUjHkYxydzf9Vr0uhyDCXqNJVLRthTdh6OZXSZ2pZymdJFdkpqZVAt
E6k1yUlstXZXt3GZIiVlGhn7+x2rKFqlURtDjXFaVChissm++8dznvM5n+/z
POc8c2JTwuKn0Gi0YKr+7yOBHUv4PDoc9Ln9ddGeG2J9/i1VJcW05Prs6243
xKpOndHflvJVZW2mh3qxS0RFdvx0il3Swhcs1YulsakGLZ/K84TJtz80iS+k
8RWbnCh+c7RkfJ9OHHtuY32pK5Wvlk5EZtSLuyb7fYS+lJdW7w6eVItF7udr
ZJEUB2ueSAIq0dKgAq+BLCrv3uPsNh+jjOF0j3oN5c0S1r/8NuRPdzxXep8O
cDCwrC/hAapweDyn/z2Vb1bGp+3sQdnlYbNhFgOi/crXq4xGVHm29TfzagZ0
jMaYBE4mlKKJd3iSwIBF5vRhXrEZNczW2o2dYED/ICcfSwbQ6UIvXlwjA/C0
0sN57S9Qc075Mb6R8sENyzXfDKKkwVbVczoTQs+uzFK+G0baEMccQsgEy9HE
At1Xb5HSY6ZVyLdMeHv/TdXxwhF0ZP+sz91pTOCofedOezmKRPdXjzeUMEF3
aHLNaff3KLLYZU9dMxMKhqf4sjPHkFA2Z4Q+SO3bfrQ9E39Au4u7hxR2LChI
Cl7ULbCgL4F5cqEfCyRfOkYNqeNoPi3+uSiaBafKeraa6j6hXo93fTIVCzj3
nH65O3UCeYSef/z4EgscWX1pf0o/I93oxojSByyA9m1NcXmTqIWLwzI/UfMu
7i2mZ1/QPucgqdaZDRh8/9CeoOHzVcdap0rYELRsj3KH2Arb1967dTaFDXJF
UfL7l1ZYWO+Dfy5kQ+jyjyJG7hTc5BXoV6Fng+Tm3qdZvnT8Wp2rZTxjA79r
WZSqm47jim7XXWRxQO7ZaxOrYODwiWveuxZwwLD2lPqCMxMPxXRqjn3HAeuh
U9YZiIlp/iXqlh85sDG8cYsuiYUb+fkl4RUcUKx1OHiAZONaudLRs4UDgswI
g/0lNnbzmWsneM2Bv/dftXHexMErLEM22+y4EG21QVAzzsFdoh2qNj8uWAKn
86o1XHzx1YssRRwX5j2pFSnDCOxWnndAoeKCYCzfu2eEwLPann08eZnyXXlE
WelUrBuNSmV3c2FiWduNYbE1Lix+lIQ+UfvNL8p5T63x6xrinyJXAozr3RLU
uTZ4sHlrzM21BMwLPsO6LiSxvyAlSi4hQIYyzTneJM5PVW4h1xFw2keGQxeS
eLFzyYbNAQQ42s/IGFhC4oy0R+tGgwjg9/00bAsk5nhtWOwaRgBjV6JBHk7i
eQUB9CwZda/QR21/mMR7BzbRPCIJELDJTFMOie/4J3xup1iW/mpLtYrEO14e
+ei0lQBD5JkZq/JJfGVV82BdDAH33Gfk7vyVxCvHxAbTdgL0OkvKrVoSnwwM
6TzyPQEWz4dBx6+Q+HlF1F/z5QQsL6kTbr5KYpX0wJ30BAIaDiWa3zSRuEPT
pLdNIuBygDF8ZguJXSdbrzVS/FavEw3cIbFifa82cicB3guLeHV3SexgZblc
lUxApZ20bU0nieUR7JqQFAL6czw1tgYSN12yvzhGsYuFlW3sJrE1w73y9x8I
iE40R2t6SRy12ffcyl3U/4xoRaqRxP8B3aswew==
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVzntUjGkYAPBp7vNVYymdSlG0TMVKU5qmab9X2i0pappkUym6IhJt4VQT
SUJO7C7GGnZT1KImHTW28T5jSEjIZRm5HEJlkmroqvbzx3Oe8zvP1XHNJmki
nUajhVDxLaem2k8avUdAer8sOnUvH6WwBY7RlO047rLuQspl7kLNXQJapk0K
Xl/AR0nPAyLzWglw+ummT1oeHyWEZZxktBDQfsR32uZMPor1vjHf7AYBgb6z
9dnxfCTlbQ611xBgXTQYWeTNR+LKa6VkJQGN9orwM13mSO8WvnNuLgFPLt1y
zZSYo0Wr5QuMEdQ+/muxRmGGMrD66e4fqPuEV8KCMVO0JVnfixkE7N+atdEz
1BT5XDp27eEzHkhOKKsvVhOoLRhxDtXwAISq+1oTAgmnDvjZFPJAsNGEP7aC
h1YV+PvuiOVBdrIov6aei8J9csp3C3lwujXqkZHgoinHZC3rTHnQYFwbdzGV
gxQCkcGmgws1V6pYytts1D9B375ZzQX5l/Z91g5sNDl3Q1NZKRdEPZ8DzeUs
RPPXyHOTuNAcNvKutI2J1D62HrMkXJBESU76CZhIpJ9a8bclF/50TCxJ28tA
e2Bo960uDtxbsS1W8JyOToRsd7qj5cCnoK2JMRI62jXzjVv2HxzoOBcVMrPE
BAmdVy7sWc8BqM1dbvGGhiofrx+R+HOgIGtvUe5iGuq9nTTX04YDSDbhPzB3
ghxLptlz+9gQ6KV+97zrK/nAs4JdfpMNDms+NjqcHyO3LxXGdivZcDZlRLYr
YpR8z1m9lchiw5DhQZTecoR0MssYaltKObhgZph6iHT1K81MdGRDs7F6ukPC
IDk8fbmqbZgFKbaVRW++/0IeWWyM6mxlQcO0bXVNLUZylC/SPalgwROF1TJl
8QDpbFbkdDiPBc3x8+1al/WTc8LwwGcZC+KYM87ZD30iDZLf84XzWHBqSUO4
Lr2XlKdLc2zoLLi36FVb8b8G8lnQBS/9Uyac8iyb5+PRTdIirT4k1DLhO3V0
33H1e/JzVaLZ0T1MeDWgE0l4b0lVebihfDUTQl2aVl0vfE1KOgXiaA8mIDcD
0+7ES7I0mshv51H9Lt5O/J/15Pms4kKv1wyg2TeO3A96RB7T9w2L6xkgH/VQ
OTffJYM7Bl1tDjIA/ol5Jq29TjbPICK1yVTdQyvdoawnLcsYnyb7UvNxFfEp
0nxyzp3jAb5TKeO8GIVehUUeyWn7LKl+2gHHcWEtDjzufvipBWU/xdv4A7U4
JfXmi8wplJvq0pzRRXyWNZh5YRLl1q6chvI6LPhRenoGQflFuPJxej12ruaa
0CfoIP865+UUjgaLrR7ODh2nA430LPs1ToODck4GK79SzvdL1qs1eN3ShUfF
Y5RZMb1/bbiCq96vnb9lmLL5oQm3NoxdHHBMxwAdEH/84JllWizeU7zL/Zur
mRm/7NDioI8RlfJ+yqGmMtOzWryu0WC066N8yNp6k8lVXLXSdn/ER8pWwlML
667iy/itqqyHcr33zs5XV/Gt2ar/+gyUV6IEhbkOdxsDZpV8oKwIEYwn6fDI
Kosl7d2UfWREzWEdJnQvNrp8c3uUIR502Nal6rfsLso58a0WPTrsWpp5uamT
+n96Ss11m2v4f9rVPgk=
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVjmlQk1cYRkOWL3saJSCMlk1AoYFSCVtETVlULJRMTVlUEFOhiAozImrB
KgIWEhQRgmiBpjquqdYULCAg91VC0LakskMFhRIGCghGUCMS088fd945c848
cx2laV8lEgkEQgT+Plzi/QCbYCoT9Lba+ORYDjT1BIwrMSao7awr7aM5cGgy
oHaRwoSjK5MGeiUcmLQUSmrJTLDxwCShYg50JgmL3YhMCBdtDHPaxIFLrLU0
rokBd5K03oMCDgTFBBoHXzIgr0ZLE3M5cGJ2ff+hpwxwiGir9mtjQ4NNIy+w
mgESnZbbuJoNCyOx12cLGGBzv2UFUrCgs/mU8kACA/SpzVtUJBbsPudrmS9g
wM8pdTlhSUwwsUlPZUwGvOi7lbyniwGR2Rtd7J7Rwav0Usw6vBNido9P1NDh
KL0sxVhOBz7fprNLTgeJIc9dgNGhL1wmroung8Oq9PmVyTSQsz92lfnQIVsX
v0/RTYWekZCd7mw6THhtxqaDqTCgHuXFjdBANPKp6s1VDMbsrzgeq6cBn2S1
mMvDQCUbUnmdogEt3RityaAAlaoqr06gwXTVQM/UABn2OV944uRPg93CegvF
ZjLIA80Vziwa/OVc5vdCRYLb8/k1vFEqaLLTlrcvI0HRtfxN52qpoHbfTI8/
QgRK6vIN43IqXD5jZ9v7xAJyuztOu0qpwE962asLs4BGH3PMGx/cyzU/Zf1C
gAXfyKxaFhVuOih4N5YRoOMLb4tQPQZHRh/EZLHNSLq9iJRYj0G247ZKVpcJ
LTBYcelnMFAHTa9V3lpE4b8TvC2/wQDMmbMX0t4h33TZvhw/DIbXUMalfgto
VYfA9IyDweowudCD9xZ1ukUz/v6XAuJ3zEs7+9+gPKfK1Jt3KXC+uCCx9LfX
SOeZ4Rt7lgLGCsL+suJXqNOnNbM8kQL+wRkF5qh5NDToZ60JxPt2vTllzRy6
eMzRM4dLgeE5ceH6Vwa0HzyqPMfJIDbVHbBsf4E6rHRpqmYyFL8VBO7/ehbN
JI4115Xg3muuIffZNLKMsk+s2YOzxzVDZekkMoge54vWkcFBKhH/YD2Bvt1g
xalaQgZurtGXdWUMjQ0dnRqfIIEopaRHETeKVhzeHqppwlnmUvlcP4y2q3e8
LiolgcPQDp8S/hBaYzIw3PaSYPj4jqCcq/3oQcj7CskGvC/5Urm0uQvF8j3y
Uq1xlsb0i7fqUMh5bKzOigTQPaNOcdchT/JwqAXOhE0nZXkWOkQeLKEqLHHm
Vwvrb7cjdaFRfpeL96+YVfasdoRNtZwlMz/8B+2a0fyJ7tzYpvzRTASR2nWq
0PcRUloJCPr3RACney1X2I+Q/AR7lwfOorKtlUj/ECXEghMs4pyZHTFX8hAx
6a5Xx94SgRDyz+1ts21Immy46TVPhOy+0wfdrmtRRPcf7Mw53G9xjgg+rkX+
osupLS9x39TgEhelRRybaK8oA753cby3mKxFd9uaarJm8H7v5wHGhFZ02fsc
r/U53g/1LVnq34qKlGkZHJwhMnXyk49a0e7DTn4Xp3AWVFTsvKdBkaPvyicn
8b1rnx38TqFBwsgeozfOYPswvHSvBrk0/hr7/X+4PxXvcitIg7irChq0E/j+
+3mT1laD/gd5ilsp
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
Gt8lQH8B3LLeAg==
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
1syR2+wlIO+OtF9wJon/AfDYKRM=
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
+IeTcC95c53kX6uSpyXuXQ7g33hji/4Hx985WA==
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
jsP/AAYWPko=
        "]]}}, {
      RGBColor[0, 0, 1], 
      PointSize[0.015], 
      PointBox[{2.495009616850869, 0.47594354202533395`}]}, {
      RGBColor[0, 0, 1], 
      PointSize[0.015], 
      PointBox[{3.0547652045687026`, 2.27694595039571}]}, 
     InsetBox[
      StyleBox[
       Cell[
        TextData[
         Cell[
          BoxData[
           FormBox[
            SubscriptBox["\[Phi]", "1"], TraditionalForm]], FormatType -> 
          "TraditionalForm"]], GeneratedCell -> False, CellAutoOverwrite -> 
        False, CellBaseline -> Baseline, TextAlignment -> Left], FontFamily -> 
       "Times", FontSize -> 18, FontWeight -> Plain, FontColor -> 
       RGBColor[1, 0.501961, 0.25098], Background -> GrayLevel[1.]], {
      1.540230845903869, 0.4626593809701598}, {Left, Baseline}, {
      0.37177985923601214`, 0.43433329586937297`}, {{1., 0.}, {0., 1.}}, 
      Alignment -> {Left, Top}], 
     StyleBox[
      InsetBox[
       StyleBox[
        Cell[
         TextData[
          Cell[
           BoxData[
            FormBox[
             SubscriptBox["\[Phi]", "2"], TraditionalForm]]]], GeneratedCell -> 
         False, CellAutoOverwrite -> False, CellBaseline -> Baseline, 
         TextAlignment -> Left], FontFamily -> "Times", FontSize -> 18, 
        FontWeight -> Plain, Background -> GrayLevel[1.]], {0.902893940318128,
        1.1424854124766899`}, {Left, Baseline}, Alignment -> {Left, Top}], 
      FontColor -> RGBColor[0.501961, 0.25098, 0]], 
     InsetBox[
      StyleBox[
       Cell[
       "", GeneratedCell -> False, CellAutoOverwrite -> False, CellBaseline -> 
        Baseline, TextAlignment -> Left], FontFamily -> "Times", FontSize -> 
       18, FontWeight -> Plain, FontColor -> RGBColor[1, 0.501961, 0.25098], 
       Background -> GrayLevel[1.]], {
      5.1427055336677405`, -0.01891569474453192}, {Left, Baseline}, 
      Alignment -> {Left, Top}], 
     StyleBox[
      InsetBox[
       StyleBox[
        Cell[
         TextData[
          Cell[
           BoxData[
            FormBox[
             RowBox[{"\[Phi]", "=", 
               RowBox[{"0", "\.ba"}]}], TraditionalForm]]]], GeneratedCell -> 
         False, CellAutoOverwrite -> False, CellBaseline -> Baseline, 
         TextAlignment -> Center, TextJustification -> 0], FontFamily -> 
        "Times", FontWeight -> Plain], {4.204058104752326, 
       0.14524141735416674`}, {Left, Baseline}, {0.9361262993870663, 
       0.41756906445386727`}, {{1., 0.}, {0., 1.}}, Alignment -> {Left, Top}],
       FontSize -> 14, Background -> RGBColor[1, 1, 1, 0]]}, AspectRatio -> 1,
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
    DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    ImagePadding -> {{0.5, 1.333333}, {1.333333, 0.5}}, 
    ImageSize -> {520.0000000000044, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None}, 
    PlotRange -> {{-5.291666666666667, 
     5.291666666666667}, {-5.644444444444445, 5.644444444444445}}, 
    PlotRangeClipping -> True, PlotRangePadding -> Automatic, 
    Ticks -> {Automatic, Automatic}],FormBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      FormBox[
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{
        "\"\[CapitalAAcute]rea n\[ATilde]o detect\[AAcute]vel estimada\""}, 
        "LineLegend", DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.85, 0.85]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.85, 0.85]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"r = 2.54cm\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"r = 3.81cm\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm]}, "RowWithSeparators"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.668283105544945*^9, 3.668283191463852*^9}, {
  3.6682832553123255`*^9, 3.6682832641001*^9}, {3.6682833334966145`*^9, 
  3.6682833763513613`*^9}, {3.668283423397148*^9, 3.6682834310255117`*^9}, {
  3.668283547652559*^9, 3.668283572075543*^9}, {3.668283675252273*^9, 
  3.6682837899541297`*^9}, {3.668283851799682*^9, 3.6682838768566823`*^9}, {
  3.668283939882736*^9, 3.6682839473742027`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       GrayLevel[0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
+H/WvD2U
        "]]}}, {{}, {}, {
       GrayLevel[0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
4P8BgjrulA==
        "]]}}, 
     GraphicsComplexBox[CompressedData["
1:eJxlWHtczmcbf+o59DxPOj9TCTNhWBNp0bT9rhZKkrJep2FKzKFNvGWodUAH
oXJYai8Wy+sQ1vbSiL2/Xyk6bChmoxyqlcRSKyLk5bnf7/18Pnn+uT/f33Vd
932d7+t+3gpZPm2hsUwmW2Ikk71aYyTzhKUXTCmarRJwn6CM8IlJJlJ4xlm/
81pLjkE/eaffnIEk53TgvoyPjjzyTXvW9lwEPzD4gff+8mL6rBHWHEO+qd/s
RccXPOTywJAHhjww5H1Sqtb+cfgulweGPDDkgSEf90NtYHrfSi4PDHlgyAND
Pp1hAfLAkAeGPDDkA5g+XB4Y8sCQB4b8feYPLg8MeWDIA0M+j8WDywNDHhjy
PfkLWD4Q+IFBxzmgA4OOdYreLg1NZqv0vf4cM45Bv6vXXykl6/1oxTHoSfrv
RpwOjHOBT+n1tCFfvdwT8R7bhxL19DYRdGDQN+hxLacDgy7T/yQP0IFB38z4
BdB74hR2Hsf+TD8B9m1k+nN/YV/YCzriBQw6+OFf7IMV9Q+Meoc8MPbv6U/U
J85BvYEODDrqCXRg0FEvoAODjnoAvSdGvsMe5CfsAV60vzV27xkt7ah2Shl9
u5ekE8OvROy3on16O43JdfnxSIssNWUzzOnAoIMfeY39gDMYpgkPj9xUldnQ
YX0c/hKBx+v1vCZWGnsE3wvU8fwBPVOvd6EA3KK3r0HoWUegNzI63381k+c4
iJ3H9/uR6SPAH7ALeuM7MM5FPoGO76hffA9lK8e4j3A+8gMY+QCM+AMj3rAb
9Yx6B1a4r172VaSK7PXfO0Xwo97ADwz+0/r8aOf7ox7BDww/GTM5ng+X9HFU
SFVs5fEFRjyAEV9gxAf6ID7A/Zg9XD/4F/HpieFvxAt06Iv6xvnwPzD8j/PQ
H+EPYOj3E/Mf9zfuD5zH7gUZzx/UNfIHGPmCfcGPc0utluwokVvwfAUd9wNw
z3kH9GffTbuYu92Sxw/9AfmDfgf87vXUax/8ZE1Rej2fiuBHPoAfGPyxjJ/f
r7AP58M+2Au/w3+Yn2Anzgcd/Q505Af848K+S8CwF/Lo35DvGT/cV8CoP/Aj
P+Fv3D/A6LfIR9g3dmvWp9H1Vq/Nlxm2aR9P9jOWkrfVvxNWqHptnvR3tIu3
GGIsHXwwMsfunJLr/9HJ7h92Weh4P7EZaVf3ha+O5zP6a/LRVziY05HfkId9
A2aWRx5wUHH/dj9xPlO3wjA/Qd/Z8+jc+PRuAfbA3j4ba7a12Gp5vha1jPFW
hRnmH+RDnc3Ma4WtavLIyzhwvVFFYR/6vnXF5YWovek1PECuo8S87S4/vnlf
VO39+nnDJB2NvuC9uXFXJdc/PyHn09KcS8J7553OetjrKPzozJQFDXeEdUFN
P98NeTl3dbYM8zr0XLgRb2/k3m1FrtMC82pvGVNA93w/B8GUr3saRtgO+VhD
XSNW3Uwx1kr9Swd9tNFBQ33ZKlmfDHpXWW5OxybX2NWu00oDbG6ZF7tZkX1t
0G2HTKU0YOv43XlkmLc8Y8ZMippgQ4v/HOvsIT0Rg87MORQ3SUknImoqOgPa
xMb9O9MsxylpbeGcHJ+KVjGwMebXReLLeSJ3oe0++3axPVNutDdKQaEl4+7c
OPOnOCTryIGVSxS0p3in305lg9Dlu4UWfaGksBlRu51M2oSUUbUhR8NVZLWg
OL4xvVO4+t3lPnMn21BN1tPYv756ItQG11v/N0BDsQ+XdmdplNSvd15UQpSG
HLZFLzTZruTzUwDLLyreM7RufphhnqqzNbban2RFYwPtm1K2KGhe2y8/58Zq
ycPxjzHKq2oyzy84fCXWgtct4pytOld7PNuM15tv4Y9v/pBgKu1j31/rz9Z3
OneGrjGVFLlhBWmi+rX+dZvli4TzcN/mTvKKWJVueM+hP2n/c6U4sEkpwR7E
Z8OR+aa29Yb3GeanEcviwo8puvg8pp2gi8p2+Vuk/FDnsBIFry9g1Av477mv
KE272Cpgf9QL9ndh+wtdWrOyCDs19+8/lNFvlBSpef3AX7ueW0VkD1cR7EM9
wb5ezD6CP3vOJzrmT/p7jbI6eoCW1CZ2zjOjzaS5w70bjueY0ub56x9MLDWT
sgd4FX5apKFL02Mr2hpMJeMxN5v83jGhsB3DyjMkGc//PJb/9Kw65verp3tR
F1ul4U7u316baUmpsfFvLHNUS4dCVrp6nTChd655Zg62lkuoPxdWf1L1yAPy
jmPWtCOpyfOzjhdif4tczYJ91pTmtOl+tKtMmhok2NpFvpxnHj32nNW7WwB/
JuMXwL+V8ZO6qc+dJ6vVdOHjrIYv/I3JcvemZpNP1BTTdbUisNWIoF860496
JxzcsmW9KTU+jYj2tu/F7cEaWnNp0NqdvV6bZ9W/yBP6m5nR2BmVdl8XGuZb
8APP2eVhvWWi4b2FevyD1aOY+ezF5LJEG5q/om5wQMwj0clGY+RdY3h/OU9d
ej+z1YZelLz3fPOIB2LTROdJ61x1/P3lZH1GHDFGR7Oc6ibkTrxt6O8n9P1d
AD/ur41zd2uKR+qoovqqecXgOgHnYf5D/7nP+o+Q2p5gP7LAhna1nAr/Kqpd
gD2439Hfwlh/E9SzLdx6ndXyvF2cbJvcJjOl0KKyLwNXawn7ZbL9RPTrxaxf
i9DvLNOP9/d/s/7O+78X6/8C7A9m9gu4L1LZfSHAfybn9P4T4O9Q5m/hxuWi
JnMfLeXuTrwZPUhNqawOCHXRM64uU5eYX84053NKqXOfNZWnNCRzOJ+4QjSV
vhxUn5l3WsP72eEZ/m7x3xjeh8C4T1OH5Qx1nWB4z6O/urH+KvnMLQ9fvtuK
3IUHWbc9FdISP0+fek8Vz6dmB6l+vb2K/FNVce7CY3HQ6GGZ799S0ic+j8uk
2Y/EkUk7qzaGK3l8q8blJ3esUtLsv7IyLL3ahGOfta8906KkxSlvf5AzpUOw
HPbcruScisc3zv6KTV67ija8mO6qrOri+qLP4f5zYPcf5Z+v6mgQDP9nRJ+2
a3ZtVlPzwACjZm+1FKDXU83tVSdW1Axcr6YRA4MVSzeppPwtppuLI9W0YcbF
eJdpKinl+8pdNy6a0BCvWcmnkuXS5SNzM1oc1DSqZBv1uqiQ/vWs2CU5QUUH
vQ/axLU8FXWLcic4x6lo3qKDl1SnnoodVeVLiiYY/t/oW98S4lenoHWRscmr
8+6JRb+pk9y9FbyeQqassXx/h4IG+0x1fBDWKD61nj87skVOG0zbvYamXRXL
/e2+fahTUNLw1k2J26rF1QWe1Xu85fy9mtj4dsTYo3LyWuXoKH5WIZbrAt2u
+Mqp2eGVvZHicmXl7+kL5VSTtLVpbN3F/9eTnPxSX/lriZD8lkf/lX0VvF4r
SyMelyXJaXJBpuuvsy4LK6Mnft73rpwCfo7pE9BWI4xvt55zNUZB+bdOBM63
bRQsh/vOvrFMRW5u7/urIjqFoScPPbgUZvi/5LeBic3BXS/9p6+Ll3pZTM05
NMua+o2Nuz/yn0aEfBvH8o2u6/uU4X2F+viE1Qd/X4Ww+pBQHz3fV+H3s927
m1RS1dHDv6sKTfi8a3lqn1/9OTmfTzMDNFFBK+R8HoV8aO+sZcGnjGlRV7wm
cYoJfWj66GTAdCMJ+jsw/aXStkP52/KUNGpVQUlnWYdoKRvq1vnQhHYoAzbf
Oiqj9PzgAq9uDV1/22RU9WgT2iN7PMuxyIK087zGfT5DQ8Hfzah2K7ekC2PW
rd9ep5LMY6vrC59ZkyzI89jaP5+Jxgu+SVtwT0GtkZW/OWy+J4CuYHQB8peY
PN9fzfaX/geKlGCZ
      "], {{{
         RGBColor[1, 0.85, 0.85], 
         AbsoluteThickness[1.6], 
         Opacity[1], 
         EdgeForm[None], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlmeM0EUQxXepR8cDjgMpd5RDOiK9cxRBwEN6kaqiqIiCKPYOCKiAoCCo
VBXbRzW2aGxYo2LvvcXeYmJ9z/mR3IeXmf/+d2dn35Td0oVLJ51RJaV0bE6p
quRi4RShs1AgVBOqC12FKnzvFjYJG4QWQlOhWJgmjBZ6CHWFmtjYImwWaglr
hNXCUcIqoY7QQOiOba9pyLhtHIasJ/QW6guFQmPWeW4TpOf25X8RfllvJCzF
dh18bYSNfcw7nLH62F0gHC/0E/pjr7nQjHVNmNuIPRow7u8S7JmbrcKNQinw
WEthhdBaaCssY76/BzNWJgwThgrthR3CemGIcJOwTuhArLoQm3bYKCE21Rh3
rLoRxyPhugZxKmD8TDiqDU914WozegF+F8OBY9qTuPSC+3rsWVCJ64ZwcyiW
/nb8V8HfHfjdoVIszeMxxLuQGDTjXyHxKoLrYr7PFUakyNN9xKqI/y3hfQC6
bS2H91ZwXwJ3jflfzJpS/g1E9/pziF8bYtuOOdtSxHsQ5yojlkM5Xzt8bcGe
64njEcIuYSOxbM1crz1JmCeUc77OxHR7ijwYLlzLf9vpA0/m+mZi7VgcTZwc
o1EpYl+dWFl3bU4VRrJmljCWNWOxa5uzhXF8n0+cXHPjkeZ8TIr6rs/cfvg0
R5jA94Ws6c/YAHifK1TwXQHv5nwivJbio+PsXFsrXJ2ibibBh7k+FtvOg/bE
wJxOYZ6/j2NdGbprbAjnN3c10EeyV2/O5nN1g8fq8DcaDj02jbFD3Jm3K4Xz
KvFlWQiP4+Dn9BR9x989iZnjdZVwQSW+xsNzP7gzbxdx5uaVuDNvZwgnVOJy
IhyeJszHvx2c3zy4P0zl3EuEhexxqjBZ0DXxf1+aAodD4dOc35qippy/Z6eo
MdeX++icSv4uxEfnrHP7CPyYDx/eZwZ7VeD/QOa6HjoJJ6OXIxcx7vpwT6wC
jwvY91LGM3Ix+iXoXjcLXuzLbOIxDt+X4PtcOK2As+kpcuiWFDnjHnq7cBtc
LIY773VWij5bm/nWnWN7WOd+6bwegf+3w6Fj6jvX/cF3tHPHueR8dO67F7lX
7EzRm8z5NSn6i7l1vjh/+vL/YuZcBi+HOLHeBXk5unN/JX45L65gzLV/Jb64
lq9iH9eGe7t7vnvAasb2otdGrkH3+S7ijCs4j/uqe5p7Y0fW7sGu/69lzp3C
fuYN5l9bfFyJn+bkVmyvw645cT37jnT9Xsd4R6S/y+HPPA6Bi43Exes2sfZ6
9KpIf7s3uBf47ixg3QbW1mW8HnIL+g3oXuf69L1SkqJnWW+P3Io+CL0UHuxr
GWPbmOOxHYxvYQ/3FfdI3x0dkNs5+zq+rbvWToQr56ZzuybSueu8XaTE+TJF
37GsyKE3keyUo9eMkhydI1/vEx4ndn8IH8HbcP1/LkW+vCSMz9HnXEOuAefG
WI2Nydw5kuNy5PQ8yU9S9F+/YSfkyMdBkgNzvAv8/y/mDNbYkBz58bXwD1zd
iy3PeV2YnKPP3S/8jc+TNPZtirp30eQc9V9HsmOOfn2P8DD8PCN0zpEPIyW/
SHF/dLPtHPX/POf32c3B5/AwNIct23lK6JejRznHdsPbMjjyW+I9YUaOun1T
aJsjfj8Lv6ToqWcSu6X41QXfbMc10op9nkyxl8d2Mr6ePHOOuA5dj3WwZd21
vBHfNqDvws9aslk7R+6twK7viH347/jO1f+7U9w/trcXmx/Do/10rftddegt
Zd31/pnwbAr7y8mZZcy3z2X4vZ+1d6B7fDV7+UwvCxNz9Mem+FeEj/vg+Tvh
YIqe8JtwAJ8PcAbrX6WoDdfCn8KnKeq6isYeSlFfz8KLfR4h+WKKft5IeuMc
992/KXJxmHnU2IMp7rg5btjkXoFkDWFmipprQ905Z11vztsijTXN0TN6S/bK
cQ90lbwrxZvFtp/A/nEaf5UzvsJ6r20mWZyjN7wl/J6iT3r/mvjwglA3x9vn
baF6jrv8gxQ173xwbb3GuXpI757jbnQNNaeOyiR/SnHP95HeN0ffqif5SIq7
2mfYSU49IEzJ8Rb5NUXeO+ffYL3X2sYPKfSp0t9Jcf9Pl/5uivvQPWMmfaNE
sjTH++N9oX+Ou9l1XJ555zqGOd47B+HOvDWQfDTFO+J7Yu+4F0o+luId4Zh8
k4Lbp4UPU9wzrTTeOsc76UehfY73zeGSLXK8k/4D4vpKWQ==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlFdsyFEUh+9Vs/ZKzNJSo7RUlai2aLU1q6rUHm1tihB7j0Qk4qGJRPrk
mdiC2PPFKCL2DBJ7xIoRfL+c+/Dl/O74n/+9555zoovm5ZdWcs5NgcqwF7p6
5xZgI+E5TGW8HVsDHsAoxmux6+A4FDPehu0I5+Ao5EMBjGHtETYTlkAHxl+x
I2AW/II9kC2/8FZnYc8WbBrcCj7lqy98h3asT8dmQDd0IixEL4Ja6NowFt0d
DkOSt7UoqI9uABPRKfAUShiXYSPgGBQx3qqzwgn4BolQFf7A7xALnTmHvQNh
ObonDEHnwkp0L6iDrgvj0D3gBxR6ix3GHYLWiGJsKQxDXwvf5sJf+BfuHqtv
vMVIsSmE89CUuUnYOKji7R/yPRq+wL2gFfNqLER42ztGb46u7k1rLhJdE3IU
W6iHPo2dAOPD2z/ErneWAz9hLHMbsCP1H/QlbOewZ1d4Y71tFrRk/UDwpZxr
xLgx5KF7w1lIZrwYGwMtvMVQsZvs7CwHYW44k3QU60VhLhrd0JsvxbQt+hN2
GkyFNt7eWG9bAk0Y3wlaMdwHzb39azbsD2fWWedAK285pNzRP2O9xTAu/ONU
+EZ79eYng0/5Uk4OUC7ARmc5cybkgN5eOdmZtXhvsUqA9t5qRrUyU3mA7uMt
F+crT9AXsZ2c1dhQxuNhk7McVO2+CG+pGs5gfBmbpLPA/fAP+V4DzdBXnNWO
cuCl4s7c5vDNDPQHZ7VeDp9DjBVb1eTukBPKBdXMG82zvgObChXwyllur4In
uhfrO0POpKBTvfWKeOiCTvB2V/WkAvRtbD9nPSaG8Y3gWzn0MZyxPOwZ7K1G
VZsrnMVmkDetGHVHX8eudpZzuqt6oHqf7qxe8B6b7qwnqNfdddZ71PPUO56F
tyoLd33trFZ1Z/WyI85yWT3tps7N3PDg84Ji5S32ekPVUhosdVZT6m0VIVbq
ccqdLFjmLIfewQRvvUA+s9GZkOxsT7q3mCqW8pnnrSdGhTtfhf7eciE5vMVj
Z71Qb/If6omiNA==
            "]]}]}, {}, {}, {}, {}}, {
        RGBColor[1, 0.85, 0.85], 
        AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwt0udbjQEcx+FzrGzZ2UrZys5OoZIKUXZRod7kD0Mle++KZJQRKXs0kD3D
3cWL+/p8n99znVfPCc/dk1EUDAQC5wk1tmoZo+wDeoZ+dl9GMoJSt9P0sXtz
zR6uk+hFT3pwxf05O+1n+pNfPCXHrVh/sJdpnqcyhQrPT8i3H+s3Gin0/EjL
2Wg/1Cyt1w36Vbvqff3IBz4x0W0CD+xMvaTz9LLO1wbdpAtZxAKWsJjNfPd+
H9l2pX7mFPuJc1tKNDFMp8R9u77Qq8TbVZqgL3W5VusyTWQFW0hmJUmsIqXj
e5BGOqlc97vV+kp36Wu9wQx7JrM47HmN3tTZOif47/seoZ2j7HBr0WDHx2cb
rWaG1uhardU35NrHdZze0zAdxkX7BJ3tELrRnS5E0eZdpL7X8fpF68izT2on
fasF+k5jdS537fV6TC9wm3We7+gfftPEbrdmHapDuGVH6GQGM4iBhDOWQ96f
Y4DdnzGM5qDb2f///79Adl/C
         "]]}}], 
     GraphicsComplexBox[CompressedData["
1:eJxlWHdYVNcSh23swkrbVQE1sRJFRDSIoJh7YwOs4GfDJ4oBSUQj2BXFGrEh
YgdDbKDGEh4xYkGTOzyxYgHFFlApUqIYEMQSUB/uye/sl83+c7/fTrkzc2bm
zNx2X0WOmiozMzPbaW5m9vG5hKxXR9ywIjwjd5wfdsnSlpxG74gavMaC/w8M
+umKNhPbi3JOB9577cPYIDd7OvZqyKbGF+8k8AODHxh6gSFf2WZC+InQei4P
DHlgyAND3m/9rej7R/7g8sCQB4Y8MOSX/1wcmNA6j8sDQx4Y8sCIAzD0JTAs
QB8w9AFDHzDkA5h9XB4Y8sCQB4Z8FYsPlweGPDDkgSGfzs6HywNDHhjypvyZ
LC4i+IFBb83kON0UL2VP8SeD3mY01OCfhtYa4mRHfxjsVfL/gUFfY3iaczow
/ANm56ejIQa+txJwrIH+QoJeYNC/M+BiTgcG3czwIx/gOEYXwP9Pupxj0MEP
+fXs/VweGPQRzH4B/q9j/onAz5iciHiAjvMDBt2Ufzh78vMABh168D74BTow
+Ezjj3oGRn3CX2DQ/1l/Ol4/4AcGHfUBOjDopvlvGj/kL/wxxcjfXJnPlGeB
Cko0yGUJPSNPzLNJUtN+g16ZGHagZtm+c5a0rcB1/edFWtJLUflzD9j9nZcy
Aj8w9JUb7CuTwG+qbwfTx+sH+oFN6bAb8njvwPpjj1RXdHTEcM7PJeCBBv4H
Up7BHj3PV9DhL/CfzF4BduA9pk/wwz/ghUwfx6PZ+7n+48w+AfloGlfTew75
Cno44+cY/QZxQNyhF/HCE/0C+Qws8144PWaeihYb9DVw7Gjge839QT8BRv8A
No0v+gHsMo0H+gHsQz+AfcCwpw2zh+fnLaZXbPvHWa3DtGZUc3yZLHaQFfcf
cUT+oZ7xftQnMOoT9QYM+5FPwKb+o36BUa94P+oP54/zhL2m2PQ+gV24j4Ab
U0bdPLrVlhAn1D/OF/0B2PX3+Af9Ttnz8wY/4g1+YPAvY/w8f9FvYQ8w7FEw
e7j96DcX7aZtuyC3IQ92jpyOcwcd54z34/yRL8hHyAEjDqcM8a6TwI98Az8w
+M8yfl7/eD8w9MA+yMFf5CP6M+xFvqA/IN6YJ5EfpucBf3AewIgH/AM/8hH8
wOBHvwI/6hX8wOA3tRf1DH5g8KO+wY/4gh8Y/OiHiA/qDfK43xAfxBP5gvsO
GPWF88F5QB/ua+gzjR/6Aeim8YJ9oJvGB/UPumk8TPsB/D/qP2Du/ATjPpMy
6YvuJW2N80l6ix2vvGot/rW/jOjgsMLGWUarjoVYtSy1/9e+8uSvzo71OeaU
HFaSXROk4P7hPlyb8dGuKcL9JYmZUrac2z8/4dNTp/MU3F7ox7wc8qYidoxc
zeMN+1HfC3WquE+aG+cL9IcS3fgHWTVq8a+CpffuntUSni6u3nsejLel+GUr
mk/voCa/FgMPb2+hpvLDOdtm3ZTT7+6H5C/T7Gnbmsovv375QXKYqQt48aOc
XN5FhPU4liNov1og3nhmQZcf+MTtKpCJtjbLvZ0OWFLlrB9yM19ryfb06G7K
q9aUNrTQoXilJQ2/+Hm4i6Thz3l3LD9JPqmhdsKue/o9Gt5fi5i9pD2ZeSR/
mQ2v/7a6x9bZnnbkWDy6qFWikkpayuwOrLEjz0DHyvUbFSTFJHhrL6lpnkvy
oeW+Ksre3bkkZIZxfheW9vZfPEhH3zzx6u5Db6W7Kbedgofq6H5Sw7LnMW+l
kO+CMuwjVeQ5Ls9he1aDVJvrXrG5QUk+HTstarP4jRRQvvR6uNQ0fx6d2nK/
Y53UZ9FJmUzbZIfhvF/w/S4m62M/2SAMi9R4FfQ1zuuQr2Lywo5Ou5qPHauk
MpqSftv8hQB7Cpk9AuydwewVHoWPLJrXW0Vhhjx4I8B/L+a/iPi0YvHh8/qZ
uYU5rwPMxfyn4xWzoo3ze9iM+eMTd2oonD1FnFc6Oy8xf8IvuaOiLcnZOcJ7
ZftmfB7cq7pYfGJvM0L921e83hm2yIpulNS8TQs03v+oP8tf8rMDK437V6C8
ZMu2hRo+z7tNXx6VpvhLmv1ZRmnv8cZ5/8i4EZ4rdhnn/T+3t+43Pk7JMe7h
13Y6x2D/lxLqCf0X8uhn4e8zrCuKlRxDvkuXUQUJ04z7UU9mj3G/ZvUuIp9M
530t809EvpruP3oWH3GLW8fNFc7G+aK1zVFN6H572uS6oWqJhxn9x8W37ESq
FcWFrKoefLkZTermdvjdVkuKD434ZdMpLT1c4Wju/d6Oeo4KTC9+LCOHjERv
5X0LyoxttTW0WkbH/JabFVaqaE2zBZF5bh+kwV9cGzK0vwUd/76l6/Z7ZhTb
zueT2a0VZJcSNDvJu1yaumHu0nO1cvISfQrelJdKzyouyl52k1PZf5Nay9Py
pLiQ765r2zbtYQubPyxtlStl368estJTTmfKPsZpjoT+kMj6gwB/NjN/xPlh
obb77SzozZ30kYMevhdSb3Q4ZDHfgvSukWsDrcxF+OPB/BHRjxJYP+L9qpE9
RVe3WwMGDrWkSWHWI+7O1IqIVzyLl/hVYW7H6J1aPjfs2njq0G8u8n99n9nP
8pfzY9/Z0fhh6JVYHYXMKukUsPSV5KrTmPsWGudv9aMBLgFyPcWmb+15/NMq
qfvIiKrEGh19uNDrXZxbtVQ5uLv/Sg89zz/Vvu3vyvz19PkN37jy5DzJ1f6c
5NZbT0GuJYOODi4y3gc/Ge4DSefuUDJziJ5Ork6dfDk1V4A+3Pe9Lrme93HU
U9RP49eHllUI64J/0GS76ymn4K51TqcSAfbivo+rW+3onqmj5D/PRMUsrhM8
S/v7jupmSVu+3n26ZmhTnv1NT2R0Cfq/Yfol6D/P9HP7DjL7uH8DmH8C/JvC
/BMQr3gWLwHxsrhoiJeAeIexeAvuI6dZ30605nsE+ozpnopzQ50EszwQwY/6
4vsk4xdnv39sFrFGzef32qI7Xa+PVJPtZqej3b5XUPrBvi7jahX8vOfWzsza
dElB/TJa2MZfrpZChi+y7bNNQdOvjbmVVVklRV3NO+jgr+Dnkzb9s+VtVilo
XvSxp892PxEOnjy5xGafgvo/H5g/cG+5UG/tOkY/wfg9ZvC0vun+wUrKdfr0
t6ldXghVygWaPnFqPs+nTt4Q9dcFNW3x2xe1xU8l+gdY2Z8qUlMrp5sWnX5V
iap2263lu43fW3yC9+x13quhiaeUY9ZnaMSL3Z0W5Z0x7qHxXVI7ewwyfg/z
C74aFfmDHXkL1UlFXyoo+qzDU4+nahqyuvDx/osqmpDsY79xsPF71yu/ul97
dVRxfK3x2wdBc1RU6dXh8M+3GqSJx4rHXt6lpJt9pvkW5tXz/WzYrJRMq9ha
qUegIvJKHzk9bffx/VOFRy8nbA59LqdzTlcbkmLvCpdHOOyp1ytop0vNhtgt
BcZ9jskLk4e53mxXraC5uevutY95JsA+7Eu1VoM250SoON5/fOWCNK2KJvke
Xftjxishdktp1xlZTXvanDKlX3ijsMl3dPfolKb7NGXsu6jZDQLig/gjPn1Z
fETnQd9MPhhjQTFkE+rubC6GRx0JfttVTSpFT/87T+Tir/2XbLo1Tk2+3ef6
dt6qEMeICdL7Hhqy232/a1sztYh8Rd/y2pw0eUmpcT/GfNr57oT8wvYK8vDK
z/X8TcXnS+w9ejrX+1JtgySefv9zso2ez5eoT/S7I/Xvux5JlVNUXWbHEv1j
Pp+0LL/jvD3vtuSl7NxDWiDn+zXkMY9CP+bRpY75uvQ6FZ9Hn9qMTD0c1LQf
ei2vcp9jLkYk1Gf3crXn35vgH+ZV+OfC/BNR79i/n/dLrXbRWtJDbT9bh2+t
+Pey2RMblEWVGvHaocKR80o0nH9KyrgCz6u2dKP3ylVbS1SUdPh61/wvNJTj
8b00pM6CYF8rZh81W1ZQmtXYtG+N/jIt+kmjdD43+cyKEAt66FGgHjPASFcw
ugD9uUy/mGz2JqjD/2zIctKAvt+O03CsZphaHKh7eWWVkuJtPvNf16FeeuMv
fhh+pam+L2z0WJH4Ugg/tF52S2X8nrUjQLN49Czjvvp/RPKCMw==
      "], {{{
         RGBColor[1, 0.85, 0.85], 
         AbsoluteThickness[1.6], 
         Opacity[1], 
         EdgeForm[None], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
Ov8i36juJ67Lrsnmsxdn+x+AydAp
            "]], 
           PolygonBox[CompressedData["
1:eJwtledvj2EUhs+hiE3snSoVq6iarRql1SqN2luoTRurtVq71KZGJCL9IPHF
/yJ2EGLECokRQYhw3Tnvh8u5n/f99Xmf54xb6qqK0vJGZrYGUiDLzSbDRvQe
GIeeCpvR+yAHnQ9b0DXQCl0NdegT8B7qWTcQte8XWMW6klilZ+iusAi9Al7B
IyiBBdCRdxfgOnoatNG34CC6LzyGc6yvEtPgCLo9zEEvgxboi3AD3Rq2omvh
NHouvIYnMA8Wwm/YzPsDFt9IQefCBu0NPdD3iYWwBJqwPgn16KHQDH0GLqMz
YSP6J3ECzIZerHtC82SPlehPxAzIh6dwnmfXiANhJ/ofcSrMhxdwB6bDdpjF
+xIPrT36odM8cqEcdEYPguXKE7RFX4KbyZn6o9NhCjodUtF9Ybz+Fv4mOVJu
9JvvSY1UG/3mJXTh9yOITZVz9DvVGHbAG52VZ+XEITAMPRAG6+4wGJ3hoXXG
GehOyqFqBXmqhXJs0XPTVHs4ZdFz2msmbLPY8yh6gEftVeO96ExYja6F/ega
j7vVJblUTZckOX0AvVkvJRZbfGs8rLP4ZhH6OZFgFfALrrC4RcyFbzCRdRFx
JIxRbmGTxUz9gA0es5IDd6E768UWOaxEF3rsfRjeJjlVLtWD+9CjoAx9zCI3
Y2GtRY7moud59Fq2eg5d6nGXLFikb3n0Up7F3z5MzqY9dFZ9Q3vrzH08Zlqz
rJwc87i8ZlE16uYxI5oNzXBjjzvo7OXJ3argqMUdK9QLHr12QN/1yJlytdti
Frfz7JDFTI5Ub3m8Uw13oVdAgcWefyxmWrM8yaL3mnrMknpwgkfOletSGM76
s8VsqkbFHj2nXlMPqbZDPLxIV93BPws9cqUzybu+6hwWHlbm4TGtk2ejPTxT
XqkaadbkWfIqzZy8qp1Hr8iz5E0tPWojj5LXPbOYfXmevPNDMjsNFt7QweOu
8ojjHjOu2T5r4UW3LbxWnlSn2nm8k4dke3i4vFs9vR49x6NXqi1y+9HCy5Rj
efE6j3fy5EkeM6VZ0v8J8rp7FrMvz9utu3t4e/NkNgo8cq8Z+Q82EKTV
            "]]}]}, {}, {}, {}, {}}, {
        RGBColor[1, 0.85, 0.85], 
        AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwl0/dXzXEYwPF7hTLLjKxCssnOCqGQUSJ7RMlMZhGZIXv/UX5AlJE9MrKy
EsKr44fXeT+f5/P93nPPPefGZOWlbwkGAoFrjDZkawVjzAdIYioJjGMsB5nG
dMaznu/emaCtSOYqP+w2ap1G6DnumXtpb9pymDYcIY6jlJDPL89u1d/aTs9T
ae6rD/WCtm/48hyjA7NIZTb9GMJgBhCkPx05TiknWMZS/vqonfpAl+hiFrGD
7dy3f04925z/aB+N5RANP2Qem/jpbrO25jLhZLKQWncb9K4u0Azmk8s67tg/
4ys5zt+0p8YwiGj2U8w+WtKD7pR7Nl3TmMcX5xZ6ieaspcYuSz/pGt1DIV3p
Rhhnue2+i97UJ8w1z+GdeZXe0FPalFfm5VqlV3QijenMC7tO2oiBPHKeqTPY
RQgpvLR/w0Xza33MdU46N+GteYVW60otYDdRlNmd1vcaqU/1FmfMoXwwr9aP
OlSbkchn52yNZzjD2MskJjOCUYykiCnB//+Tf+bUXL8=
         "]]}}], {{}, {}, {
       RGBColor[1, 0.5, 0], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1:eJw12HlUTP//B/CZuRdJolIqiSKFsrWvr3crRUr2+CStlpA1rdqEVNol2Yoi
qWhXvC8l2mihlDbtmxbtSX3fzvn9/przOGfmzLzvmft8vl5XwuqMmS2HxWJZ
sVmsf681fgpOvbtoJiAp6Gbux62QHfkj5vVOmuk57uSf/iETouO939/YTjPr
v0n3XxVhwDVzbdeBbTSj+aKZQ2Xlw+HC8oUy+jSztVPHsvl9IWhWO8mPa9PM
5HNnr9izRSDeIX6wUItmijz681QbS6B5zqnHNio0w7qbO5AkWA7vBJcUyyvS
jOpSmf6PvBUQK5U7wNlCM+EV7JXbpirAVn+++qP1NHOgS0h5JqUKenyfVDSI
08zwRgUl4exqKAnfMZ60jGb2j4QsW3+iBpIeD4u5CdMMt0jNplmh73CmQPuY
KD/NvN5nrxtuVQsjVOPMvjk0YyfHinYs/gEz3kKy5b0U49TAOnh2bjM0hb7Z
9aCLYhJT3yfa6zcDE2vjdLqdYl7GCwjZ+DSDz/tX73maKEZawq7sznQzcHFM
DhpWUkxhVPLrP20/gc/rmt/7bIpJf1TsNhXWCr+DNySFZFBMlI0Pn8THVvj6
8FuF5SuK2bol4GreZCtEMquWzz6nGA9nI0Wr/9pAlMWkqT+gGEOdkuNfxNth
9ZWJ5vSrFOObkKvXGdABPgq8u8CbYlb5vemLzuuAlu5V74o8KGZcK2e0pbcD
Hu0xedToRDEH9i6wVjPsBPF18Ue5TlDM/T6NN9tmO0Hk2+6WQzspJtrBIifZ
vBt416e0cpZSjG1uePD72l443VywO1CAYvoznpyImO2Fsoi6/KWLKUYibTR2
g1QfBLDmPpadTzGC/Ydx1pk+mF992GbfHw6z8dmR/RqcX0B7cbc/a+IwRZfy
jucu74fJatsO06ccxnKW542/yCD0HS6YI/SEw3w49vmyq8wgNLZISv14xGEe
W/xtOKQ8CPn9Tda2dznM/JT5+/v2DELgXPOfzkEcxrnpeZbprUGQUNpZH3uB
wyjyrLU2Yg+BYYRS5QjiMGdFDfdP1g3Bnd3z3kbVspmV7ry/Tp4cBgeDXMHT
1Wyme13o8AKnYUCqZ07pVrEZ12sBM7Hew9AlXiPWX8pmBvoijmbeGQaVnnhX
XYbNRKQsWXTh4zB89zRQ7Y9nM2Ft87gOSIyAcPLVdN0LbKZn2dtvEl9GIIqL
ft7Py2aaNoS26wuOgfjyRPml8ixm1Z2YobjrE9CUxLW8pmQGx+iGDUX6TsGt
xkXcUov+4v8ufc1af3waZjzLJG6Z/8GbvBXwCd4ZoE8NN5jmT2Ljn1MDKqdn
QVjYoSJr/gReBhV91lYslM9jfPzSqTE8WbomnP83C60/17Z+V+0IFr6gFKp6
lo1iIz9LVUgO4z/2/sdkfrFRKi1R8PTGEJZcIOv7YA8HRVkHyG+PGcA/fKRe
2GdzkPEDXQV3xT4ct7CEJ5KXQhtPl7hbzO/GLh4psdN7KCSXO6HoH9WOBQMz
h4ciKZT8avrRy5vteGOSlPbX2xTakMjirfVox4eux/3NiKLQpjtcHdK27bgk
QaTAKZpCW5yEIz9sbscFpotujNyjkIq8yhirpA0v8u2hqh5TSPe5U6bT31bs
rOWCVr+i0MG7Y0q2Vi3Y4d3T3GUlFKqUySh13tOCKX5+/R7iHZnnrYIMWnCF
k8fa7FIKaVUMBmata8E3vqdSZp8pJDmvt23+8E9y3sRZ9woK9Z5rCk32+YnP
rVspnVVDIXejT/3jj5uxVPannORWCo3V+Pny3G7GF4WFio61UcjRVl9U4kYz
9hP5oCjZTiErz/f6Rqeace5IkHRYB4UMMvNiYhSbsXLt29OnuikkrmcV4R3Q
hDtiXkdTAxTSGZY3FvzSgJNNqhszJymELh5WZ9IasC/vm6yDU+T3jvuuPRnV
gNu+tY/+IVb7823Ou6MNmDFTidWappA8dfmtw0g9LjjknJc3Q6HVAnkbC0Tq
8ZY7U1QMRaN58nr8523qML+UJurkodHcDAeWuGEdFtmbW39pIY1o5Yj+T3J1
+IedQvMcXhqx1DuKxcdrcZC+kZjkIhpN6Fz3Kb5Ri7M07U/s5qNRj1npiETK
d+y8Z+vxO4I0Kj23p6Z8shr/Lb+nn7acRjbO+bCruRprli70lhan0Z8rW55W
FFbjFafvqt0lXhe42LkyrBrnysiv9FpBo+sJpaJf5arxSKLRWwMJGunX61nU
HP2Ge4sTjHNW0+itvmJ7Q1EVLgrbPay+nkb7djw2tkitwmcON+U/IP5lJpDZ
GFmFX5sF81GyNBKzHPJrsq7CJgNXVn8idnF5IfPzbyU2fWG3dscGGimnSDm0
ba7E5XMyM9Q30yhVWGi45045VhQ7MD9HiUYq26eS9T3K8e+urCABZRq9c288
8dCqHFMuRq6niCtb4lv2ri/HQZnS/itUaNR58MxjL+cv2HvV/StuqjQ67f3K
Sg6X4bXL15aLaNDoSqdLXcu1MpylYFZ6gjh4h65ZlGkZft23ZlMu8Suhr9pU
SykWDxzYYK5Jo7HE0ZW1dCl+kMrMD9GikXuVSpOvUTEuV9ip1oJoFKTC3q8m
UIzzRm3T12rT6P69os8DP4qw6K7wSEdixt78rfmpInwh3Thsmpiedr23KfgT
ztRoPL1Ql0YBq/Gh+m+FWJc7No1fn0bRF/W/yx/Nx7LHDaOfb6NRY2u0Xrhc
PhYV/J5YTyxpNpg6Mvke2+0OVl5oSKNnG+7eyAh9j2W2BnxwIM7uHFRTLniH
t/IvTZcyolH1wZh7atIMrl9+pdFjO40UglsFlDoxNj6xIy2BONchqG/sCsaj
Kc50OXGxVNu9yy/f4r0WLLEVO2jUdfsWy23JGzwZwbcyi3iVW8cH77oc/PRb
nsdnYxolHgi5r3s+B//c0yo6QLxFUcOJ5snB2qKR8ot20gj1h8j4aWbjmnWJ
dcbEFpaaN288zMS3RD7PFhB3aHRZG6lmYsfCKM+fxKdEwjQWVGbgx8s4Hn+J
3Sq7fgVQGfjr5px+eRNyffTCTYPt0vAi9u+EaGJJCVi7a/YVNlzXuzCN+Nnf
bjZ/1Csc2BA6WEycnQlpYUUvsZbg6PpJ4mqZXsHbsqm4b1bB1cSUnJ9btiHF
PwVPjlYWWhMX53sFbc5LxpXfZW85EXcpyg0prHiB2w6IRt4jXi3qm6ne/gw/
Zyj3VuLQBYruJaLPMKPrYzFMzPrbrnvI9CnO/9v6jrOLRvVNWytccuNx1jVj
3pXERhUTt7mHnmDkfGBcjjj7/TOL6DVPcFfbNit14ognC/pyQuJwAVfjmz3E
9O28V4YfY7HIHd9kS+Jz1085104/wlW7l0g4EO88+WXupP1D/C7s900v4ss5
rLt86g9wUoKO703iPTFWMpvj7+Hj1JWZcOKFVmt0Hd2icb0RvhxP3KN3vfxW
ZxTucC24nExcKN3zX4rZbXziSvZUBnEs947ez28isNTPuzN5xB6/XlzulwnH
iavO+OYTm5cvmssbHoqPMFsCioiV086Gyc0GYy/pTsEvxGtkE7SjvwZhCSZA
4itx09CJw7WJN/GarlUp34mjsjY4CXtdx8YjSW/riU3df4fs338Vy2ySMW0m
nq+bmRQp541XNEZYtxL78I0EPZ/ngc8pj020E4/EuBasTXfCCg6Gi7uI7WSo
qQTLs9gk7tazbuJke8EjO0Tt8NWpTwU9xCv/bgsP6TDDJ/1Gj5K5GTnssd5X
fU8VzpgJev3zvgQX7JZxBKosZST/+ZNG8sg7LwdIS9yg/+/zw6FfCqzCL8D0
Cpmef9/nPW/brbZOF7iUsISvk5hLq1k27Z4n5IqP5LT9O89lMf4LH30AzAvb
fhLffnVgXGHIDwylboY0Ejf2hdePivrDpLYOU/fveklXvMvUCwSd472O1cSZ
qX5V6srB8MvIL66CuK5stYFYaQjEBPIfKCWe6XmfPW0ZBvmfbwUVEktyHV3f
MBoOSbF/DRji4zr3Ft9fEQVia55pviIOOKLu45F+B6zK210TiVPdakctDO9C
N4dPI5Z4IlPwx4rz9+FAyCadYGLento1LPohPLm/6rof8cMJGUvHzw9hIpJj
6kacL/ix0tQ6FkIMvGzt/v3fVgvxvJOLg2rbFWnmxB1bbPU3T8SBBIr33knM
bUpl8wU+ga/BJxIUiM384V5l5lNoC3w17w+5fw6rtqs5hj6DO2az3D3E9l3+
3xeeToSL3+udvxO7GVQLGEolQbKQXnQacQLnlD8OS4EjyyPbrYhrD8wPT1ZO
hbu0hr4xscWmeiv3J6nQC7aLlYmPN3mxlnm9BGFutW4uYg/NMvV9Kmlw8mr6
4yckH2jBh9xS8WlgOKtheZP4Rt+52mGBdODdpHLNkTj8rrBTyEA68F10X6r6
L28mrV+VxmcCmphF+SSvvmZMyegKvgY1zfsZuSQPzQPLxvl8XsMgW1I6irjJ
5mFh8+BrOP38F3WBuEfAwMajNBdA2XR2LfHs2ZAHOT5v4Nr6rukgkreCS5cs
EHZmII73+GJNks/fvd3PzaYwoJxWp7CYOLq/o7ajg4F1wYcLWkjeryzMeZqx
5x0I6Hmt9iNed/GIwe5N78F1pKHrA+kHVJXoFdSZD4LtCh5rSZ+UK14bKRYt
gDjJmpGxrTSyjLK2n7ezAI6s8O/OJ/b8T8zYM70Amsf5jQ8T485A4XNeH2Cb
jc60nwGNtKYdU/Yu+whhN2+M5+vR6LOFsWTozo8gJrrP+Aaxxbu1EZ+9PsK4
w9DKncQefi0uW7s+Qp+Pt3Y16b83i/cYqGZ8gindW/bNOjTSkFJuEDMphnd+
Krr1pF9LrwmYHvQuhmXVBefvEB/uGXgfkVEMwv1VEvuI3VKePuUVKwEjYbux
MiB5rip6gdVdAgc9izyzSF+r7fzL3eZdBpfi2gTPkX6PyT0as/dQOewPXSJ6
lcwPw4y5t4hTOayo4/xeR2xUuPtYQ2g5jMdWbiwn88dEub6CbXE5aKmO1QsT
7+lYW3pBtQJiGuymYxVInvL9/hO2tBJCu25siybzi4ed96HKqiqg7+TVLCHz
0LeTrtqRA1Uw5MtzKGEdjWTPXpA2X/AVHPeL66oS17naDf/U+Qqh7Ue0D62l
kVKI0c2hl19B6AcavS1No/5c/tzFwd/Apchl88gqGh3hixM12VEDXvxvUpXF
SP+mDGqG2NdArfKiJTnLyLxirHW0yrsGPpaea1YlDvCvTdifUwNB57XTVUVJ
31CLFS3XfIdb5dhgizCN+MfcTM6yamGf5LqF85bQqKBun29Yeh1oD7BKtRbQ
SOYxd3+NWCMolIBu2ziF6t7w3dZTaoSGubZxRsQBNcLopUkjrJm0d08do9AA
t3Sov3cjhNhX33cZpVDmWV0lza5G2B06E8E1TCE9cPOITWsCz8B7Rgv6yb7x
69I1pSfNoOdz//xzMs9vv961lK3RAh8zmr/sLqOQ7JWXOsWGLfC2K9bqOtkX
eC65nArb3wIWJg9255F9otSaJ1/qfAv8uDRhIllMoZ2w6bRRYgv83UWndhRS
yGzMqSBMuBWuXpszbcpQ6IDNvLNrRlth+9lG+edkX7FDa4q3J7eD3HI+m7MR
FNpjGybf2d4FJfHO22v3U+jD07CtRgv7YEhHaNl2fgqJnO7vs3IegAM2HMsl
eRy00jRvtd3eIXh5d0sK11EOkkpMvntx8TDU5pUHLvjNRuGvVU7LJY9AVa9l
6gIPNtIz5xEq0h2DtxEFjsWzLNShFuiH/4zDBbbgYS97FhqqeGJmETkJYr60
+I/QWRh4drJz/+4/4MiVs31qyQxs4HPdpcj1F2zW9KvpOE5D9QbJpbkPZuC9
sL+ea9YUZBvkVpbJspB3y59SxTsToLrr5Vb+Pyx04FfuWlmzMfDO2yihPsNC
/o2DdTe3jUGxdPKUNZuNcop0I9u1xuDwTOKLjHlsVCuwnOfa+jHweP5Y4OAS
Nlq53k3Iix6D93Oimh7IsZH2CP9Fo4xRMHrt4SRnyUZZi/jcRvhG4dCqHQnb
PrCRuohSqnXGMKzpPqSU+YmN4hRe+7GfDcNg8skPq0rZaPrgb6mImGHwVbvZ
OlPJRvebrRzv+QxD8q7iFRnNbLSx8gu1adcwcDy3RUlMs5EdayjZqOc3PK3X
uzG1hYPUHjfWvBT4Dedi9wgfU+IgLZ8ww4Y5v0HzmE3CN1UOerLQ5/Kf8SGo
HPb5kIo4yGlUN3RR/RBMc+ez7XeS98efVQqLGwITVW2XquMc9I7V592zcQjG
IjRPJj3koFJxbZFijUGQu0lvb4rjoB8GJVeXbBgEG8+SdfwJHHRZ/ff0zhWD
UHXiYI/TCw4ytFpvHsYehFS4eFz3NQfdLHkU/sx/AE50J9nXVXGQTP2CW+Jh
/dCoIWbDNY9CfqolFvf8+kBwS6uuOjeFXjq8uWNl0wc7pBNXnV5IIZzGGzah
3Qe5fCqtVQJkD54Mmhs+3QtRHbutHqyk0JWNQU0XzvSCWfBNSyU1ChmNL7eQ
294Dha1Th21OUchGwOvYo6pOMCu2dh5zpJC3R9pg7eNOaEwtjbh+gUJiDUqe
SRc7Ydz9/uckVwr14X29gkKdICOsg0ZvUMgtjO9ayq4O8N9xY5VfPIXkXpq8
0HrZBkLyv0E4kULb5rk6p7q0QazIocOJLyj0YM3fvVd12yC3QzbiczqFgnJH
snWrWqHPs3zu0nwK3Q4O2HeupwV2ZiztSWii0Dyz4HLNoWaou+s5V43c9yv1
FxQnvWgGO+9uyVKyp8vk35KdPNYMV0xyDw3+olCooVttQ1YTpHZblKmQPTs6
IL7+rVUDaJR/7C6epdDQwMD4ww/18Clz09z/yJ5dVWSyZXJ1Pfz04YAXN400
P3R78nyvA37x+NQiknuccw87SuZ+h/v0orJDJEdZb9V7vPVqYF2vU/cvsgcX
i1q8uuZaDbrZhpL8JIf/PG3LdKj8CuX3X2k9JrmN3xY9OjJYBYevLjukRPbY
WC4BledUFVww+xVmrkgjoU3zl22lKoClui+1j+ylC8Yar1t9+wKBK3CpB+kh
2e3XG9a5lIHoXJnuxaTHhk9I6TR2F0N8X/CcONKL22YeFQcKfIItVZMSiqR3
r1+T886pK4C3OVZaH0mvH/XmEa+c9w6MHpaYHyRzR46uu0qjUDb83/Ng9P/P
g/8HH6pTEg==
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
/wHLGQQh
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
aeE=
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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

        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0vk/1HkAx/Hha9lybDWSLcQoWR6OQVpS70+lyFFYdEhWUXSxqR5R2/JQ
D3epwWZLCBG2B+vowA6NMaKxmFwx31hXpdA0jpKx7Q+vx/MfeOkdCvEIlGcw
GK5f+9+eCHYJ2/v45hTpkO/rXvvNtitqrSKZOxEgO+u+h6WPrsoDsTuZ+/DH
1rx0E5Yl7ikaW5gyg1E5VF2jydqGJNNlMbrMcPAqGnersX5C1NMrpd8z4+B0
p0VzEeswLiRyd2gw03H1hvuviqwwnP/lwHV15n2UqHDMvmFFw1NDhaus9wTL
Sns6qEkO4rQMN38J4sFWtb2WmZmBB6x1yqnZz6C6Rc2h7moO5PyNx1PMW2EQ
ssNztrwA0rqLhk+8RZBWSB5aR/+J30JGAnxrO2E9q+lve6AUJ3+/1L105Utk
rxLqlL4tQ65bq7aerRhHnKtijF0rYWOcYdG1qx8LUglv7eAj8KdN0Tw4AGlh
QJG+axWiF/aMCkIHoTl6zPlTYQ0STZOSo1cPI2aXr986nVrYGmTePVE6glKz
u+MitzpY2ddUqAe+Bl+YcJRkPIVf5ukA/pK3mHjArb45yIMZT+FiTuYYHNOS
RyVMPpxVc1KI23vE2yp+UTnYAGVdHQ3loXF8HtIcMbwhQGKxh0uTyyS8XFof
K/Q3omjU34ej/wGC6bbg5+uaoBXzSufj2AccyQ+dSN3XjDKbwUMWfAkm1MsP
rs57jttuXj7fJn9EXmxKTuFLIXQUOdn/eksRBm693uJ/0NDiHXTbdAqp+wRH
i39oRe1c7OC7mSnEps13OfJa0b9xyyut9mlMshU38YPbkL6Sb+heMIPBccvk
DartyPV9aKAVOov3puYthXnt6Cgzy2tw/ISTQhlD5iTC3lMa3UrMz6Ambul4
DItwRtC417XnM9ZYHDS6ffEFKi3l9p8umUOVSGLUoNsBJ4WC70zDvyBo1kvj
w+MOKLx+sf2ZxzwSLiRMz/l1Yql5qPmctgz1UdfqlOY6UanRFcQeliHu/qOI
RZwuRC2p13OoWQDPrNxwbEM33B5eE4RvY5DlNpfqhG3dkIRE/s0tYZC+rJW7
k8/3oH/Gu09JS46YGPU1OWq9xExpgOeqSDmSan2CLV/x9ZuzFYl33smR09kt
ibf29+LM8U2r37vLkyPXFtrXT/Uixbyoe1OFPBm546XUkNgHhwUfD5kuRXpV
Lplbs8XQZ9gbxF+hyOj8Gfv8JjEiVWZXOcdQRNuu6JinUIw+zeKlKnEUcY8Y
SJZrFSONrT6flEiRqmlXsU+HGIsPD4mucyiSPGFwbkm/GBL+5aj0bIpsHOjO
D58SozaB31dQQ5GkejtlF10a2jfD24O5FHkqH8b+xKIRkWvSaFRHkVlyf8+9
tTSsalLLiuspcqhmeS7DmEb+eGB8STNFrCvH7SrW07jqrvjjox6KvMrPOqXj
TGPM94lJeC9F1Ec6U5pdaTgeO6VvK6aI0xrVqvNuNOSjO9Wq+ylSnhWuJPKi
ca783jB3lCLx6R5ZMT/TENXu7418QxFuV2yD1WEa5kK1ti1jFJEu574bCKTx
dvhcNW+cIn43jG3sjtNwkBj9dXmSIimt/n5vTtLIldH52yUUaVK7eSUtlAZD
mZOhKKXIvEtL0bYwGr4rHDiCKYpYJii0T56l8R+jolJH
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVyX881HccwPHje1wpc7aWsRKXVjKuOL9O8/l09VAUd8iMJJEf+VFs6ddk
Zx6aH7WjIlaNXFdd6zT6Qca9k19DcZyf37CTyI8tmRwOZ+2P1+P5x8s0+JhX
qCaFQnH/0P+KAvYXlx2Pcj7bEloQYsWRSl+4zvGZrsjSOj/kR4kJ0KK69dyY
fih4sks7ULIF7j1Zd9WKeQQt8I5375FgUAdVK0yYp1EDn1PFkfDgNiubMGKm
ofu5YltnSRAkGKsvr2bmIaFZ34STJBbCLpX0rWKK0bUx5XO2hA+huctSHJ3L
kZFKLqgPyoJwdu9WcWI1SrMwF+W05sE7j/7TLGkDaqgpOKyx8gYcNLu/XcyR
IV2dDhN1qgge7hSUeUXL0U0Rzdv9iRju+Vpl1vZ0ogTfYGbIjiJoPstot7cn
kYwraFgfUAwH6u3Sa/z7kE5+tB2KfQD1Gik83UMKFDp3YPar4kdwpVh9uXZm
AI0mekwPNZXCwlih4Oy5QXSpZcJ2+uUTKLl+i21kP4QOWIia3nxWAeuCy41r
GocRr8TvWjJTCn35lg+8+CNoK0P/UJLjU9gS3rSosBxDzbIX2e99qoCNTycl
SMfR0iqdiG0Hn0HOxXOPFmL/QVWBstfTidVwRylkpGtPoNXOq5eSM2pAK5Ju
og58h+YZw9XJRbWQtPb18lK7SXQ85ufN9s/roLsHZSqXJhHf/bEVdNZDt1fT
0U3kv2itTURf2cyf8KC9f1QhmkIeRXnmP2k1gt9VGs6LeY8+FggNln/UBHeM
g97ucJlGEfH2vy98+Rza7mLHeLoSeU66Ddc4vADRFK83d1yJGr8dqVP7NwMn
6YR/xbMZ1OkX6Pr3yRb4w8AsPixjFm0bF7O6sAx6IzVGNEPn0L57o4aTMhn0
1IXNbNiiQvYOo+7xvq1QED4wsHtGhQaV7V7eL1uBXpthFtgyj3zLtCwjI9tg
v4WUUOUuoJydSp/xiTbgepg4pX63iK7JLfaJ+HIwPqOjdx2pUYyl6Y0GWjuU
jS2XFtOWEK1cE3adb4d5A8faMsUSinQ1L1F/3gG6G0+xhD4UfEWo935dYQfE
FURZh1RT8AWK04ozNp3Arhhdu56pgfdkek1ZPuuEuN7ffG9d0sAdY+ab9+7q
ggUypbKQoom/2O1iJ+zqguk+YVxwmCbeHsvIOhzYDd7Jez9hNH74TWMVP7zq
Bi2a7oC/HYHlm2Yr5XE9sEGgv/j1VQK7edbqXpzpAT6dMWJ4ncDbs1TOb+Z6
gMyylvf+SmCHVmbstoUeyLzsLQ4uJPBGz1/ahikkqPKyfY6KCUz1PHbFSYeE
5puGRSmlBK7gGZoOrSHhRLnpwYdyAlvxYlgOHBJkTtZuJzsIbJZZGHphJwkW
lRxbdheB18i6cl65kKCAkBVPSQLr8Dhz5/eQ4FYrKm0aIPAw10A6sI8EY5k5
fXCCwPncql0Z4SSc8mTPiyYJnC1QnlIcIUHe5jYcMUXgCy0Wd22jSUjtiKp4
qyTw99yclYpYEv4lJRGqRQJ/w41qZZ0hYW+A1LtyicAeggLN9AQSbvc1O/M1
qNilpcPmr0QSAhQTq7S1qJjFxTlpySQ8PkShNGhT8WZBfH1/Cgn6g/TxjGVU
zGi5O2uTSkL0YdNODx0qNtJTmKelk1A3tLVKfyUV07mf7u8/T8J/iQ95fg==

        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVjns00wscwLefx35ED0pHV8UReeZ1lSTfL4pUujdEdWvlEStlDi7Vrahz
UudUpJKRuvSge7lSayqPyOpiCzUVWWUtxkjbbDaM3O4fn/P58/OximaG7iMo
FErID/732kvLSpfUJfnGM5OLc0cZvjxB3e5H7C2w0z6XnSIOBC9v/0OpbDqk
DR5q9xNHgGxEdyyUnQg6Gz4I7cRxwAuSePmzTwAv/XK0hTgNHqve9axmZ0Pl
HJmNmTgLXDZ1lHuyb8CfwiKaqfgqHEjbdMWDXQmsZymH54lLYbLSQFg73QCC
hy8ykrofQeeFt0bN3Gaor9Mgp/oZKC1epVREdcDkDpPbi2OboZmu558g6ITt
q4q/cc63QYjxpW0H/+mCU1m+FbNKX8PF50/r5wiFwMiVhIdz34AXozHYbawX
uEdyK00EXWDMYSXt6fsMQZ++5HtW9MAu75K4dM0XeC+Wpcq5H6ElMSp6/UA/
8O6/lp8JE0G8uVFSaNsAiEUVGYL6zxDbon+36oMUCFEsKQ38Aidsn/Q/bxmG
ldfl3fc5faA+Wxvi8GkEkh123AoMkEBJ1N3mdqkMGLYBgVdbB+Bhaumt+VI5
JIsobixPKTTXFB8eUijg9IFrC+Iah2B/d9qvP0lHoeKBgb/E9St4j6fWq1RK
6OGFM9wbR8A6jMEe0aqgaatV/OoNMig6varCTzEGe/miiImdcgioWeHtq1WD
eNtSzRorBRz5l8rPU2ogsSGoNrJHAa3GvD6jgXHYLqoafpUzChsiay47ySYg
cD9pXhWuhPDDWevL+idh7evgAwwjFeRcO3qeJ9eCV8mRx1mdKuifiNllrJmC
XLuhZCJ/DFpd7F3Kh6dBlb1ua2SIGj7Em+UrVN9h5+4LTiamGjie3ku9/HUG
+IaNjqV8DVh8bp/8i0nBAqZHfn7mOOTS/BvoSgom+OTNfFs3AW3m1np+iVQM
GhSdWzo1AZbOrLx0JRVtpxYtqG6ahDVOf5QJmQTOlfk22RzTgril+3iHlMCI
glvCUbcpKInj3ViYqIMl5WqFzY/P5XJ7vwtSHRwr8nByvzcNL44uXhHJ1MUt
anrM7bTvILt5rrdqVBd1aXz9VO8ZEFXHm3gd0kOu2rLdQjEDUn5XjumoHgaU
ubfm/UbBJy852RaJ+vh3U3C9wWMKmiXMDuUM6GPD6pPxFSZUPGeo3XMzgYZd
fS5zid+p2Jy3TVYnoWFqRufG56+o+NL84A3xIA3XGxXq0AVUFFw/FUIO09Cs
YG+dppOKn+7cKw+T0bDmwYizYxcV1RwDxpCGhhQJbd6lj1Rc9q5etNCAxPOb
fbr2DFHxlJmtINmRxDvmd2K0OgSeLfQ5yXImMb00wSJPj8DsJWGuT11IDPZw
f7uCRmCBbWa2wc8kDm9uCIw2JLBqZc/GYh8S3TLf27fOJbA3IpvbFkLiU4mx
/OpiAvt6bicrfyExJ+XNXdelBA7Ra63MQ0ncS7kWxbMkUB03mBEbQaLuIrvO
aWsCZ6f7+2jpJG4M8a+OdSBwvnb7sGUUiRY9JPO7I4GLMpiFgTEkfovrWM5y
JtDmTNF4bjyJFzN3FfBdCXSYxS57tJ/EKGPr0H3uBLrmtEZ8TCDRo1BqOONB
4EpTkZ5O4o/e8iouy5NAn3z1Q7skEt+x0465ryLwPwUoTwQ=
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAh7dr92A+cD5A9QYBxzZqvi6xnaUH
zU0/Tg474NkLSL9/0xmsxsxdP0AMrXKlC1i/qORXL6bMbT85C+Y7iwtovzzt
9vCVzH0/toqCIH4LeL+GccbRjcyNP3TK0JJ3C4i/qzMuwonMnT9T6vdLdAuY
v74UYrqHzK0/Q3qLqHILqL+5mP15XA2/P4Rfi25TDrm/YSFvPTcRxz+bQHiQ
6JzCv97Ce6rhdc4/catT4BiUyL8Kl6R8ez3TP+skCvy5DM+/kVMQfYT71j8H
L+hxZovSv/R0XO7CCds/6tK4SyjR1b+TvPYVEgXfP8zj3eCiB9m/jwVLy+9d
4T+B1Apc1gbcv0PfCkRxYeM/iUwlPcJG379tPE3psULlPzPSI4KzJ+G/tay2
6Xoa5z+gNF9DYqTiv2tPkKJeGuk/tlqRN21B5L+XdeyHAfjqP7Zwx57UwuW/
Mc64Jb/97D9gSvQ4mGTnv+k5rB4F+u4/iFrLMLj+6L+LFBEiBWrwP5lapps0
feq/WiUEERVr8T9WHng5DRzsv+N3OJYEW/I/+9FNSkKf7b+k46R3AV/zP0tJ
Go7TQu+/89ikhkJe9D+Me8iXYG/wv/4P5itjTPU/acoFooUv8b8/YF8tkU72
Pxl7vsXY//G/PPIZxZ4/9z+/I/kiWsLyv8cNaIrwK/g/pOcIrwmB87+KQu6r
Tyz5P14NlFTnT/S/B7m1Y44b+j8MK6Ez8xD1v7xItXfaHvs/kKopLC3i9b//
YUi5ah38P1JFh1OVr/a//rwckdoK/T8K2Ga0K2/3vzMxKcVXDP4/lszBLvA+
+L8k53aPtPz+Pxe5nuLiAPm/oyZYh1Xo/z/YwFDFA7/5v62/uO0BdABAbSp+
wVKN+r/mDObiSOsAQPiLLffPTfu/umYvhpZsAUBWT1hGex78v2xhmfRT5QFA
qgoFz1Th/L/lIM15s1sCQD3hhoZcoP2/+uwcrRncAkClGYRXkm/+v+xZjavv
UwNAAkoDYvYw/7960xlYzNUDQBru/kJEAQDAzxFwG0tVBEDSxGZsJGgAwALx
5qk5zARAhZePshvIAMDQ3HnmLk0FQCIbdgUqMAHAfGkt7pPFBUC6mh11T5EB
wO+6qgybOwZA8acv/IvwAcD+GETZqLsGQBNm/4/fVwLA6hf+cCYzB0AvIJBA
SrgCwDyS6P07NQdAqJzsxfi5AsCNDNOKUTcHQCAZSUunuwLAMAGopHw7B0AS
EgJWBL8CwHfqUdjSQwdA9gN0a77FAsAEvaU/f1QHQL3nV5Yy0wLAHWJNDth1
B0BLrx/sGu4CwG7cN5vtdwdAwyt8ccnvAsDAViIoA3oHQDyo2PZ38QLAZEv3
QS5+B0AvoZEB1fQCwKo0oXWEhgdAEpMDF4/7AsA2B/XcMJcHQNh250EDCQPA
iIHfaUaZB0BS80PHsQoDwNn7yfZbmwdAym+gTGAMA8B88J4Qh58HQLxoWVe9
DwPAw9lIRN2nB0CgWstsdxYDwBRUM9HyqQdAGNcn8iUYA8Bmzh1eCKwHQJFT
hHfUGQPACsPydzOwB0CETD2CMR0DwFw93QRJsgdA/ciZB+AeA8Ctt8eRXrQH
QHVF9oyOIAPA/jGyHnS2B0DuwVISPSIDwFCsnKuJuAdAZz6vl+sjA8Bv/Vop

        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxX040wkcAPC96FpeelJIV5dJ9/RCQ9dUevL1cnoRl7xUrBKLuqZi1ptj
iVBL7nYPbqlE5WWrJEtvl31/tLE0rxEmCxk9uQhRLHN3f3yej3XYMb9wColE
8vnP/1dpHStMjQ2I+dvNWZo0New8M13PNzQgyCZdUqVADVrLWs0AzYAYqJEY
S8+rwcD70DfFDANCtslVlnpODe6lOWtjp6lEhAvH2jFODTK+UXHPCJV4uKqi
P4mjhrL52mxpO5UIMD7CW+GlhltbRbzAQiohfCG/xJupBkZ9n87KmUp4uNkP
NJ5oBy/f4TXLmimE7WD7hHyoDcj20QmMKArhdUi0dh+nDQ7Yt19/RqUQeW9N
c2UdrRBkOxWVmkMmGGkvnzwIbIXJLbMs2h3IxCjTVR8tfw1OckHtSgWJGLyj
jG5hvgaDDUqnJ/tJhFWQMKuupAW+FXT0X+2fxgsU8750eguY1+coXBdN4/Lu
tr7ey83ALvVW9gboUZ9WYtFt3gy09hpuVtwUGjt5RN9KeQVN40RCRek33G5m
ET9FegWju1KdJlt1WDN0U/pDVBN48daZ/kTWYZzIc0FvdyMoUkO3a9dNIvvE
MgfXvY0g0gQz80MmMGmHPJpd2wC/26n4moyv2Baad2DR5gbQlJtE/fjkC77U
cA3Wc+ohzNA5JbJ7HP0yaq4l+9SB0S+aaTvLcdz04MblKfdaMGrxs9ZtHENx
3acP1CUqcPCHAnfuZzzpjzlMs5cgSLPwFUhGUcotK5Ea1cCGWbK8t40juDfN
2pL4Rwmm8Z07i2eOIG/O7J4vXdXgsqZWKrAbxsn0KLJMVgV5BYXMg4GfcLBw
kt+QpwBf+mdm7IIh9LadETJbJAfj2PW+bhEf8Xtxcob65HMwrTzqqKsfQH9h
il3T4Uo4m3B6T5nbB5ycd2+JBbsCchVLWwXC9zhH6HP0/c8E0CbQ0l/fh0uH
29apYmRgJdWJnbZqkVZGce11eAZnWMsoJvffYaXPKmN/s6fgFbv81jt6D+5a
WJgRTHkMcquazJajXajqNFbyn5fB7IOPrvKknWh5PIaYkEhh+MrCuzxPNXqQ
q9jC8PsgKV+543j/a/zjXH1KUmAxjP29IIn1/BVuKTFrENpJIKd6a8ApVgMS
Csdj7eJ8KA2RRowF12DfOV9RXUweNM9a4a1bLMcE1kLeh/xsCL3m1vXm4VMs
TfBkS0qEUL06FEsZdzBxRKsSiBNh+RtX3Zfy25g7urGgd18iCJLpazf63Eb8
nHnGxSwRvNveFldzJDg57rl6hH8WGuP35bwpKsIYXf5fQQEJ0KFkxX9nk4/V
NJXcV/8bdJbfOfGAcRUv2KmGLoq5kDsnctDF5woqGHE3wIwLYWzbiBecbCQ7
2gWO8qOhjyYJ1BSJ8DQz7WlwQBR88i9cQ7PJxKY4kaG/ngO0Zg/tI0YaZuaK
mOniMLh0urJZxRGgSf7X7DF+KMy1cpN3F53HFPFu0t6A/bDosMtNI5tk/HjA
MWuXngUhJG6ljBGH9847Vvwp9oNftx3Le190Cq8Lhy+GBvhCTFZkwlyb40hn
su/u128Dk6C6OBUjEnt2s9uuiN2BPqR0ptuEY3JLVQdXvwEOGaYO9zP24OaJ
qu+KxavB6shX9WJ7b5znnM5uEi+B/D2s+495HNnZ+vBcNsPd5V/zVH8n
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0vk71AkAx/Exk57NVkqObXNEpZXG1eHRtc5ipSYSW5ialQpF1pKkWjSu
kNugLfE4G0fsYhyfL9mZQpM7GsoM1rUVmQrNNNv+8H5e/8Bbm+HneJZMIpEc
vva/XqV+6ws6KUS0dqRsUk4ED6+UbrXnFGIHUlbdIIngrF0TF/OMQgy75W1Q
kQlhnfFF6ttGIUwyW0wtJEJoR8SLdrRSCMFqOX/WRyGGTpaWNtdQCKokbMRu
RggnhYn9w39QiO7+4OaSXiHML3gwlC9SCPXbPhG+hUJYONTm6MhRiJOafyY4
2QixscVVxTWHTOhZebdzpkbw4UjuoygzMrF3+zDpbeII3ss5W7jw5YjFfY8a
Iw1G0GFzdPURbzkigRh3MS18DX55dceYlESEn9C32i56Ba5xS/lvKSRCGviv
Vt3GV8ixVu2iGpEIVm0k/aDvMHZ+LuF9GyNDvL2QnVU0hJmEvy4oEF+QS1Gh
v5sTINFRyVm6JMV+61a5oQMChDOsNxltkcK417Qq8dpLGKVSLlW6S2AdE86z
4g2CqsTKDrj1GWXxSdNN5EGoEdeVfqhcQu736rIuiwE0JM7Jb59ZRFVHWNB4
/AtUlO4Z8lNehAY/T4K2fpyeWmNIPryAIvH98SzlftB/bfTsDfiEGG/G8L6j
fbCnckaz7n7E/Pl73KD4Xrz/xvp1ef8HhN2uUqoc6MGkUX7jMpkYHrK4i4+U
e8C6mvRd0S4x6Bl79avdu2Eq5jf86D+PyRqvlw4lXdjMEVmpZb3Hk60nMssm
OtGRG3Fof/ccnjao1ymadKK1b4matzgLC8ujXX4v+Sgya3GXbp4FSd1t3azL
MyRcpyofbnwLkrnahsvv2uGtE2GiofgGbPIp85vn29C4Yt4uLmwG2YoO+nc+
P8EUjSIWzk+BRd29+DyNhyoj4pda20nYTBeO3V3Lhdgpo0Of8w9M5nhpvoWt
6FHc8FlTYRzP0v09n2o+hp5inU550CiKmbwF3YpmuF76NLT162epUSr+1bYE
tniJ3DYeGIHbkYEV9281osvyeanPqWGs0RE1DbA5SJ820Uv/NAjtHdIyKqsG
qxxftCfl9cPRa/lZUXI1AswrTvOie7DcwLcgk6jEutOim5JtndjmxbXpZ7Bh
uSpZ98XKNtizLjpff1iIx4MjaS6jj/FwzdzsuNIDhK5tNS07x0GsvIH8SlkG
bFWN128TlIIZPFCaT4tB89a04EafUjiGOmkxZqKxx2yxjyYpgdYNfrIWMxpU
t+bkYI0ScJitIVn1UVB6cGzl3/QivEmrOHRHlwkBNUBGH8vH8ero0VBJOIZi
vdr1Bdk4KLq8u4AWAj7bINpRkoXXU+c0tJlX0Nz50TpEIwtX59yX5dQHo0A1
qolLz0QZ6afuJN0g+D0orDwzlgoVLZ1LYZIALAvsMjQUxIFbk29fTLuAqboz
xdc0YrHEvbP+Xv058GVzOm30aBj0X5tI1fVCRpyS6tmxSKSJj0fclDBw/GDh
wi5BKJ4wFILKaT9Ds5s300m/AsPfRWuzdU9gwn3ylc9YINLvcdhMiSPmpx1j
rQQ+eFrb11ZPswOTnOofMuaJjA+3yCkSSxjvLGF7CE6h3dM3sJdmBjbXVZwq
sEdnA4snf0wPC/oH7Fw2+TQhlfwwvdi26T8k6bCB
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAsuJMBoTrB8DsEzSyD+QCQAEoTT2j
6QfAbAaw/pPiAkBQbU10wucHwOz4K0sY4QJA7vdN4gDkB8Dr3SPkIN4CQCoN
T7593AfA6acTFjLYAkCiN1F2d80HwOY783lUzAJAk4xV5mqvB8DgY7JBmbQC
QHQ2XsZRcwfA1LMw0SKFAkBS6FRMA/EGwM33M+E5HgJA4btjbld3BsBh/9DG
Ir4BQJoaz48OAAbADcDWNe5fAUBv1x93qX4FwMkk45W9+QBA9bWI+uYFBcAh
TYnLXpoAQJfy1kMIgwTAiRk28gMzAEBjuoGMjAIEwBE+l0QXm/8/4aNEcbOK
A8BJ0PVPyt3+P3rr7Bu+CAPAoKphPYUQ/j/FVK1ia48CwC8MAdbjUP0/OknK
qHsYAsDt33GBB5X8P8qbzLRvlwHAzPvvDjPJ+z8MEOdcBh8BwOKeoUcCC/s/
aeLmyoCcAMAYimBi2Tz6P/A/QzheHADAfefwj3Vy+T9Tfm+DvEn/vxvMtGi1
tfg//TgjIoRG/r/a+IUj/ej3Pwo3B/mQVP2/z6yKiegp9z9O8bVbZU78v+Wo
nNHbWvY/5sEdvf9M+78rF4AslI/1P+HVtVbfXPq/pwyXMvDR9D8Tphh8hlj5
v0VKuxpUBPQ/qLmr2XJl+L8ZDxOuW0TzP5Hj9zUld/e/HEY8VCiI8j+yyQ4e
n3T2v0HFctz8u/E/NfNVPl6D9b+cy9wPdf3wP/DYZ+rkffS/GRpUJfUu8D//
1DKVMX3zv4q1OZt0yO4/cRQueMON8r9PRTJCRk7tPxoQ9OYcivG/V2VFrSe0
6z8mT+qNu5fwv8uTv25QNeo/DEkzZ0BU77+fptxVA77oPzpsJ8qYUO2/tEkU
AcYm5z8uFnyde2/rvzf7sgLQquU/kDhmiO1l6b/7PGzI6Q7kP7jhsOPpfue/
Lo2M5EqO4j+Jt208cqHlv7/BTyY2FeE/yAXArImb478lDVtYYvjeP83aco0r
uOG/prPkEOf82z9/UHYLuVjfv6t6o1GLwdg/tUTr9jJU279uCqjdQ5XVP3ZG
IcPBlNe/Crd6Fouf0j8UOYK+boTTv1gIBa/j084/enJINWFyz79P3LCKztXI
P28lVeMUAsi/wUHo/OH1wj86dG/fCeC/v3vQE/9oLLk/xNM4ez3QsL+5IR9v
kY6qP95CZIn8jLC/jnnaL1ckqj/4sY+Xu0mwv2LRlfAcuqk/WiDNZ3OGr78N
gQxyqOWoPyuZKNlrbK2/YeD5dL88pz/Oit+7XDipvwqf1Hrt6qM/FW5NgT7Q
oL+3OBQNk46aP0pMpJ28SaC/Y+iKjh66mT/8VPZzdYafvwyYARCq5Zg/zc1R
5W1snb9g9+4SwTyXP3C/CMheOJm/CbbJGO/qkz+3onaNQNCQv7Vm/kiWjoo/
QL5IjHmGj78KxutLreWIPxE3pP1xbI2/XSXZTsQ8hz+0KFvgYjiJvwbks1Ty
6oM/+gvJpUTQgL+uwtLAnI56P5cJSS56bH2/V4Gtxso8dz86+/8Qazh5v/8/
iMz46nM/gN5t1kzQcL+genuwqY5qP0agSXJ7OGm/8vcwvAXrYz+Mg7c3XdBg
v4XqzI/Djlo/pM1K+n3QUL9Pym9O945KP5YnDKVJYXC+LADlb1HfaT7Mu4Bg

        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVy308FHYAx/G7w90Ky2Gdh2pTuZ6sTm0SjSiUiENdyXKiCy0sD6nmKUoa
I8pDi10dL3HnlYptF/n+yvUglcc8VNRZTZFnnbs8rf3xeb3/+pjsD/U4QKNQ
KK6f+1/NPvlQ7nMGWSgzWxWoopGKrqHj0g4GOeVa8Khvgkb2NU1rPG9jkMG2
ecGHFTRS/rfhAuMWBql5P3r1yBiN7Ermbs2vZxD+PCk7ZoBGriy9I7xczSAi
b4fFmXIasfQVcksLGGTZyI+G1XU0EtC672bVfgbhLEpn6FykEa8lfP+613QS
1OjScGMtjYh0hrPCD9LJaOlOkzXNVOLfXakXN6xBAgPVF2WEU8ktHUp8ZKgG
UYv9kv5Bi0pC5R0/fTGhTgar/KNNyiikar6F4+kIdTLL1W/jOlBItFldyIFx
NaK88Kz6Sc0szr/uY8l/USNZHQY9pZRZOKoyypwmaSS6Xrc7Zu0MeOX3ap1P
0sjMl6JBtSPT6HTirLimSSM+BnFenpVTGN389YmZs1RCb2aey303iaDuS659
ulTi9tKqJ2PFJI52FWjdyaCQN9lGc+O8P0FR3Wak0qEQLssx2SJdhauRVp6/
r5uF7zuG4eUmJTKtGrcZmc9AGhSfQFVXYsPGRLtm22ncsE6f0d8yAW2GrS7f
agoTt708FkUoIMsUJJRvmMRXdMHkcPFHWO4Vj2xw/oSWAm1p1PtxdH5QWuU5
qvCi95DrqNE41lf5nzL3UiIpga/4xnsM0c5WIamCCdDlwnGD/FH8e8WQcztA
gZbhnDp64wiYlvPH2BEfsYlrerNYZwTB2cbpgtBxKP2Cwm3shlFUmVoXGDoG
3Z9HmT/0DyKfaaxRGD+KCNgI/EMHUGtxw7AyZgQhIcqDkS39KMoVrJn99fNX
05054NGH1ijtByybIWRc9AlUdr6DdIev/KX1AJjtTv2Dm3rBEvZP6/n0o6nC
N2d77Vs0JqY8Vni+x7KxN8NZpm+gLvfL3x7Si5rm7HB7UQ+mwBSbZr4Fw+a1
MHG5HO7mLcHitH/wRG/1BN/4FRYuaDATieXQHByfOb3gJc6uldql2b9CZEq2
X1JXBwI4iaLuTS+weeNBw+KyZzA3uTtHP6kd58zPLcmuaEaFxdJWYVQLWI2r
mFLFU+yKVTgs8WmA1t3euO6Rh9idTWs3HHmAuh5q3g7NWqQOlfBj64AaTVHD
861SrI9dbLpHVo5nf+04nCUpBcdPJHNKKIeb0IAttyvFyi1LAyxsylF/pqd7
dXsJLPVdHJeFXQP2RLk/opZAzczT/hKvDOLJ/HVUXjFy9/pZnWaXIMF2QBVC
LcSdWzErvWVC7PmNpX1BchEV8XFB622EcPcVx3La8+CSRuOuCPsDWzi2w/XU
PLCK5rgW8PLBaRa00Hg5kLSyHM6w80Cf/2deGPU82tZ9972PLAMHrEtcciVn
ERUXKvg2LB1uXY1rGqgpsMuJ2n+FlwbrOKUunZeMtvtJ3qnsFDBrnTrDqUmY
Nb3szJfF49iFx/UFkuPIOuGeVsqLgVuncaYW7yiWi/edOs8+BvbCQ7uPUyPg
MfdEZKAsDIXb9B6JJcF4Gq77opAdBG7T9V3J1ABMNK+uj5bxobouvH9P4g37
gOyoPJk7RCeroJI4w9au6OHNnWE192RegWlTQTX/AS8AkLY=
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVjns41HkYxX819/nNbx8ilXZrLLPpJl2UCt9TKW0bWmwXKbbWRLHWlpZt
0kiWUlsqw4ZuZJUWlUohExoqRZY8ZlyS5JZb7rdtpz/e5zyf533Pe47RLj8n
z4kURdlr57OGm7lY6OuwQE0wr4gJyCVps/yLVJ+5k+PmnZtLKsR/bgvSZUGu
1jSu4DwiYr3iw3WTWFDeCe+tPf+IZA2uVKVM1t5L6yeZZOaRFqXxFuvpLMCz
yHTrsJJscO4NlH7DgvjZwT3vlhUQUeDZnCwrFi6fq3w3lllEIuMkZ2f4avfj
8hKbrDIynKPr6nhB+y8+aqf/mkqSLqEWJ6hY6L6mySy/X008vNa43hzQ+qfV
NmtO1hHqev3+P4zZkMt8rqeGN5ALBWUaIxc2dIzW2VsPNxKZpNBFHcqG+JCV
s9T9PXEI01HuyGCDos0D1se3EMO8W0FX37BR5ngkLFjQTioHUiW3GQ48nj2/
5WvfQaoDUt7WLefgzMgS9IV1kaqXwx0l3hwUd8l27hnsJoWSpPYwBQfm47Vz
Fk75SFI3Jy6jijjgN/l0mjj2Es3LpPMxAxxcniXc/VNIHxmx/dQ4/DUXppxk
T+pSP9GLTgv5ypkLca6fu6pigHzZeE9XJOeC0rFsbukfJDNp/e7sDC42WZtJ
LRYMk72/76+PeMOF15NFihe7RkhS89zHYoYHjxYLl/yQUVJttrwnyJqHsiap
oCFrjIzvv6R3cS8PpsGKjW6aceJN8e3qFTxY+lfAeOg/Uip9Utyg0vpnig1O
GFCQPNdYpffyEO9cWZ6RTCFAYPfJ2oQPUYBR5IfVE8CczixvdeajpqBvukPN
BERPOhTrIefD1KOod8e+iZjyi+JmbAYfKa3mRUe5LEQ8F96Jq+UjXvlXww8x
LKz6OeRZtkCA7sLjFQ4SNvrbNponLBdAdk+nwC2PjVhP/4hvpQLI+xVDUx05
sHjYZnZfIUCOUebstjYOHotyi7oKBPCKK7viLeNCkRzlv7ZbgMDVBz5+QfPg
aZjt7SYWQvk6zebpNR6MT1q72NgLIc9qebVwqbZ3lf6phsNCBIY/8Egv56N2
b+frK/8IURKqW+zkI8CLUbHefLUQsS+8DiaNCnBfmpIQJKQRz94ipmOEiCqN
MIxaRkP/uK2u2JTGnSP7Up7sptG94oHa9R6NUkHisexzNCh14aUbm0RQRy12
lilpHFOVpqa8EcHPzsrU9jENy6uRl+c2isAetx2n82m0HLaLTmsSYYHX5r/j
CmhstMgLzmwT4ZhN0OhDlTYvKe17ZZ8I89sfJQ6X0EgKOTVYxWcgt93Qd7Ca
htLquzW8hQwmjzg9tVHTODCVZ3liMYMb6dsvcjU0TPry5zFLGVQY+q5X1NCI
SF1hoLeSweye0/F362lsMpzTOmMtg/KEStu+Jho1g/zTS7cx2ONcNy3nPY0z
/xaGPtjOYIzf3BnaTAPp8kCrnQxmHRiK1WvV9pEO/bh6NwPZhukdiz7Q8Kls
XuLgy0CXMskf0bL4VuLsV34Mku/Oi8nvoFF20n2Gy68MysQ2q5y6aCyxreK5
/sbA8/U6A8NuGu9mnhurCWIwEunY3qDl86MOPe4yBmdWbVVe76Gxvkr4/m0w
A8mgR7T/Rxpjt1VqzxAG/wNcsiG+
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVkHtUjHkYxydzf9Vr0uhyDCXqNJVLRthTdh6OZXSZ2pZymdJFdkpqZVAt
E6k1yUlstXZXt3GZIiVlGhn7+x2rKFqlURtDjXFaVChissm++8dznvM5n+/z
POc8c2JTwuKn0Gi0YKr+7yOBHUv4PDoc9Ln9ddGeG2J9/i1VJcW05Prs6243
xKpOndHflvJVZW2mh3qxS0RFdvx0il3Swhcs1YulsakGLZ/K84TJtz80iS+k
8RWbnCh+c7RkfJ9OHHtuY32pK5Wvlk5EZtSLuyb7fYS+lJdW7w6eVItF7udr
ZJEUB2ueSAIq0dKgAq+BLCrv3uPsNh+jjOF0j3oN5c0S1r/8NuRPdzxXep8O
cDCwrC/hAapweDyn/z2Vb1bGp+3sQdnlYbNhFgOi/crXq4xGVHm29TfzagZ0
jMaYBE4mlKKJd3iSwIBF5vRhXrEZNczW2o2dYED/ICcfSwbQ6UIvXlwjA/C0
0sN57S9Qc075Mb6R8sENyzXfDKKkwVbVczoTQs+uzFK+G0baEMccQsgEy9HE
At1Xb5HSY6ZVyLdMeHv/TdXxwhF0ZP+sz91pTOCofedOezmKRPdXjzeUMEF3
aHLNaff3KLLYZU9dMxMKhqf4sjPHkFA2Z4Q+SO3bfrQ9E39Au4u7hxR2LChI
Cl7ULbCgL4F5cqEfCyRfOkYNqeNoPi3+uSiaBafKeraa6j6hXo93fTIVCzj3
nH65O3UCeYSef/z4EgscWX1pf0o/I93oxojSByyA9m1NcXmTqIWLwzI/UfMu
7i2mZ1/QPucgqdaZDRh8/9CeoOHzVcdap0rYELRsj3KH2Arb1967dTaFDXJF
UfL7l1ZYWO+Dfy5kQ+jyjyJG7hTc5BXoV6Fng+Tm3qdZvnT8Wp2rZTxjA79r
WZSqm47jim7XXWRxQO7ZaxOrYODwiWveuxZwwLD2lPqCMxMPxXRqjn3HAeuh
U9YZiIlp/iXqlh85sDG8cYsuiYUb+fkl4RUcUKx1OHiAZONaudLRs4UDgswI
g/0lNnbzmWsneM2Bv/dftXHexMErLEM22+y4EG21QVAzzsFdoh2qNj8uWAKn
86o1XHzx1YssRRwX5j2pFSnDCOxWnndAoeKCYCzfu2eEwLPann08eZnyXXlE
WelUrBuNSmV3c2FiWduNYbE1Lix+lIQ+UfvNL8p5T63x6xrinyJXAozr3RLU
uTZ4sHlrzM21BMwLPsO6LiSxvyAlSi4hQIYyzTneJM5PVW4h1xFw2keGQxeS
eLFzyYbNAQQ42s/IGFhC4oy0R+tGgwjg9/00bAsk5nhtWOwaRgBjV6JBHk7i
eQUB9CwZda/QR21/mMR7BzbRPCIJELDJTFMOie/4J3xup1iW/mpLtYrEO14e
+ei0lQBD5JkZq/JJfGVV82BdDAH33Gfk7vyVxCvHxAbTdgL0OkvKrVoSnwwM
6TzyPQEWz4dBx6+Q+HlF1F/z5QQsL6kTbr5KYpX0wJ30BAIaDiWa3zSRuEPT
pLdNIuBygDF8ZguJXSdbrzVS/FavEw3cIbFifa82cicB3guLeHV3SexgZblc
lUxApZ20bU0nieUR7JqQFAL6czw1tgYSN12yvzhGsYuFlW3sJrE1w73y9x8I
iE40R2t6SRy12ffcyl3U/4xoRaqRxP8B3aswew==
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVzntUjGkYAPBp7vNVYymdSlG0TMVKU5qmab9X2i0pappkUym6IhJt4VQT
SUJO7C7GGnZT1KImHTW28T5jSEjIZRm5HEJlkmroqvbzx3Oe8zvP1XHNJmki
nUajhVDxLaem2k8avUdAer8sOnUvH6WwBY7RlO047rLuQspl7kLNXQJapk0K
Xl/AR0nPAyLzWglw+ummT1oeHyWEZZxktBDQfsR32uZMPor1vjHf7AYBgb6z
9dnxfCTlbQ611xBgXTQYWeTNR+LKa6VkJQGN9orwM13mSO8WvnNuLgFPLt1y
zZSYo0Wr5QuMEdQ+/muxRmGGMrD66e4fqPuEV8KCMVO0JVnfixkE7N+atdEz
1BT5XDp27eEzHkhOKKsvVhOoLRhxDtXwAISq+1oTAgmnDvjZFPJAsNGEP7aC
h1YV+PvuiOVBdrIov6aei8J9csp3C3lwujXqkZHgoinHZC3rTHnQYFwbdzGV
gxQCkcGmgws1V6pYytts1D9B375ZzQX5l/Z91g5sNDl3Q1NZKRdEPZ8DzeUs
RPPXyHOTuNAcNvKutI2J1D62HrMkXJBESU76CZhIpJ9a8bclF/50TCxJ28tA
e2Bo960uDtxbsS1W8JyOToRsd7qj5cCnoK2JMRI62jXzjVv2HxzoOBcVMrPE
BAmdVy7sWc8BqM1dbvGGhiofrx+R+HOgIGtvUe5iGuq9nTTX04YDSDbhPzB3
ghxLptlz+9gQ6KV+97zrK/nAs4JdfpMNDms+NjqcHyO3LxXGdivZcDZlRLYr
YpR8z1m9lchiw5DhQZTecoR0MssYaltKObhgZph6iHT1K81MdGRDs7F6ukPC
IDk8fbmqbZgFKbaVRW++/0IeWWyM6mxlQcO0bXVNLUZylC/SPalgwROF1TJl
8QDpbFbkdDiPBc3x8+1al/WTc8LwwGcZC+KYM87ZD30iDZLf84XzWHBqSUO4
Lr2XlKdLc2zoLLi36FVb8b8G8lnQBS/9Uyac8iyb5+PRTdIirT4k1DLhO3V0
33H1e/JzVaLZ0T1MeDWgE0l4b0lVebihfDUTQl2aVl0vfE1KOgXiaA8mIDcD
0+7ES7I0mshv51H9Lt5O/J/15Pms4kKv1wyg2TeO3A96RB7T9w2L6xkgH/VQ
OTffJYM7Bl1tDjIA/ol5Jq29TjbPICK1yVTdQyvdoawnLcsYnyb7UvNxFfEp
0nxyzp3jAb5TKeO8GIVehUUeyWn7LKl+2gHHcWEtDjzufvipBWU/xdv4A7U4
JfXmi8wplJvq0pzRRXyWNZh5YRLl1q6chvI6LPhRenoGQflFuPJxej12ruaa
0CfoIP865+UUjgaLrR7ODh2nA430LPs1ToODck4GK79SzvdL1qs1eN3ShUfF
Y5RZMb1/bbiCq96vnb9lmLL5oQm3NoxdHHBMxwAdEH/84JllWizeU7zL/Zur
mRm/7NDioI8RlfJ+yqGmMtOzWryu0WC066N8yNp6k8lVXLXSdn/ER8pWwlML
667iy/itqqyHcr33zs5XV/Gt2ar/+gyUV6IEhbkOdxsDZpV8oKwIEYwn6fDI
Kosl7d2UfWREzWEdJnQvNrp8c3uUIR502Nal6rfsLso58a0WPTrsWpp5uamT
+n96Ss11m2v4f9rVPgk=
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVjmlQk1cYRkOWL3saJSCMlk1AoYFSCVtETVlULJRMTVlUEFOhiAozImrB
KgIWEhQRgmiBpjquqdYULCAg91VC0LakskMFhRIGCghGUCMS088fd945c848
cx2laV8lEgkEQgT+Plzi/QCbYCoT9Lba+ORYDjT1BIwrMSao7awr7aM5cGgy
oHaRwoSjK5MGeiUcmLQUSmrJTLDxwCShYg50JgmL3YhMCBdtDHPaxIFLrLU0
rokBd5K03oMCDgTFBBoHXzIgr0ZLE3M5cGJ2ff+hpwxwiGir9mtjQ4NNIy+w
mgESnZbbuJoNCyOx12cLGGBzv2UFUrCgs/mU8kACA/SpzVtUJBbsPudrmS9g
wM8pdTlhSUwwsUlPZUwGvOi7lbyniwGR2Rtd7J7Rwav0Usw6vBNido9P1NDh
KL0sxVhOBz7fprNLTgeJIc9dgNGhL1wmroung8Oq9PmVyTSQsz92lfnQIVsX
v0/RTYWekZCd7mw6THhtxqaDqTCgHuXFjdBANPKp6s1VDMbsrzgeq6cBn2S1
mMvDQCUbUnmdogEt3RityaAAlaoqr06gwXTVQM/UABn2OV944uRPg93CegvF
ZjLIA80Vziwa/OVc5vdCRYLb8/k1vFEqaLLTlrcvI0HRtfxN52qpoHbfTI8/
QgRK6vIN43IqXD5jZ9v7xAJyuztOu0qpwE962asLs4BGH3PMGx/cyzU/Zf1C
gAXfyKxaFhVuOih4N5YRoOMLb4tQPQZHRh/EZLHNSLq9iJRYj0G247ZKVpcJ
LTBYcelnMFAHTa9V3lpE4b8TvC2/wQDMmbMX0t4h33TZvhw/DIbXUMalfgto
VYfA9IyDweowudCD9xZ1ukUz/v6XAuJ3zEs7+9+gPKfK1Jt3KXC+uCCx9LfX
SOeZ4Rt7lgLGCsL+suJXqNOnNbM8kQL+wRkF5qh5NDToZ60JxPt2vTllzRy6
eMzRM4dLgeE5ceH6Vwa0HzyqPMfJIDbVHbBsf4E6rHRpqmYyFL8VBO7/ehbN
JI4115Xg3muuIffZNLKMsk+s2YOzxzVDZekkMoge54vWkcFBKhH/YD2Bvt1g
xalaQgZurtGXdWUMjQ0dnRqfIIEopaRHETeKVhzeHqppwlnmUvlcP4y2q3e8
LiolgcPQDp8S/hBaYzIw3PaSYPj4jqCcq/3oQcj7CskGvC/5Urm0uQvF8j3y
Uq1xlsb0i7fqUMh5bKzOigTQPaNOcdchT/JwqAXOhE0nZXkWOkQeLKEqLHHm
Vwvrb7cjdaFRfpeL96+YVfasdoRNtZwlMz/8B+2a0fyJ7tzYpvzRTASR2nWq
0PcRUloJCPr3RACney1X2I+Q/AR7lwfOorKtlUj/ECXEghMs4pyZHTFX8hAx
6a5Xx94SgRDyz+1ts21Immy46TVPhOy+0wfdrmtRRPcf7Mw53G9xjgg+rkX+
osupLS9x39TgEhelRRybaK8oA753cby3mKxFd9uaarJm8H7v5wHGhFZ02fsc
r/U53g/1LVnq34qKlGkZHJwhMnXyk49a0e7DTn4Xp3AWVFTsvKdBkaPvyicn
8b1rnx38TqFBwsgeozfOYPswvHSvBrk0/hr7/X+4PxXvcitIg7irChq0E/j+
+3mT1laD/gd5ilsp
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
Gt8lQH8B3LLeAg==
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0ms4lfkaBnDk+K61XtZaL7aoYTA2yWEih/D/G2fDhBkl2RFyilCXs4QJ
UdSgJoMZ1ZhZJiOkSSTPRtgIWXIKq0VOicZhMDnN2h+e675+H+4v9/Wo+Ia7
nREREhIKE9z/M58PqfOuFHSmpvO0i62QiP3Dmz4CTwTyLdfbq1F4RSnnlQsF
NZ+omhffqEOj1O16R4Gjdx1TfKwBOSZkdTcepeCxyy3D2PYm9JifyDcQeHqI
rTix24LU7MNXy76iYO5CpyZXqA3tUt/szXemYP+GJBFzvQOFJtgelBKYo9C6
WHegC43wjXGSEwXOLxqs7lS9QDUV+wKCvqRgKzfe/T9WvSjEfqbKzEHQZ6up
fmjtQ0MVwy1V9hR0889nP/PkIhvZrsHPBB7eIW9bvuMi5YnKbRk7ChobEwtg
ux8NJMQ7TFlT0Oam3CG5M4AsHzD42ZgCZb6+je7VEVQhK7QqIrBznMUjr9UR
pJS4LB6LKPjO4ieFlZOv0Zr9oLavBQWazamVJZ+NovKJktjDZhScbRAP4dwf
Q/+SM5DhGVHgE97kEoneoMVET6SnS0GaV1HENEyggfKmuwU6FLyceSFsOTeB
Gka1xPcIbMMj99gwJ9E1s82uV9oU5MC5alefSaS5VeiZoEVBltV4z8OPk8g/
YSyqVV2wl6rHFdanU+h1nE+5lxIF6fKdHDfrGdRU1i7dqkjBprnCgTb/GfTb
sN4FXYHzDONWGGkzKNZE2FRkr2APnYsWss9nkNzfd9p+laeAbX6A2G81i9xi
JyeWWRSc+FJ/7GejOdQeHaCQKUXBqlyot4H4PEr992TMliQFJwstx4yV55H5
iPdAuMC/P19qVzWdR9XmJ/KOSVDwMDWbVhE2j4pFnRhqYhRsHF3lFXLn0flc
feFGIcF/DAbzZAvfI6WKrdnVdTbYqt92kN27iCKncmt9ptkwF3XMTzHyT9Qt
t/l2tpkNHoY/rtWOLqP7v7zSSfuRDYc+1Fef0fwLHb/fa16SwIadyB/yG+XW
0bekRUiPOxtQdJyG3u4G8jOYUX2gx4bvpnO2f37yEbF6Ku8ySDb0ONXS0JEt
ZNn+3iJ5lgXceJOitJZthA47lEQ+Z0Fdv1Be8Se7aCmAn8O+xwJ2WM+bZ/pC
WHVt/of/XWTBZpmb9fFhIaz2US50x5MFgQ7ipgvnhHGpV42nnSEL6KnmD84S
IngkJXsAy7DAewNcPhaJ4HHFDPknC0zQbDg9VK28B/tSK1E27UxQSu4IKvht
D36UcqnApZQJER84HcIaojjDOWkk/BITNvS/vh9TJorJ0VoO8mTC4MHB3mh1
MezPY5vlGDHhU5qxfP1NMWxqyX//J5MJesPSaus0ccyT7/HtW5QByay4CNsY
cWxctXHGv0sGwrK5KjAmjpll+enErzIwbBPOlXCUwE9kXUN1L8tALkxdTi6X
wPw3l8KDTslAYtn3BdcpSdxw7t2uq4kMeBansjViJXFQZJR7nZwM2K4bR7zu
k8RqpVM3wiakQUil32jpcyks56oi7F8kDSncl5M3s6RwZGr/1frj0vCoej2Z
My6FuyJCXY8wpCHfjx40bUTgFnubO7VtJIS1VLw4lUngp2Mi2qcSSdCtqv2q
m0dgNy9hS+HDJCxo3qvu0aFhV5+YCLElBkSre5k/iafhoyp9I/q/MOCR8KFB
/04anu8M6znpw4CvfbNNtWTpOOPQ4s7vFAOKcm+4pfjR8TXlafvTHXQ4bRKY
OVRBx7rr+/ex0ujwjYdVTfMKHb/MMtOeN6EDp7dajGHOwEzJwuf/XaGB6EEI
0Uhm4DoiMu7vChrca2UVPwUG9u04EHTCnwbqX6zMJomRmHNBg//HfhpIODAd
o6xJnERuL13aRwPPSs7QVRsSu5f1iTgo0SB2qtnlri2JRXgX1V4r0GAj+Pp2
tz2JvRz7A3cpGmTmPXPQcCaxtErKoh2NBqR3QQXXncTR3SObQ+sEVJ4QrVcM
JLFTcCX97hoBLWtPk3SDSKwqmr7v7F8EBEzYaFsFk7jXRB9tLxMwy+yzDjlL
Yq3SjFSVRQJKy2VDH4eTeCzBQCrkLQFDS8duOseSuEaO2HtokoA5JZ117zgS
Z1XxtLb4BCTRN784H0/iwzNZTjk8AoovX7p9K5HEN9z416tHCGjuvHBkPJnE
AQt/lCQME1DONF34kEJi8yvXqqyHCLhVKpkp/C2J3zUYcQdeEZCy3JaklkZi
8GC8/amfgCa7hiHDdBJ/vzKxGsQl4Ipqi5JdBonP5dSKfd5HwIO+cUePKyS2
1syR2+wlIO+OtF9wJon/AfDYKRM=
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
+IeTcC95c53kX6uSpyXuXQ7g33hji/4Hx985WA==
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
jsP/AAYWPko=
        "]]}}, {
      RGBColor[0, 0, 1], 
      PointSize[0.015], 
      PointBox[{2.495009616850869, 0.47594354202533395`}]}, {
      RGBColor[0, 0, 1], 
      PointSize[0.015], 
      PointBox[{3.0547652045687026`, 2.27694595039571}]}, 
     InsetBox[
      BoxData[
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            Cell[
             BoxData[
              FormBox[
               SubscriptBox["\[Phi]", "1"], TraditionalForm]], FormatType -> 
             "TraditionalForm"], TraditionalForm]], GeneratedCell -> False, 
          CellAutoOverwrite -> False, CellBaseline -> Baseline, TextAlignment -> 
          Left], 
         TextCell[
          RawBoxes[
           Cell[
            BoxData[
             FormBox[
              SubscriptBox["\[Phi]", "1"], TraditionalForm]], FormatType -> 
            "TraditionalForm"]], GeneratedCell -> False, CellAutoOverwrite -> 
          False, CellBaseline -> Baseline, TextAlignment -> Left]], 
        TraditionalForm]], {1.540230845903869, 0.4626593809701598}, {
      Left, Baseline}, {0.37177985923601214`, 0.43433329586937297`}, {{1., 
      0.}, {0., 1.}}, Alignment -> {Left, Top}], 
     StyleBox[
      InsetBox[
       BoxData[
        FormBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
             Cell[
              BoxData[
               FormBox[
                SubscriptBox["\[Phi]", "2"], TraditionalForm]]], 
             TraditionalForm]], GeneratedCell -> False, CellAutoOverwrite -> 
           False, CellBaseline -> Baseline, TextAlignment -> Left], 
          TextCell[
           RawBoxes[
            Cell[
             BoxData[
              FormBox[
               SubscriptBox["\[Phi]", "2"], TraditionalForm]]]], 
           GeneratedCell -> False, CellAutoOverwrite -> False, CellBaseline -> 
           Baseline, TextAlignment -> Left]], TraditionalForm]], {
       0.902893940318128, 1.1424854124766899`}, {Left, Baseline}, 
       Alignment -> {Left, Top}], FontColor -> RGBColor[0.501961, 0.25098, 0],
       StripOnInput -> False], 
     InsetBox[
      BoxData[
       FormBox[
        InterpretationBox[
         Cell[
         "", GeneratedCell -> False, CellAutoOverwrite -> False, CellBaseline -> 
          Baseline, TextAlignment -> Left], 
         TextCell[
         "", GeneratedCell -> False, CellAutoOverwrite -> False, CellBaseline -> 
          Baseline, TextAlignment -> Left]], TraditionalForm]], {
      5.1427055336677405`, -0.01891569474453192}, {Left, Baseline}, 
      Alignment -> {Left, Top}], 
     StyleBox[
      InsetBox[
       BoxData[
        FormBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
             Cell[
              BoxData[
               FormBox[
                RowBox[{"\[Phi]", "=", 
                  RowBox[{"0", "\.ba"}]}], TraditionalForm]]], 
             TraditionalForm]], GeneratedCell -> False, CellAutoOverwrite -> 
           False, CellBaseline -> Baseline, TextAlignment -> Center, 
           TextJustification -> 0], 
          TextCell[
           RawBoxes[
            Cell[
             BoxData[
              FormBox[
               RowBox[{"\[Phi]", "=", 
                 RowBox[{"0", "\.ba"}]}], TraditionalForm]]]], GeneratedCell -> 
           False, CellAutoOverwrite -> False, CellBaseline -> Baseline, 
           TextAlignment -> Center, TextJustification -> 0]], 
         TraditionalForm]], {4.204058104752326, 0.14524141735416674`}, {
       Left, Baseline}, {0.9361262993870663, 0.41756906445386727`}, {{1., 
       0.}, {0., 1.}}, Alignment -> {Left, Top}], FontSize -> 14, Background -> 
      RGBColor[1, 1, 1, 0], StripOnInput -> False]}, AspectRatio -> 1, 
    Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
    DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], 
    ImagePadding -> {{0.5, 1.333333}, {1.333333, 0.5}}, 
    ImageSize -> {520.0000000000044, Automatic}, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None}, 
    PlotRange -> {{-5.291666666666667, 
     5.291666666666667}, {-5.644444444444445, 5.644444444444445}}, 
    PlotRangeClipping -> True, PlotRangePadding -> Automatic, 
    Ticks -> {Automatic, Automatic}],FormBox[
    FormBox[
     TemplateBox[{"\[ThinSpace]", "\" \"", 
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{
        "\"\[CapitalAAcute]rea n\[ATilde]o detect\[AAcute]vel estimada\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.85, 0.85]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.85, 0.85]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"r = 2.54cm\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"r = 3.81cm\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True]}, "RowWithSeparators"], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6682829601552057`*^9, 3.6682847685508757`*^9, {3.6682848898058033`*^9, 
   3.668284906005344*^9}, 3.668284982302362*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    StyleBox[
     InsetBox[
      StyleBox[
       Cell[
        TextData[
         Cell[
          BoxData[
           FormBox[
            SubscriptBox["\[Phi]", "1"], TraditionalForm]]]], GeneratedCell -> 
        False, CellAutoOverwrite -> False, CellBaseline -> Baseline, 
        TextAlignment -> Left], FontFamily -> "Times", FontSize -> 18, 
       FontWeight -> Plain], {1.7837823725981612`, 0.47485012629522455`}, {
      Left, Baseline}, Alignment -> {Left, Top}], FontColor -> 
     RGBColor[1, 0.501961, 0.25098]]],FormBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      FormBox[
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{
        "\"\[CapitalAAcute]rea n\[ATilde]o detect\[AAcute]vel estimada\""}, 
        "LineLegend", DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.85, 0.85]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.85, 0.85]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.85, 0.85]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.85, 0.85]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"r = 2.54cm\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"r = 3.81cm\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.6, 0.4, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm]}, "RowWithSeparators"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.668282936989654*^9, 3.6682829370522203`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    StyleBox[
     InsetBox[
      BoxData[
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            Cell[
             BoxData[
              FormBox[
               SubscriptBox["\[Phi]", "1"], TraditionalForm]]], 
            TraditionalForm]], GeneratedCell -> False, CellAutoOverwrite -> 
          False, CellBaseline -> Baseline, TextAlignment -> Left], 
         TextCell[
          RawBoxes[
           Cell[
            BoxData[
             FormBox[
              SubscriptBox["\[Phi]", "1"], TraditionalForm]]]], GeneratedCell -> 
          False, CellAutoOverwrite -> False, CellBaseline -> Baseline, 
          TextAlignment -> Left]], TraditionalForm]], {1.7837823725981612`, 
      0.47485012629522455`}, {Left, Baseline}, Alignment -> {Left, Top}], 
     FontColor -> RGBColor[1, 0.501961, 0.25098], StripOnInput -> False]],
   FormBox[
    FormBox[
     TemplateBox[{"\[ThinSpace]", "\" \"", 
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{
        "\"\[CapitalAAcute]rea n\[ATilde]o detect\[AAcute]vel estimada\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.85, 0.85]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0.85, 0.85]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"r = 2.54cm\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"r = 3.81cm\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True]}, "RowWithSeparators"], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6678222981853304`*^9, 3.6678276912286634`*^9, {3.667827796268916*^9, 
   3.6678278256400137`*^9}, {3.6678280160476427`*^9, 3.667828041472664*^9}, 
   3.6678282229536505`*^9, {3.667828402789091*^9, 3.6678284118858624`*^9}, 
   3.6678285125399075`*^9, {3.667828553907379*^9, 3.6678285680111885`*^9}, 
   3.668003572601015*^9, 3.6680036509649906`*^9, 3.6680060609539804`*^9, {
   3.668006213552494*^9, 3.6680062316920443`*^9}, 3.668006402338045*^9, 
   3.6680065090111217`*^9, 3.668006610163786*^9, {3.6680066936786585`*^9, 
   3.668006714546138*^9}, 3.668007478930192*^9, 3.66800754565845*^9, 
   3.6680082108067026`*^9, 3.6680083061433835`*^9, {3.6680084457462626`*^9, 
   3.6680084726757526`*^9}, 3.668008924515834*^9, 3.668282960603918*^9, 
   3.668284768692646*^9, {3.668284889943634*^9, 3.668284906146126*^9}, 
   3.668284982469494*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    StyleBox[
     InsetBox[
      StyleBox[
       Cell[
        TextData[
         Cell[
          BoxData[
           FormBox[
            SubscriptBox["\[Phi]", "2"], TraditionalForm]]]], GeneratedCell -> 
        False, CellAutoOverwrite -> False, CellBaseline -> Baseline, 
        TextAlignment -> Left], FontFamily -> "Times", FontSize -> 18, 
       FontWeight -> Plain], {1.2400271512113608`, 1.0355522971669493`}, {
      Left, Baseline}, Alignment -> {Left, Top}], FontColor -> 
     RGBColor[0.501961, 0.25098, 0]]],FormBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      FormBox[
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{
        "\"\[CapitalAAcute]rea n\[ATilde]o detect\[AAcute]vel estimada\""}, 
        "LineLegend", DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0, 0]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0, 0]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.85, 0.85]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"r = 2.54cm\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"r = 3.81cm\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.6, 0.4, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm]}, "RowWithSeparators"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.6678222805790367`*^9, 3.667822280597626*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    StyleBox[
     InsetBox[
      BoxData[
       FormBox[
        InterpretationBox[
         Cell[
          BoxData[
           FormBox[
            Cell[
             BoxData[
              FormBox[
               SubscriptBox["\[Phi]", "2"], TraditionalForm]]], 
            TraditionalForm]], GeneratedCell -> False, CellAutoOverwrite -> 
          False, CellBaseline -> Baseline, TextAlignment -> Left], 
         TextCell[
          RawBoxes[
           Cell[
            BoxData[
             FormBox[
              SubscriptBox["\[Phi]", "2"], TraditionalForm]]]], GeneratedCell -> 
          False, CellAutoOverwrite -> False, CellBaseline -> Baseline, 
          TextAlignment -> Left]], TraditionalForm]], {1.2400271512113608`, 
      1.0355522971669493`}, {Left, Baseline}, Alignment -> {Left, Top}], 
     FontColor -> RGBColor[0.501961, 0.25098, 0], StripOnInput -> False]],
   FormBox[
    FormBox[
     TemplateBox[{"\[ThinSpace]", "\" \"", 
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{
        "\"\[CapitalAAcute]rea n\[ATilde]o detect\[AAcute]vel estimada\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0, 0]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0, 0]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"r = 2.54cm\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"r = 3.81cm\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True]}, "RowWithSeparators"], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6678196746361947`*^9, 3.667819748855895*^9, 3.66781981869685*^9, {
   3.667821574561056*^9, 3.6678215985636425`*^9}, 3.6678216364455194`*^9, 
   3.6678217090777645`*^9, {3.6678217826200905`*^9, 3.667821797781641*^9}, 
   3.6678218705220513`*^9, 3.6678219265258617`*^9, 3.667822094496153*^9, 
   3.6678222384127917`*^9, 3.6680060614065957`*^9, 3.6680064026811867`*^9, 
   3.6680065093552446`*^9, 3.6680074793104973`*^9, 3.668282960706582*^9, 
   3.6682847687962723`*^9, {3.668284890046297*^9, 3.6682849062556133`*^9}, 
   3.6682849825742054`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       GrayLevel[0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
+H/WvD2U
        "]]}}, {{}, {}, {
       GrayLevel[0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
4P8BgjrulA==
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
g/8HH6pTEg==
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
/wHLGQQh
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
aeE=
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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

        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxXk4lHkAB/AZr+SRIjqelR6ZsVTSMku1Wb4/ah1brsxmrcoxtFSmRtlF
JaHkSittJcpDyUo1WSTjGKwtR+QYR+9QpuRKuRpH2OOPz/PR9Tm6x0+BwWA4
/Of/97nZCfX9D1uymsqVErg7LP1aQjRm2Pa4kxEqchPpok1gaF3FdofBZW8N
E5EJEioVX2azAxCQIClbK7KCf8DYl9fZoVCJTdJcIXLB3rL+XcnsWPwUc8RS
TeQNh35Zz0X2dUQq0a2qIgHsTnmtT2T/gVU2yTeXiM7ic5ZmnhmnBEKrRI+x
0GQYa4/YlwZXY1lqYLbz8Rv4wjjV4nB+LQ7brEtr0smE0xOvY1vNX+BxYJf6
ob5smOmPmPF5rXj96LVvuPs9+OducXVqasdMs8d45CohftX0M95q+BJpY1S0
QnA+NtglMLkO3biv47qoIrcAK77fdiXR/TXy9eK0zdQfo0+SnRX/sRd62/zZ
A7ufQK9tsUbi6TfgjCvM7Q0XQeWAbR7PqA+mUecOnXlVhkqHKDFX/A57fnPz
HV8ihk5tOmNN8ACidnv1MEklhotyM97qDoHysLU6yq/CBZWCkmePhlE8ytQ+
eaEaDYM3GJG8EQwKhJW8kr8g2xwh/mH6A5zDOK+GOmrQdEZ37xm3UZjwc546
Ln0KX925k5LNY/AsnLumbvEMsk9tPcVTY6iJ0pMd+7EWX6und5xvHsdtCyK/
H1+HwP28pbK0CYjCv4qMza1HzxvWhKXvJHQ05+VV1Q1gCZv557/9hLnk8i1d
k8/h9DDcwENJjuWprh8SlzfBeVLrF61eOZxt+MVq7Be4ECQ8QT+eAgZ1+TEl
L5DD3incEDGNZ04Vno22zUjTenrWx30GanntRVRvM0J22l1arzeLsfoOe+Vj
LYi/W+U4OjSLsJV2zeZzLQhy3pSVWfUZYi6nfH9KK6w3pZjK4ueQ6abU78hq
Q5/DsIfqwXkQZ27w5tI2CDKJuNpkAWGqCejeJYGpcVLbqZkFeIxzFko6Jaij
noeva/kHM89dWTGCduidU/xzvSODmAQeiGQxOuBgmCooEjGIgcIb27zUDmjw
Nyl/Z8AkNeJ2ph+nE7vqLCxS45lk3rpg6n1FJ/i1NmW+00wyUbLElefehUWy
RvrTfgUSLd89lDPQhW1XXVtiKhVIqcd88Nrgl+B+bNJMMqKIsMjg54ilNPq8
6if2JVPESmKekn+DRmNUgLpOCkUufpMQZXSTRnH2YqPeKxTpTpcG5WTQSHi/
46DfdYqEHTztcvMODdOQ0s7ADIoUTpUvi3tIIzrpfln4A4ps1LKO9a6mwSpP
ismoo4iGp124+jAN1V6j2z4NFPGuvhYYP0JDTjWI9Rop8tBgcJ/SKI06e+XZ
nGaKOIzGms9N0hBIIo486qTI+bP10/0LNMTvBS5V7ygym+V4vEJDilw1dX70
AEXslW/5bF8pRQrnQZzNEEWuHvnoUrhaCv+Qoeq6EYqYmV0yvqcthZoib0vr
JEX4fzeP/K4vxbQ+0/WKnCKijazu5RukkNnfOuo2TRGVpKCGBEMpipLoHPoz
Re66ad6LNJYiIz+0Jn2eInIRL3WeI0WcZLXM8x+K7FxXEBtiJsWJ6cIFXaYi
uRytGDqxVYoDa7hr3iooEtkA15+/XYp/AYApUHE=
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxX0803kcAPDNT/KSsujhddJL2xyVdOyoLqfvl8rD1Txkl3OrPIyOymrK
HaollDDppKsW5UXJSbUckuEznCsP0TAP/UZZyVPKU/PQ6O7+eL/e9MCje4K1
KBQK+z//v8/HVWIecngbo7lSR8TZXhncEmk4w3RDd7KipD5SOrQJLJ2qmb7I
4nKAoY3UBkRV2i9zmaEoVKSoWC11hJDQsa+vM6OQXmKq0TKpF+yt6N+VxkxE
Pycc2WYgDQB2v6rnIvM6itUhW/WlAnA95b82hfknWuGcdnOR9Cx8zjEqsGOV
IYljCncsKg2sTUbcyiNq0BJxWK7n8RvwlbXY4XBhHTrsvCaj2TQbPJ74H9ts
/wI9DuuiHerLBTvzETs+rxW9fvQ6SOh7D0LyN3l7NLejGTl3PHaFBH4zCrbe
bPkSZYwR8VoRhbDOVUTlsLvRfVPvBZBfBMt+2HIlxfc1KjRLMrGjPYY+RW5O
8sdeZLYlhDmw+wmYtS00TDn9BrHGtTR7hVLQO+BSwLPqQ7Zx5w6deVUBVew4
GUf2Du353SdofJEMTOsyKasiBlDcbv8eKq6C4ZL8rLf0IURwXRyP8qvhgl5R
2bNHw6h0lGpy8kINNA7eoMTyRtCgQFLFK/sbVBtjZD9Of0Ce0axXQx210HyG
vveMzyiy4ec9dV/8FILompOKjWPIr1hzjebwDFSf2npKp8ZQbZyZ6thPdfAt
LbPjvHwc3XbA6vvJ9RC2n7dYlTGBpMJvYhPzG6DnDWNiW9AkMjWaU1fXNAJD
Iuef//4T0qRVbuqafA4eD4UWXB01Wir2/pCytBk8J41/Ne5VI09nfqkB8wVc
CJecIB9PITRI5yeUvYA85g7Juphp9MwD/Jpc5JBh/PRsoO8MMihoLyF65RC5
w/XSWrNZNNbQ4aZ7rAWS71a7jw7NoujlrnJ7TQuEe27Iya7+jGQcVuX+9FZw
2pBuq0rWoGwfnX53Rhv0sYe5+gfnEPbkRGwsbwNBNpbV2MyjaH0R6t6lAFvr
1LZTM/OIO86aL+tUQD3xXLim5Quaee7NSBC0g9k57b/WulOwTdiBWAalA9iW
YkGJlIIttN64FIg7wJC/QXenBRXXytqpwaxO2FXv4CBOpuI5p6Kp99AJ/Drn
iqBpKp4oW+TN8+2CBaom8tN+LRyv3j2UN9AFW656tyRUaeFy7lzE6oiXwPnY
bJRqRWBJicUvMYtJ6PNvmNiXRmBHhX164Q0SmuJCaabpBL74nSjO6iYJpbkL
rXqvELg7Uxmel0WC6P32g8HXCRx98LTXzTsk2EaWd4ZlEbh4qnJJ0kMS4lPv
VwgfEHi9sVNiQA0JjMrUhKx6Ahv6uQppwyTo91rdDmwkcEDNtbDkERLURKPM
rInADy0G9+mMklDvpjubJycwezTRXjNJgkARc+RRJ4HPn22Y7p8nQfZe4FX9
jsCzOe7HwVAJ+QY0fvwAgd10bwVuXa6EdNaDJOchAl898tGreKUSQiKHaupH
CGxnd8n6nokSDLR5m1onCcz/Rz7yh7kSps2p3lfUBJauZ3QvXacEldutoz7T
BNZLDW8UWSqhJJXMIz8T+K6P0b1YayVkFUbVZs4RWC3liedYSkhSrFT5fSHw
jjVFiZF2SjgxXTxPp2rjy/HaUROblXBgFWfVWy1trBrghPC3KuFfHA128Q==

        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxX081HcAB/DzFPcT2mX0JMSFm0phovh8Y5RQuOilFDlKyUNJq20IWaV4
kVMWNeHVg80rijp5iNUqJRVOF6IjOUycxw73s+2P9+ttGBTpHaLIYDA8/vP/
5R/Kaw8vPOrwuC5z/dauYAe/TRe5T/meYOXUXzzCdsLQI4F5Pj8Qg2bWLZvZ
XNjMuS1O50dhp3RgfB2bh45rWVpn+KegIXRONmVH407Ew5REfjokLtEeRuwk
ZLe6bznFz0Pr3LlSA3YmUikdk3h+CTz8s3j67AKMm+nlKWyug2V6URTG7mGD
aB/T/Y96CASLfMQF1SjtMFtTMfoGvOV5y4YyHmNG61inxkEhSEGlRCZ4DtZZ
3aqVme+xy+3as7kzr9DleGF5gk4njHf/wFAPeIu0l2GVwY5ixPXd7BgcagZr
UQ19iNuDGJVIx3rPVkhVTiqzMnrRqmwnXN0ngs2lQMOcW31ozQqVpnu1wzra
0janvB8Vscmvnt/5gDRpxMKNw4NIMuKGPTH4CA/WO+VHil8g88wqy+eKYTXA
9T9iOALjSD9t57xuXJWW3nPYKEWtQHtH0+ce2G69oSN3GgXnZYJoj24vksYa
29SDxuDWGBVdvO8zGF9Si9TDx2F35RvuTFYfvrNNaN+dNoGPvlauGp8kuMsZ
OHegaBKTDtv0KfMBHA7vdwq+N4X24cV2KnsH0czQCyht+oqYjANhT27/g4je
z8nDnTJ0zewXJ3QNIThqJae/dxoPM/bYcLSGoeZ+ZY2l0izY8we93MxH0HWi
kERoyNFieaqI8XQEwZPdd2WraHRyfTWzD0vhvORyPnGdw3WmabfxglEUPxvZ
VmXKIA0F3qKSW6NI41jEMgQM4vV9zfvl28agdt9ubbW9ArEvTpSfl4yhRJtR
+K5WgXRXOGZ8iR/HnZyAzUu2K5LuGicLS+MJbHFLiRI2KxLXW1elx6snYGO0
/YWAp0TUU9bX5PImUWvUdVt7QIlYeZoX19GT+HHKbEtjuDLR+XPp/I5LU0ge
09QtmVUmXIb7cdGGrzBf9CiMSlQhU+uFii3Cr+CEMKUXWPPIxMHfr5T+IoNv
sqZ1eN48UmwRkn/aYBrLGjvpv41VSUN7UoNvxTRs4SpzKVMlLvE9CuoBMxgW
xZ0kdmrERDXXr0Y2g2bnSMHlajVSZ+xpeCBjFprtMhNddyYpt3Mel1rL0ZO9
XU/rLZOwrDP7f34tx66QFlFgM5PMisVxZk1yvFnrx78rZJLeNAvtdy1yVL0I
UvdtY5L7klcO69rkuDQbI8vtYZLduWp8ySc5tgbmCjmTTHJDKc7BZ1qOEpP+
VJelFLFtCs1czaaxcjzcNVuPIiviH5h2mNC4WjuqPKBPkfnm82rOcWik+M3+
nGpMkc7kAsmnNTR457UOtayiSKJtp32OHQ2dYWuXIEKRhjyuRNWTxoXKhwpl
jhQp98iPLfemoXQW1SrOFLk2PcLi+dAYMXC1uu1KkSM70uxrdtF44e2/YsSb
Ijpq9RePhdAg+uIPm3woMlema7oilMaDwZDfMndSpH/f/urXh2gUno5cYONP
kapKJQknisYSr/GXZ/dSpDDUO1Z0lEa63skzbYEUSf32OuvXGBrzBuSO5jyK
HP9r+KblCRqx9xPp2BCKBEY62It/ovEv0r5Kuw==
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxX0803kcAPB5tp/QLUdPQrawW6VwsuL7jaMWCoteSpFZKXko6eruEHKV
4kWmXNQJrx7ceUVRE/bh6iolFaaFppEMp5nHhv3c3R/v19sqPDaAr0mhUHz/
8//VH6objiw65va4MXfDtp4IUfDmS9ynAj9EK2i6dJThASMgZBULwtCwnVP7
FgYXnOe9l2QL4tAu5dDEegYPuq/nGZ8VnEaGYs90W0Y83I15lJEqyEZyr3hf
a0Ya5Hf4bD0tKEId8+crLRm5kEmY2iQLKpBvSB7PglECE3bmRRpbGpFDdlkc
Gr8PGyX7qT5/NCGhcHGgrKQeKrvt1taMvUG8FUXLR3Iew6zxcanhITHCJbVy
lfA50M6Z1a3KfY92e19/Nn/2FfS4X1yRYipF9D0/UAxC30LWy6jaCHcZShq4
1T080ga0xSLyMLcPJejEujf5dYBS55Q2LacfdWizxWsGJOB8Ocyq4PYA6siL
VGb7d4FTvINLQfUgqklMf/X87gfIUsYs2qQYRmnW3Kgnlh/Bl/ZOGzS/IJVf
XlUxVwaOQ9yQo1ajiB4bbOJZ1AvXlJX33TYpUYPQZGfr5z5w2XbTVO0xhpgv
UyR7zfohbbyl0yB8HHm3xMWX7/8MlC+ZZQbRE4h99RvubN4AfOeS0rUnaxJ9
DHLkGH6Swz3m0PmDZVNoym27BcEagiPRgx4R96dRl2IJW2ffMLRRzEMrW7+i
hJyDUU/u/AMx/Z/TFVIV6pk9IEvpGYGIuFXMwf4Z9ChnrzPTWAH6PlfXOmjN
IcaCYX9v1ij0nCzFMYZq1O5wuozydBQipnrvqVaTSMoNMso/ogTPpVeKMWce
3aDa9tIXjkH5s9HtdbYU3FwSIKm4PQZZTPtEipCC/b8XvV+xfRz0H7DX1btq
YNfyVPUF+ThUmFBK3zVo4N4a95wvyRNwtyB0y9IdmrhX5GHvQJ+Erd4ZceI2
Tcy5fU15on4SnK13vBDytLBBxgZRIW8KGqx77pgMaWFHP1Z5IzkFP07bbW2J
1samfy5b0H15GtLHjcwq5rQxl+JzQrLxK7AWQxSRqoOnN4g128VfgcmnKi/S
dPHkod+vVv6igqB0I6foIl1cbs8vPmM5A8tbpOTfdD3c3JXWHFQzAy6Io/Kq
0sNeyX0aBqGzoJAkncJsfWyjVxgsUs1Cm2es8Eq9Pm6k+1kdzJkDoy6VjZkP
FVezPSeUTmroy99hbvyWimlOuYM/v1bDbn67JKyNiudksiS7VjW8WRcsuCem
4v4se5N37WqoexFuENRJxQ/kr9zWd6rh8lyCqrCPivcU6gvkn9SwLaxQzJyi
4ptaSW6BM2qosBnM9FpGYJfWyNw1DBJWTURz8s0JvDL5oW23DQnXGsa0hywI
vIClKzrPJCEjeO7nTDqBpekl8k9rSeBdMD7cvprAqS5S1wI2CaYKJ69wTODm
Iq5cz4+Ei7WPNKrcCVztW5xYHUCC1jlUr+NJ4OszozReIAmjlhzHOxwCH92Z
5SraTcKLgJCVowEENtVvunScTwK2kH3YHEjg+Soz25WRJDwc5v+Wu4vAg/sP
1L8+TELpmdiFziEErqvVkjPjSFjqP/Hy3D4Cl0YGJEqOkZBtfupsZxiBM7+9
Qfs1gQTdIbU7i0fgE38pbjmcJCHxQSqZyCdwWKybq+wnEv4FbqJxOw==
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxXk01AkcAHAz46zneO3TNpvKKLKekNssvgmdjHVMUTOkTGZfUSG2Qxgd
lJAn1TBZWcu6ry7F98focMwYMSaM59apzZkks7t/fN6HdviED4espKTk+Z//
D1zrt3aMrEyMvPXjhtPlEPs9Z8SbpExUoZqanb0ccgbH/0YFhUjIqitQ2Mih
Lz/GPnuJQmxw0x9N3yqHfabZTJ95CsHO/cCuMZaDp9NIGvGOQsiYPN+F1XJw
DDqpLJBQiPamCmfeTD9Q81MmmXcpxP2cFbpZpf3w/oooymcrhWg9sIPVsaof
dvqmsZPayIQb83aoQ2IfqPP8wutDycSPRucuRM33wpCmgXXsNxJhRhozb2T3
gmv8yYPRWSSiaM2RAueO11Dv9cJu0ZhEhNK590XWryGbR3OMrVciLlguS7YI
ZKCSs5TnEKBELB4trmzQlsEKQ+IMqVeBjwvkJsHRPWAwmBRB1lKgXN/wN+s3
UqAc8n9C2rmMARHL1a8PSEEn2z589YnvSBWzb6U2dYN1/k9jgoIldDraBaet
u+ESR7OZ3vYN/1Tv4IXxuyD3k+qsdHYRQxIOdtpSukDiRn4zarqIybbLoxbR
r8CMqeWm5vcVp+aMbjgOdEK+pV6IIHkB66c45DOMTnBvpX/aVf4FRV9MtF7U
SKDS+NDL6Z55tOmON5xYKwFLvyscba15VOnrJR3X64BhBzzuYj2HRvoNk2bv
RFD4ccF2gjuL2oPiYN/WdrA96uCdnDeDpXtIk9SqNpi+c1Xq0jKN4lYoo8S3
wjP+gF6YYgofC4vnGEdaoJnpIi7bNIUmnbTIerOXkCIr6fjo+Rk9r9WpiRXP
QeZhYey08h90aIjbtG38GXwONLnU5j+JpSre0dLqZrBbacwF4Qd884zxa3um
EHTcrT5U2LxHqWW4C+d8E2yfCdq+9/Jb3F17J5Tm0Qj5v6RvaJ+ZwMvlU7pg
QQB7YVgSA+OYcbZkWrFQDzu87NQ1ikaxJLm9xa3uCTRa8Qez1ozgz9MWHaLL
j+FmyvprXqFDWJNY5izY+BDMFB5n+gsGUKya2GD+rhbGRLkXwxz6cLb6ZJF6
XDU0PNSULMh7MO5RHmGoXwlzUt5mr7oupAftf7WyuwQG5fTN33wlmJqb/cVf
vRA8LWY5Y4xWVBPecDJNvQebBoq+N+s2Y6blOkKbmQPEg+dtecV1uDsxpmxI
nAH7NKput9FK8br1sUfnZIkwwDA+5VZVgk+LA8XrkhIhJDN3d/22Evyo7zOG
9olwakPqYnlQMe7VdNBR5vMgxeYYK0NQhBoTqtwUVgI0BRvqB1ALUMPc3Zwu
jIWDUVZeIloOfp2tmTwviwSugqaE27LRf5hPbbSPhOirOlWVQXx8KEpwV+FH
QPofk6syBbcx6i8vwXXWKXjeXthzgHoThyp67jgKwyBkj/1TCS0FO0+7+8fJ
jkDcId31tUFXMY3xQ6Ua/zDwo6fjbgmS0HPzsFo6Kxgk90pdA6mXMKPqa7iL
kA3R8y5ZMtp5jI/hbrko84VSg6WAu4LfcclYeSCT5Q0jjAfrONTTOFUL1L1C
T+AzmHvGacdx6Gy57LrMFVQLWzojqByseNIWFih0gpHlc9VKBiy8m0A3zZNZ
QWRQC8/OwAP10nykL2QbgbV/V6UR91iDQUeDaoqfq/O/uaF4KQ==
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxXk01AkAB3BjnPUcr33aZlMZRdYTcpslCZ2MdUxRg5TJ7CsqxHYII0UJ
eVINk5W1rPvqUub7Y3Q4ZowYE8Zz69TmTJLZ3T8+70M9ctKbpaigoODxn/8P
XOu7dkxRiRh568sOp8kQ+z13xIukRFRDVdXWTobcwfG/IScTCdn1hXJrGfoK
YuxylsjEBle90YytMuw3yWF4z5OJgLwPAbVGMng4jqQT78iElMHxWVgtg0PQ
KSWemEy0N1Vu48z0g1KQOsm4Sybu567QyS7rx/srwijvrWSi9eBOZseqfuzy
SQ9IblMkXBm3Q+0T+6DG8Q1vCFUkfjQ8fzFqvhdDGvpWsd9IhClpzKwxoBcu
8acORWeTiOI1Rwu3dbxGg+cL20UjEhFKY98XWr1GDofqENugQFy0WBZv4Umh
nLuUb++vQCweK6nia0mxwoA4S+qV43GhzDg4ugf6g8kRippyyPQMfrN6IwH5
sN8T0q5l+Ecs17w+KIF2jl346pPfQREF3Epr6oZVwU9jvMIlOB7rcjpj1Y0k
lkYzre0b/lTr4IRxu5D3SWVWMruIkIRDnTbkLohdFd+MmiwixWZ51Dz6FUwZ
mq6qvl8xNWd4w2GgEwUWuiG8lAU0TLEUz9I74dZK+7S74guEX4w1X9SKUWV0
+OV0zzysu+MNJtaKYeF7haWlOQ/lvl7SCd0ODNvjhLPVHAz1+JOm74Qo+rhg
M8GehdagKNintR02x+y9UvJnULaXNEmpbsP0nasS55ZpiFqdysnxrXjGHdAN
k0/hsaBkjn60Bc0MZ1H5pikYd1IjG0xfIlVa2vHR4zM8rtWriuTPIXU3N3Jc
+Q/s+XGbto8/w+dA46Q2v0mUKXtFS2qaYbvSiO0k+IA3z+i/tmcJoO1m+aHS
+j0kFuHOrAtN2DETtGPf5bfYU3cnlOreiIJfMja0z0zgcsWUjpM5gYCFYXGM
0zgyz5VOyxcasNPTVk29eBSlKe0trvVP0GjJHcxeM4Kfp807hJcf42bq+mue
oUOoTSzfxtv4EKZy97P9hQMQqSTyzd7VYUyYdynMvg+zNaeK1eJqwH+oIV6Q
9SDuUT5hoFeFOQlns2d9F2hBB16t7C7FoIy2+ZuPGGl5OV/81IrgYT7LGqO3
QlVww9Ek7R42DRR/b9ZpRpbFOkKLkQviwfO2/JJ67EmMKR8SZWK/evXtNmoZ
rlsdf3RemogButFp1+pSPC0JFK1LTkRIVt6ehu2l+KjnPQa7RJzekLZYEVSC
fRr22kpcDlKtjzMzecVQn1BhpzIT0BRsoOdPKYS6mZsZTRCLQ1GWnkJqLr7O
1k5ekEaCLacqYHsO/Ia5lEa7SERf1a6uCuLioTDBTZkbgYw/Jldl8W4j6i9P
3nXmaTxvL+o5SLmJocqeOw6CMITstXsqpqai84ybX5z0KOIO66yvC7qKdPoP
VarcI+BGT8fd4iXDY/OwagYzGOJ7ZS6BlCRkVn8NdxYEIHreOVtKvYD4GPaW
S1IflOkv+d/l/Y4lI6WBLKYXRugP1rEoZzBV50TZJ/AAl87YO049gaFzFdLr
UheoFLV0RlBYqHzSFhYocMTI8vkaBX0m7ibQTPKllogMauHY6rtDN91b8kK6
EcwDu6sM2cf5+h18lVRfF/6/VYWeqQ==
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAfbaC/n1lCsBgbz494Xr+P5b6wW5r
YwrASrt7mXx4/j+uPgHfWGEKwDIHufUXdv4/3sZ/vzNdCsAEnzOuTnH+Pz7X
fIDpVArAp84oH7xn/j8A+HYCVUQKwO4tEwGXVP4/gzlrBiwjCsB97OfETC7+
P4m8Uw7a4AnAmmmRTLjh/T8+mortDVEJwHlro1CtO/0/Wk/2RsnKCMDxiFwy
o6D8P0gxp+EmRwjAsRAapKMI/D/f6r1LXLgHwBWglgrCY/s/3HsJMBkzB8AS
S7pO4cn6P4PkuuOtogbAtf2chx4j+j/8ebHY5BQGwJ8ahFBmf/k/2+bcR6OQ
BcAhUxL3rub4P2MrboY5AQXASZNfkhVB+D9SRzQ/V3sEwAnvUwt9pvc/E5A/
ORf4A8ARtUwU7w73P32wsAKvaQPAvoIEEn9q9j9NqFZGzuQCwANsY+0P0fU/
xndiWcVUAsDtXIG9vir1PxF0s61exwHAH7ijHXiH9D/DRzl8f0MBwOkubVsy
7/M/HvMkGni0AMBZrfWNCkrzP991RTL4LgDAYUclnuOv8j+ToJczoDz/vw7p
E6PaCPI/DK8uhZQg/r8D9QY43GTxP1JsL8uXF/2/kByhqt7L8D/r2PuvSvj7
v8NL+hH/JfA/UPQxiQzs+r8dLfWtQBbvP1pp8uQS5fm/Q5f+V5jm7T+2jX7f
yMf4v7MQhusrnew/32B0zo29979UwVs6wWnrP1rjNVwCnfa/P4GvcpIc6j95
v4Fsu4H1v7oVDMt41eg/ZUo3cYN59L9l4bbeYKTnP6OEuBT7WvO/W7zf24RZ
5j+ubaOsgU/yv4HOVpSqJOU/XbAYx0xJ8b83tdZs5fXjP1+iWYDHLPC/N6vU
Llyt4j9bhghcokbuv2nYIKzUeuE/nSb19BQH7L/lFOsSiS7gP3kktXal7em/
JBEHan7w3T+d1Yn9vt7nv5yhSe4UkNs/ZuX1wTej5b+qUIhFI/zYP8hSNW/O
jeO/GW5jEzWU1j/PHgxaxEvhvx2qOrS++NM/Ozzvk4Yo3r8+jyOVcmnRPwz2
bEXABdq/g8VR2VMMzj8mbRlyuInVv7SpVC6y3sg/dJ9scOxZ0b+papBwFwnE
P6Rw0vFkfsq/s/veZaKXvj/zHCn5bZbBv2mcjTb1TrQ/Un+aR92Nsr9O7VvD
q2ylP4XwANelQ7K/J1CGGfkWpT+4YWdmbvmxvwCzsG9GwaQ/HkQ0hf9ksb+y
eAUc4RWkP+kIzsIhPLC/FQSvdBa/oj8AJQN8zNSrv9waAiaBEaA/XUvRaN6N
or/XkFARrWyVP8Itnodv+aG/iFalvUfBlD8oEGumAGWhvzoc+mniFZQ/9NQE
5CI8oL+ep6PCF7+SPxe9cL7O1Ju/Zr72c4IRkD904z6r4I2Sv+nXOa2vbIU/
QKjY6AJlkb9OY+MF5RWEPwttciYlPJC/se6MXhq/gj9E7UtD09SLv3gF4A+F
EYA/oRMaMOWNgr8OZgzltGx1PzidTaspPIC/1Xxflh+/cj+fTQJN3NR7v52T
skeKEXA//HPQOe6Ncr9YgrFUv2xlP1UOb2Du1Gu/569Xt5QRYD+yND1NAI5i
v+y6+zPUbFU/HrYWdCSOUr8TLJDy/WxFP7XdtcBsE3K+w8GTOErfZD5yt3YZ

        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxXlU0wUAB/Ax7knoOIOHqHGkqaSgIUpoD2HJJQIeHCoKwybjcKKBgNwo
1mwCQpnIMfAAx7gjlH1/AxWP3oocQoqDCQOR+xiMa1Z/fN5n3ckoHzqZRCJ5
/uf/ExtSlYl0ChEc5fS19IISeQvCyPAQCuH2IP6XhFglKp1Ueo6coBC2mr/L
jc8rIXmSBLujFEKt0K7S64wSTp0JyUN+FOKOaP2ah6eUICnOkw/upRBjm/VV
8v2USHMI19hkQSESRwYfedgokfXQV/d1rzZxg3HNo1G6DKcbV0Y/OaBNxIVz
vXm7lhGwf9b12XMtYvJykC23aAnfbr0jtaZpEdWrTEu5Wkvo+dDsHtSoSRgW
5VFaQhbRHa+9xcROk9Bzb/KSPltAWn9TH69Eg6hfvnnJ3GIBS3HVXf0GGkSh
abp3WNI83gx007gcdWKdr95c5YACIRsjMx1U1Il9OcezDb9RwIe2bffheDVC
e9x3ReLtOehzdjsYK1QJar2HwbjuHBKrqsh8hiohSFXTSzo9C8+7h1xF/WRC
lRkyurJdjiffn/R/7EcmRoNSmgVfyEGNqeUda1Mh1jRyV8demkErzSEhyVmF
GLKJCLQdn4b5tKVpbB2J8OfJ2RS3afScc7FV2JCIEzSrW338KeQU5dsVOX6E
7pA+97XWFHT4Nhm5a5VQlWvs6A6dhA/zyxf5xsvgmBWXS15MYLhrke+mWESr
+wL1o9UEvGe2ZumMLGD1Zjlvj9E4AhhT/XqyeTjnKw//PDCKBvbFnqdtCtSu
yhzeWDCCnuAYEbt5Dn7CwJ1CxjAC+rYHkQtmsTuFz8o2+4A4pDAfpMjRZKjz
IrbjPehu9mfS4mZAlzZIgksHwU1vNFgMmEbgw5436f4DqIzg3k/ZP4UU0aHc
cksZjlZ92uaxbxL29a+YMnkfjpf4J7dtmoB9hdgmiPcOgZlaQSWuY2B0rb0v
viBFgbV8xkBzBDKDYb0sm17EWdafLxsdgiVV8/TFibco6MhaFkgGcbN435gB
5w3CZHKhPVeGcu/LLhZLXXjqsz1KxO6DSWSI/vbcV/jTXCfgkbsUq8t31gkU
L7HLcTwnc70ETj9ZXGcx2qEzy3Qh1F8j7fGBf3x1RLCOMGE1ZnWg7p6fTY3k
KWIKmdEj/u24d5oTbaz9CKXRf0+GXnyO2kUJvSRfgGmzDfMReUIwbrK/knvV
wSfpBu0tuwZeo4GtFcwyZEyQOsuca/C5d6bJvFEZGk+cCoucrwaptirKVVgK
873bMj6GVqMmVt1MaliKIS1RyzrHKhiq8WOMUAKSlWrCH+IKdJuSrVOoRTjq
3v6dhF2CTo43lce8jpbNty5FzRfj8qGyZpowF+tXhd8m0Yux02yB8c4wFzNi
tf7PHItw6w63xRjZMG6OFojEvyJMMHs2lcpBTJ9TRS87G0OdDjw+MwN77na9
J9OvwSukT11mmI4VESxrK0cOqsd+PGaKVOwddXd+Kf4Bseq9KzOoySjWN90i
Y6dCN0xHVsc8hx0FnhUbHJPRkXA8bw1YKPQke3aL41GQU0O7Qo3G0tm/HMbY
LBxJrfYDk46DulHBY+JwDPIP/5ZLDUbNtq89SVdPYqRp0U7MPAjzBqMYy6s+
0N/EmVpmuqD+bT3B1GcJWoU5O9x6QgX/Ag6bnJk=
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0mlQU2cUBuCYhdwbEq6KaMBI1LApipLKGFz4jqmy2GIoo9IKIk11gjNo
QJawxCIyKCgEEUWqjQGsiLghGioKbcANoVoCRENBBXVAFlkMKYlEafrjzHmf
mfPvPYvE0tA9ZBKJFGyd//c3Ced8oueSwRoF7kFxfs7Gwg75PKs1AZLEGhEa
S8yNL2Bb3VMpXFmzCxXJDt6862R1bEQVq0aKelJ3LWdxrRb4SCzqdJSQwXOt
drf619JGgzofKRVX5lgEVj8Lix1Vq9BoxT1DfrjV/fyAD+obiLVF/jy73Oon
wSeuZGnQRKbhRc4wGRbqyMF2uU3oFZKKPL0pMJPfKJzt04qEMceHlGkUWNmQ
4ZSc0oGkSyLL2Q0UaN0S7j2ZoEcOYdqs3UwqjF24RdE+7EZ/MoK6QrZTIXCB
OUiY0YP4Iplo0zkq6CUXb3qkvUHOVP/3jD4qeMydJatTvUPtQS0qvScNqu7j
3d2qPpTrsO2pfywNSCeN3MHT79Ef36Vzj9ylAftBScNvNYOo1jnqxNNpGkQZ
9eTh6mHkFdHr2rfZBg4day3t6RxB5VyJt+qUDXiUvCR+TBtD/fEXwqM6baAq
9RfnYtk4KhMcqvzIo8NCuk+3a85H5KqwZ+ftpYOH/ZmBlGwDWrw1oNJ0mw5s
rf6ii3IC8UrSq6nTdNjNPaV9eNWIhuX7O9kbMQj54BC8vPJftKL5s8sXBQac
fTLZUN0kWlPxdf5QBwbZMapxab0JBTEV0hRHHEIs0DV4x4zaepIT9D/hQPJr
jK978gnx/J2K0WUcAqfxiK1NU2hkfkSPbAKH5APeBmG3BdXLys6H+DGAmdRm
dh/6jLbuVqV5ZzJgldk3pL3/C9rTsO7g26cM2OiVsU1nnkboxgml0t4WUuMC
dM/kJODwBr4yhdkCac7x1V6fSBBPfzPCK7OF5Hy/ccHhGVAoL2gK67cFzWZd
m9sMMiwT9z6K4DPB9KrLVnOMDAp9/9u9yUwg3XoYs86WAhMdH5Pm1TNBIIqh
rcqhQPuG815FdBaIHxw2Pp9FhTREoi0IZsGOFDlrZwEVlNfIpMRiFmyk98kV
82nQWIrH7XvDgsidTJe1F6y9uz0m7Xe3A3+Dg6F5kQ2wOa5qdMAOFovzHW2u
2EBgmW+24x07aJ45LHHxpIP8eqi20GIHZUdpI/UVdFjqyUSv/QnY/0LRQvbG
oEQgb+HnEoBJplqXVmFwKfbLD9F5BMym5hWLqzG4XnHovVJBAKfUOersbQzq
2Fk0vIAAfteGUbwWA70pD70+TUCEKJs10IABUau6dVxFwNXVDpsvtWPws+/9
c++qCQjFVtznTWKQFbdpqdNt6/1FzbFwMwa5lx/fEakJiBaGhhZOYXDW8S/d
3d8JkMsTe8kkHGrMHURBHQHlY/emezEcRmr7Mtc/IuCTPnBdiRMOxvHo2fGP
CaAm/UPRc3CwLBkqqWgiwM4+poXg4sA4O1pv30KAS3D+jnQeDm6ppsmBvwn4
tkGXHLkMh+XVqUe4WgK+j5RAkRcOqwYtc7a1ESCeMtGfrcRBuGMGX9NBQJIP
58x6HxyCTmZqjDoCDrddi0xcbf3TZprI8wUBuVLkds0Xh+3k7JdRegJOMbUf
3q3FYecaRkxRJwHnL4vVHD8c/gOpjwtb
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVyns0lHkcBvBpLuZ9x4y3khqaNdW4lVJsTqOL+TZbLu1qrFPZjWRn64zO
UchlXKaVHK2KkZRs7TRok3STYlP0+9FNbK3B1FgqqkMuucQsouzsH895ns85
z0J5RMBuOo1G8zPl//425qx72Fw6mKbY0Tfqnq0xp0U1z2TsrYitkKGh2Izo
bL7JHSXSFRU7Ua7ywI07NiZHBpfyKiJQR+LOZTyhyWJ3xVR5MopJEdmXOZr8
e0HtSHkW0qgvz5kSm/wsMHKwXIsGi++OZAWZ3O3m/aH8OuJtVj1PLzL5id/x
y2kYjaaOvDjST4cFerqfRUYdeiWJkDm7MmCmW610tnsjkoYf69MkMWBFTYpN
fEILilgcUsSvYUDj5iDXsRgDsgrUpe3iMmHo/E2G7mE7QhzfNv9tTPD5asJX
mtKB3GRK2cazTDAoLtxwSnqDbJle7zldTHCaO0tZpX2Hmn0btAZnFpTeJ9vb
tV0ow2rrU69IFtBOGIW9p96je98nCw/fYQH/QX7NHxW9qNI29PjTaRaEGg30
/rJ+5BLcad+1yQwOHm0s6GgdQEVChav2pBk45b+kfkoaQt3R54NCW82gNPE3
2zzlMCoUHyz5KGLDArZ7u/2Rj8hebcnP3MMGJ8vTPQnpI2jRFu+S8Vts4OsM
F+w0o0iUn1zGnGbDLuFJ3cMrRtSv2tfK30CA/wcrv2Ul/6Ll9Z/tvqgJEOxV
KvuqxtDq4m+y+loISA/XDkdUjyNfrjoiwZoE/ylo6709gZo64mMMP5NA86yN
rnryCYm8bPIkl0jwmSaDt9RNooH5wR3KURLi97uOSNunULWy8Jy/Jwe4cU0T
jn2f0ZZd2iTXVA6snPDwb+7+gnbXrD3w9ikHNrikbNVPTCPJ9eMajaU5JEZ5
65+paFgg6vl6PNAcaHOOrXL5RMPR7DcDokJziM/yHBYfmoFzVNl1gd3mgDfp
mxxm0PFSeeejYDcujL9qM8dH6Vht6H67J54LtJsPw9eaM/Boy8e4edVcEMvC
WSuPMHDz+nMuuWweyB8cMj6fxcRJEhrrKz8ebE9Q8XZkM7HmKp0Wm8eDDewu
lXo+C9cWkFF73/AgZAfXbs15Fi51eEzb52gBXiNWI/ULzTBfYF8u2W8Bi+RZ
1maXzbBPoUe69W0LqJ/Zr7BzZmPVtQBdzpQFFP7KGqguZuMlzlzJay8K9r1Q
N9BdCZwvVjW4ZVBAKCYbl5QS+GLklx/DMimYzczMk5cR+FrxwfcaNQWCAtvQ
M7cIXMVPY5HZFLi1rR8kKwlsGM+UvD5FQbAsnddTQ2CqUnvzmJaCK6usNl1s
JvAvHvfPviujIIBYfl80RuC0qI1LbG6Z/hfw0aAJAmdcenxbVk5BmDQgIGeS
wGes/9Lf+ZMClSq2k04jccVEC5VdRUHR0N3pToLEA5VdqeseUfDJ4LM234bE
xuGw2dGPKWDG/cMwCEg8tbgvv7iOAgvL8AZKSGLOmcFqywYK7PyytieLSOyQ
OD7W8zcF39Xo40OWknhZWeJhoY6CH0IUkOtC4pW9U3O2NlEgnxxnP1tBYun2
GW64hYI4d8Hpde4k9j2Rio16Cg41XQ2JXUVi/3qWzPkFBRkREoerHiTeRk9/
GWqg4CRX9+HdGhLvWM0Jz22l4NwlebnAk8T/AUVzMds=
        "]]}}, 
     GraphicsComplexBox[CompressedData["
1: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
o7LwgDPJ98cEYAXD5L/pO0yq
      "], {{{
         RGBColor[1, 0.85, 0.85], 
         AbsoluteThickness[1.6], 
         Opacity[1], 
         EdgeForm[None], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlmdwlkUUhfeFSIBAKAkkoYcgNWAoISAgvYqgKAjSFAUbRbBRokikSKgB
sf3wj446jmLvDXt3RsexjRXLOGPXsddzvE9m8uPM7re77917zz337le6ZNWs
lY1SSn2ylBprXCwsEkqF9cI6oacwQxgp9BDKBH+TI2wQmgv5wlrWcoVLhGqh
n7BF2CwcIfQWmvBNK8Y8oVgoEAqFS4W2Qnuhv9BSaCPs5Z62nM3HRgvubCq0
xp7XaoWNwlHYbcV+UQMb84WThQF81wRbe7nTdw/ClxJhk9BB6CxcIWwTOsJL
DrxsxoZ/7xBqhMFCJd91hde13DdMqBK6CEuFoZxZLpwDB/vx23eXE0cLvs+D
x1zW8vCpCF7zOO/4+5KDZs4555uSo17Mq8lrywZ5ygcFcDddmIbf4/CxDTwW
ct9GctmOb4rgcSD+FcONOe0knCBMhO8C9otAR2KvYL0QTkqwuQ1ufWYE+XAu
ZglT4L4KXn3uYrgeLoxKoXFzuZ28DhF2ptC683h0ipqo173tW8/HsedzRzI2
hrNC4jgGrs3tbGE0v48lH87FmBS1Ys7nCuPhcgX8WsPncq4/NsrJ31jOmvM5
/PbeTGLrjb0KfJoKH+ZiAvkohsdB5GsSc/O7GxvWwjy+qYDHSnK3km+s8y5w
7f3JcOn8ua90h8NpcN+VtRGsm9eRcLtaOKtBDKPIUTkxOt4lKWrYv08TToGb
XvDeFL7GwG0f9s3bGuFs9s5PUW/megexlMDreHg7XVjQgMsJ8GYOpsBDLTZc
Cxem0LRtnSEsbMD3ZDgxxxPhfFkKTXaDm6XwUwVfnrtXTGfNerP+yuBvBvyN
hod6nuYTxyT88Z3W3Ux4df+byxn7cjz+XJSifqYS8wLingsXXislr87dKuYZ
42LmQ7FRr7eFcDCH/I3l7KmcnwdfPjubvDqmGnJTAjfLsH2APa9bI9ZMT/Lq
/Lqu3EddP9bCCvI9Dj4uIG5zeV6Kevbecs77uzXYW0Sc3eFvNXeuJN/m2Dpz
/3S/3JWij9T3eo+5+LeOtT0pem4z4nJv6sb6bmzt4nxj4qnmHq+tZ70M352L
M+GnG7l0H3Z9X5aiL3ttH/M2jN5zn3Ht+Q2rf8s9dx1dDs+d4PzKFL27hr3B
7HmtMz5eQly2sQU7vquWe722NUW9uh7cx+vfV8+74GcdMWzlG/voPr2dM9v4
3YXc1RLLENZt2xq0nivJ0w58rpTo3oerrpqXZZHjV4VXUvTp7lo7SN5vdJxZ
1ORj9iWLen3NNrLQsP9PPZtCV7ma35aiVj4QHhdOJF87yd3Xwjcp6uJhoSQL
bT9q37Oo+3YaC7PQ77XCiCx65T3CyCxq+nXhSfjZC2/m+S3hBvJzhzA8i/7R
WuP1KeqjWPOiLLR8v/Bmil5wn1CQBZ8PCO2z4O2Q8EYKH/ajhxLG/eTxZe7z
Xfn4ZN0+h63/3wvZ+yNFD6jjjP8vWPt70E818w3Ae36PejP3mWfw1X66Llwz
a9FNHTZ3sm7O++reflnU/2Hh0xQ6bKa1O1PUqLW6DxtPCXdxpogYXVON/N85
C22Y16uJd5jmQ7Ko503w0oHxAFw5h4fgsIXm96ao7xrObCK316XIr+0NxWYd
vjm/Xwm3puid3wnfp9D+oCz0ZC19Idycoqc6vieI0Vp7iDPfCv+keJ+s0w9T
aNUafCSFDq33Jmj+9hT6trY/Ej4WThIGaO2lFO/ir8JvKfr+g/hn33J05qoU
b1dzzfOy6N2lWdSha/BP4a8Ub8PPwi8p3qEfhZ9SvHPvpqgT+/alcEuKt+UT
fLI/B8mTc2SOn4bna4Sb0MN71k4WPcLxVRHj38IPKf5PtNRafhbviuN7mxjN
2e/w9iLxe708i1pyHWVuDFn05oEaK7J4Y/8VBmfRr1tlUZOuR2vXes1Bd4fR
nnP7AhzeLXye4n+Ne0xnctHD9Z3Fe/a88E6K3vgZ8TiW/wBULhX5
            "]], 
           PolygonBox[CompressedData["
1:eJwt1Pdvj1EUx/F7qUTN2CLVtKWlRdoaVUXxgxi1Z62gGluLFolEIpFI/AP2
3iN+4RciIjax9xZiz8SeCe9Pzvnh9b33eb73Oc+9597zpJaUDyurEkIYiQQc
R88YwnLaariKNeiGQajOf/tpU1GA67jmYzVmCwoZs5S2EdbhEoqQiLW4gcHI
wjb0YPwy2iTk0L9POwwL8QCRe9NoU9CYflOU0e+AbPrnafv6Mzd9Dnr3ELTj
/1u0Q7EAd3EP+UjGW7zDGL0bd3Db56KYgef/0UwNNocj2IcBHmMnLiAdVbEK
VzDQ7+3AIwy3UKEZP7nR1tbPY21Hf4+50nOuXHfVGhnbHnk+h8e47LEU8xx6
cbGCtiM24CvGoQQ/8R65mIDN+IbxmILvnoMcv7cVP3xsKdbjM8ZiMurwrlpo
Q38GTqNttFz3DpbrLK4rPed59DtF27tF+IJXesZjfsBH9PE5PsNzFKKVr2UT
RvuadvmcNBed2T2+Jq2lGHt9DaW+p7s9J8rFKO0Rc0mIlts0/PU9Uj4noSad
RGTQn443/o5in0OTaGdKZ0lnsBX92tFyMR8Z9GtEe3YefuOPx54YrDZO0WYH
qxGd/TPBzrJqoHu0mlGtLEES10dpu/gZUW2e8NyoRp8EqxHldwR+4ZCfBeX0
pMdULO3ZMRRwvTjYGj/hADI95y/w0nOreymMTUW55+giDgar3SLfy9eeW+1p
AwY1whxf40M89blpji34Ly1a7hUzPdo3Rd+SuZoj/cxoZ6nS57o6WG1pzp25
zo92lpSThvRboyLYOw8HqzHVlmqmPv26mEl/NjaiHtezgt274XumvdI3qTn9
5Gh7pW+carlltLmppvUuxVSsCo+lM6C9V0zV4tlg3xbV5H/Qx47s
            "]]}]}, {}, {}, {}, {}}, {
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwt0llXjQEUgOFzFCJTyVAylEpFRZIp4i+4ce8H6N+UypSMjSQpypAiQ5EU
Cg1momRIpjxrcfGsd+/9fWudc/HF7cnbtTcYCASqeMtuDvGFA5zkDa/5zBj7
OcErXlLDJ37zgucMcYZmdviBq9rJfa6w1a1Q75FPqD2EKcF//yVeV7KcOFbQ
4f6MSzzlGL/4yQ+WeWcpFebpWqlhmkgCd+0FbDZX622Os48tbpf1NDPM4cwk
iS63InLMZ/UO7RSzze2a1jLLPIfZrCKCg+7zdC6RJBPFAuZzzvMWtptL9AF1
rLG3aoquJpVue5ouYjELOe92nVxzqfbwkFuku93UDO3VtbqOGBrs0XpBM3U9
k+aABukzDtDPIE/Y4J5NFpvYyDSm0uR5rB7Vci6yxN6oj3nEDXa6tekoI9Qz
wR8+8oFhvjPOEcp4zzu+8ZXDnPr/zf4FDJFgHg==
         "]]}}], 
     GraphicsComplexBox[CompressedData["
1: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
2Bbd98v/AMQZo/w=
      "], {{{
         RGBColor[1, 0.85, 0.85], 
         AbsoluteThickness[1.6], 
         Opacity[1], 
         EdgeForm[None], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
yySfTPHf33H7ndi515azplUOfs3t/ysaTG4=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlOlL10EQh3fVbjuJ6OZnUFoWaYmpqZmYV3bZnUVkWXRpdxD0IggC+0u6
7b6jF1FEVEQURRcddNt90f18mHnxMLPf3f3uzGdnNq2+qbYxKYQwG1LgNeyD
QpgMtyA/htCIbYKT8AIGQzL0Za4f1OOnQ8BPhXm4y+AO1DLehm0D5+AYVEMN
5DBXDhvxq+AU7IfiYP88Ad9huv067IFXMMljuApnYSKMhht+hv6dB7s9J+Uy
Fj7CB+gPlfAW3nhsyvk0tEApLIZWOAAlMAXKCOKZ763VPsZdYT7+Cv0Xf0C0
vZmQhX/NY5vmsR6BCo+5PfPdYQH+KjgDh3UONMBDeO97e8NR+azf6jnclzaM
t2NT4SUURLur6Fq2euzS9La0YGILdgiMx0+BOfjr4TKMiBZLlnTAbwtz8TcE
W3vQ60V7fsJXSMAMGMf8X+xMWAv/4A8s9W+dmS+Bdfh10CnaHq1VzXSLdqbO
kiZaG2FWsD3vPGflOhU+wWe/64EwgbVf/G5UU5WMKyAXf5E0xO8TrRYGwXHo
FW1OOfTE3+XaLYQrypXBTmw2DMM/hF0Cy3VmtDtr8G8//A60XzXbJZrG0lY1
8g1+uVY6LzmaJnWu6UXoyLgImwFPpRvjZmwOVOE/x26GTaohxjXR/HwYg58X
LfY0KFSu0XJt9NrLZrzaa/B6sB5U70mjUVob7SytuQeXXOsS+A0XvHYUYy5r
b/rZ6ukO0WpItVMOj5Qr33ZgR0I6/nmPrQCSoomlt0J3PDSaBhleMy2uubQu
dS2e+F03+7/VI+oNnaFeeBCs99QTenvuBnub9Aapdx77XaqH1At7g71l6gm9
LUV8WxPsjWkXrcfV2+qB6mh3mPA7GM44ES23lVAcLUflpn+olzOjzZV5LfWI
po1q6j+YBI3p
            "]]}]}, {}, {}, {}, {}}, {
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwt0mc7VwEYwOH/v0FFaA+7SaXSUCFUtIuE3vcB+FxoIU2VolI0jPaOtKRC
JVRul17c1+95nnOd8+okHi0rLA0GAoEqJhqO/J8nmbcRQSSTCSWE7UQxgymk
cMs7U/W1zhz7Ds3m1dqibzhkrtVvfOcdO9y6NFcHNE93soF79vV6X3fpbuYw
l7NuPxjiN8P8ZK9n3bpH97OPpSyh3T1Nz+hlWtlob9N++nhLsVunLtZFrCOV
026XuMMa+11dq7f1Ky8psr/SRE1gFSupcasjzhxPCdX2FXpKLxJrjqHJ/ILD
5ufay02eUeB2Ur9wggtEuy3kuvkJhebH+pkeHpHvdlw/UcEC+3zmcdWeoZls
4YE9XT/oIB384hzlzPZsFpvZxBW3ZVqvyzWLrXy0V3LAfE3fc55jHHR7qA0k
mRt1hKdMs9/QZP2j//hLtj2M8LEflgkEyWF6cPz/HQVI51oY
         "]]}}], 
     InsetBox[
      StyleBox[
       Cell["", CellBaseline -> Baseline, TextAlignment -> Left], FontFamily -> 
       "Times", FontSize -> 17, FontWeight -> Plain], {1.2135025062656632`, 
      0.9915756563142661}, {Left, Baseline}, Alignment -> {Left, Top}], 
     StyleBox[
      InsetBox[
       StyleBox[
        Cell[
         TextData[
          Cell[
           BoxData[
            FormBox[
             SubscriptBox["\[Phi]", "2"], TraditionalForm]]]], GeneratedCell -> 
         False, CellAutoOverwrite -> False, CellBaseline -> Baseline, 
         TextAlignment -> Left], FontFamily -> "Times", FontSize -> 18, 
        FontWeight -> Plain], {1.2400271512113608`, 1.0355522971669493`}, {
       Left, Baseline}, Alignment -> {Left, Top}], FontColor -> 
      RGBColor[0.501961, 0.25098, 0]], 
     StyleBox[
      InsetBox[
       StyleBox[
        Cell[
         TextData[
          Cell[
           BoxData[
            FormBox[
             SubscriptBox["\[Phi]", "1"], TraditionalForm]]]], GeneratedCell -> 
         False, CellAutoOverwrite -> False, CellBaseline -> Baseline, 
         TextAlignment -> Left], FontFamily -> "Times", FontSize -> 18, 
        FontWeight -> Plain], {1.7837823725981612`, 0.47485012629522455`}, {
       Left, Baseline}, Alignment -> {Left, Top}], FontColor -> 
      RGBColor[1, 0.501961, 0.25098]]}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
    Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> {{0.5, 1.5}, {1.5, 0.5}}, 
    ImageSize -> 800, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None}, 
    PlotRange -> {{-5.291666666666667, 
     5.291666666666667}, {-5.4222222222222225`, 5.4222222222222225`}}, 
    PlotRangeClipping -> True, PlotRangePadding -> Automatic, 
    Ticks -> {Automatic, Automatic}],FormBox[
    TemplateBox[{"\[ThinSpace]", "\" \"", 
      FormBox[
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"r = 2.54cm\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{"\"r = 3.81cm\""}, "LineLegend", 
        DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0.6, 0.4, 0.2]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm], 
      FormBox[
       TemplateBox[{
        "\"\[CapitalAAcute]rea n\[ATilde]o detect\[AAcute]vel estimada\""}, 
        "LineLegend", DisplayFunction -> (StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0, 0]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0, 0]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
              GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
              GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontWeight -> Bold, 
           GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, Background -> 
          Automatic, StripOnInput -> False]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.85, 0.85]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.3]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], TraditionalForm]}, "RowWithSeparators"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.6677860394984393`*^9, 3.6677860493455234`*^9}, {
  3.667786086146877*^9, 3.667786175867869*^9}, {3.6677862233693376`*^9, 
  3.6677862243225126`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       GrayLevel[0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
+H/WvD2U
        "]]}}, {{}, {}, {
       GrayLevel[0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1: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
4P8BgjrulA==
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
g/8HH6pTEg==
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
/wHLGQQh
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
aeE=
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       Thickness[Large], 
       Opacity[1.], 
       Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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

        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxXk4lHkAB/AZr+SRIjqelR6ZsVTSMku1Wb4/ah1brsxmrcoxtFSmRtlF
JaHkSittJcpDyUo1WSTjGKwtR+QYR+9QpuRKuRpH2OOPz/PR9Tm6x0+BwWA4
/Of/97nZCfX9D1uymsqVErg7LP1aQjRm2Pa4kxEqchPpok1gaF3FdofBZW8N
E5EJEioVX2azAxCQIClbK7KCf8DYl9fZoVCJTdJcIXLB3rL+XcnsWPwUc8RS
TeQNh35Zz0X2dUQq0a2qIgHsTnmtT2T/gVU2yTeXiM7ic5ZmnhmnBEKrRI+x
0GQYa4/YlwZXY1lqYLbz8Rv4wjjV4nB+LQ7brEtr0smE0xOvY1vNX+BxYJf6
ob5smOmPmPF5rXj96LVvuPs9+OducXVqasdMs8d45CohftX0M95q+BJpY1S0
QnA+NtglMLkO3biv47qoIrcAK77fdiXR/TXy9eK0zdQfo0+SnRX/sRd62/zZ
A7ufQK9tsUbi6TfgjCvM7Q0XQeWAbR7PqA+mUecOnXlVhkqHKDFX/A57fnPz
HV8ihk5tOmNN8ACidnv1MEklhotyM97qDoHysLU6yq/CBZWCkmePhlE8ytQ+
eaEaDYM3GJG8EQwKhJW8kr8g2xwh/mH6A5zDOK+GOmrQdEZ37xm3UZjwc546
Ln0KX925k5LNY/AsnLumbvEMsk9tPcVTY6iJ0pMd+7EWX6und5xvHsdtCyK/
H1+HwP28pbK0CYjCv4qMza1HzxvWhKXvJHQ05+VV1Q1gCZv557/9hLnk8i1d
k8/h9DDcwENJjuWprh8SlzfBeVLrF61eOZxt+MVq7Be4ECQ8QT+eAgZ1+TEl
L5DD3incEDGNZ04Vno22zUjTenrWx30GanntRVRvM0J22l1arzeLsfoOe+Vj
LYi/W+U4OjSLsJV2zeZzLQhy3pSVWfUZYi6nfH9KK6w3pZjK4ueQ6abU78hq
Q5/DsIfqwXkQZ27w5tI2CDKJuNpkAWGqCejeJYGpcVLbqZkFeIxzFko6Jaij
noeva/kHM89dWTGCduidU/xzvSODmAQeiGQxOuBgmCooEjGIgcIb27zUDmjw
Nyl/Z8AkNeJ2ph+nE7vqLCxS45lk3rpg6n1FJ/i1NmW+00wyUbLElefehUWy
RvrTfgUSLd89lDPQhW1XXVtiKhVIqcd88Nrgl+B+bNJMMqKIsMjg54ilNPq8
6if2JVPESmKekn+DRmNUgLpOCkUufpMQZXSTRnH2YqPeKxTpTpcG5WTQSHi/
46DfdYqEHTztcvMODdOQ0s7ADIoUTpUvi3tIIzrpfln4A4ps1LKO9a6mwSpP
ismoo4iGp124+jAN1V6j2z4NFPGuvhYYP0JDTjWI9Rop8tBgcJ/SKI06e+XZ
nGaKOIzGms9N0hBIIo486qTI+bP10/0LNMTvBS5V7ygym+V4vEJDilw1dX70
AEXslW/5bF8pRQrnQZzNEEWuHvnoUrhaCv+Qoeq6EYqYmV0yvqcthZoib0vr
JEX4fzeP/K4vxbQ+0/WKnCKijazu5RukkNnfOuo2TRGVpKCGBEMpipLoHPoz
Re66ad6LNJYiIz+0Jn2eInIRL3WeI0WcZLXM8x+K7FxXEBtiJsWJ6cIFXaYi
uRytGDqxVYoDa7hr3iooEtkA15+/XYp/AYApUHE=
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxX0803kcAPDNT/KSsujhddJL2xyVdOyoLqfvl8rD1Txkl3OrPIyOymrK
HaollDDppKsW5UXJSbUckuEznCsP0TAP/UZZyVPKU/PQ6O7+eL/e9MCje4K1
KBQK+z//v8/HVWIecngbo7lSR8TZXhncEmk4w3RDd7KipD5SOrQJLJ2qmb7I
4nKAoY3UBkRV2i9zmaEoVKSoWC11hJDQsa+vM6OQXmKq0TKpF+yt6N+VxkxE
Pycc2WYgDQB2v6rnIvM6itUhW/WlAnA95b82hfknWuGcdnOR9Cx8zjEqsGOV
IYljCncsKg2sTUbcyiNq0BJxWK7n8RvwlbXY4XBhHTrsvCaj2TQbPJ74H9ts
/wI9DuuiHerLBTvzETs+rxW9fvQ6SOh7D0LyN3l7NLejGTl3PHaFBH4zCrbe
bPkSZYwR8VoRhbDOVUTlsLvRfVPvBZBfBMt+2HIlxfc1KjRLMrGjPYY+RW5O
8sdeZLYlhDmw+wmYtS00TDn9BrHGtTR7hVLQO+BSwLPqQ7Zx5w6deVUBVew4
GUf2Du353SdofJEMTOsyKasiBlDcbv8eKq6C4ZL8rLf0IURwXRyP8qvhgl5R
2bNHw6h0lGpy8kINNA7eoMTyRtCgQFLFK/sbVBtjZD9Of0Ce0axXQx210HyG
vveMzyiy4ec9dV/8FILompOKjWPIr1hzjebwDFSf2npKp8ZQbZyZ6thPdfAt
LbPjvHwc3XbA6vvJ9RC2n7dYlTGBpMJvYhPzG6DnDWNiW9AkMjWaU1fXNAJD
Iuef//4T0qRVbuqafA4eD4UWXB01Wir2/pCytBk8J41/Ne5VI09nfqkB8wVc
CJecIB9PITRI5yeUvYA85g7Juphp9MwD/Jpc5JBh/PRsoO8MMihoLyF65RC5
w/XSWrNZNNbQ4aZ7rAWS71a7jw7NoujlrnJ7TQuEe27Iya7+jGQcVuX+9FZw
2pBuq0rWoGwfnX53Rhv0sYe5+gfnEPbkRGwsbwNBNpbV2MyjaH0R6t6lAFvr
1LZTM/OIO86aL+tUQD3xXLim5Quaee7NSBC0g9k57b/WulOwTdiBWAalA9iW
YkGJlIIttN64FIg7wJC/QXenBRXXytqpwaxO2FXv4CBOpuI5p6Kp99AJ/Drn
iqBpKp4oW+TN8+2CBaom8tN+LRyv3j2UN9AFW656tyRUaeFy7lzE6oiXwPnY
bJRqRWBJicUvMYtJ6PNvmNiXRmBHhX164Q0SmuJCaabpBL74nSjO6iYJpbkL
rXqvELg7Uxmel0WC6P32g8HXCRx98LTXzTsk2EaWd4ZlEbh4qnJJ0kMS4lPv
VwgfEHi9sVNiQA0JjMrUhKx6Ahv6uQppwyTo91rdDmwkcEDNtbDkERLURKPM
rInADy0G9+mMklDvpjubJycwezTRXjNJgkARc+RRJ4HPn22Y7p8nQfZe4FX9
jsCzOe7HwVAJ+QY0fvwAgd10bwVuXa6EdNaDJOchAl898tGreKUSQiKHaupH
CGxnd8n6nokSDLR5m1onCcz/Rz7yh7kSps2p3lfUBJauZ3QvXacEldutoz7T
BNZLDW8UWSqhJJXMIz8T+K6P0b1YayVkFUbVZs4RWC3liedYSkhSrFT5fSHw
jjVFiZF2SjgxXTxPp2rjy/HaUROblXBgFWfVWy1trBrghPC3KuFfHA128Q==

        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxX081HcAB/DzFPcT2mX0JMSFm0phovh8Y5RQuOilFDlKyUNJq20IWaV4
kVMWNeHVg80rijp5iNUqJRVOF6IjOUycxw73s+2P9+ttGBTpHaLIYDA8/vP/
5R/Kaw8vPOrwuC5z/dauYAe/TRe5T/meYOXUXzzCdsLQI4F5Pj8Qg2bWLZvZ
XNjMuS1O50dhp3RgfB2bh45rWVpn+KegIXRONmVH407Ew5REfjokLtEeRuwk
ZLe6bznFz0Pr3LlSA3YmUikdk3h+CTz8s3j67AKMm+nlKWyug2V6URTG7mGD
aB/T/Y96CASLfMQF1SjtMFtTMfoGvOV5y4YyHmNG61inxkEhSEGlRCZ4DtZZ
3aqVme+xy+3as7kzr9DleGF5gk4njHf/wFAPeIu0l2GVwY5ixPXd7BgcagZr
UQ19iNuDGJVIx3rPVkhVTiqzMnrRqmwnXN0ngs2lQMOcW31ozQqVpnu1wzra
0janvB8Vscmvnt/5gDRpxMKNw4NIMuKGPTH4CA/WO+VHil8g88wqy+eKYTXA
9T9iOALjSD9t57xuXJWW3nPYKEWtQHtH0+ce2G69oSN3GgXnZYJoj24vksYa
29SDxuDWGBVdvO8zGF9Si9TDx2F35RvuTFYfvrNNaN+dNoGPvlauGp8kuMsZ
OHegaBKTDtv0KfMBHA7vdwq+N4X24cV2KnsH0czQCyht+oqYjANhT27/g4je
z8nDnTJ0zewXJ3QNIThqJae/dxoPM/bYcLSGoeZ+ZY2l0izY8we93MxH0HWi
kERoyNFieaqI8XQEwZPdd2WraHRyfTWzD0vhvORyPnGdw3WmabfxglEUPxvZ
VmXKIA0F3qKSW6NI41jEMgQM4vV9zfvl28agdt9ubbW9ArEvTpSfl4yhRJtR
+K5WgXRXOGZ8iR/HnZyAzUu2K5LuGicLS+MJbHFLiRI2KxLXW1elx6snYGO0
/YWAp0TUU9bX5PImUWvUdVt7QIlYeZoX19GT+HHKbEtjuDLR+XPp/I5LU0ge
09QtmVUmXIb7cdGGrzBf9CiMSlQhU+uFii3Cr+CEMKUXWPPIxMHfr5T+IoNv
sqZ1eN48UmwRkn/aYBrLGjvpv41VSUN7UoNvxTRs4SpzKVMlLvE9CuoBMxgW
xZ0kdmrERDXXr0Y2g2bnSMHlajVSZ+xpeCBjFprtMhNddyYpt3Mel1rL0ZO9
XU/rLZOwrDP7f34tx66QFlFgM5PMisVxZk1yvFnrx78rZJLeNAvtdy1yVL0I
UvdtY5L7klcO69rkuDQbI8vtYZLduWp8ySc5tgbmCjmTTHJDKc7BZ1qOEpP+
VJelFLFtCs1czaaxcjzcNVuPIiviH5h2mNC4WjuqPKBPkfnm82rOcWik+M3+
nGpMkc7kAsmnNTR457UOtayiSKJtp32OHQ2dYWuXIEKRhjyuRNWTxoXKhwpl
jhQp98iPLfemoXQW1SrOFLk2PcLi+dAYMXC1uu1KkSM70uxrdtF44e2/YsSb
Ijpq9RePhdAg+uIPm3woMlema7oilMaDwZDfMndSpH/f/urXh2gUno5cYONP
kapKJQknisYSr/GXZ/dSpDDUO1Z0lEa63skzbYEUSf32OuvXGBrzBuSO5jyK
HP9r+KblCRqx9xPp2BCKBEY62It/ovEv0r5Kuw==
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxX0803kcAPB5tp/QLUdPQrawW6VwsuL7jaMWCoteSpFZKXko6eruEHKV
4kWmXNQJrx7ceUVRE/bh6iolFaaFppEMp5nHhv3c3R/v19sqPDaAr0mhUHz/
8//VH6objiw65va4MXfDtp4IUfDmS9ynAj9EK2i6dJThASMgZBULwtCwnVP7
FgYXnOe9l2QL4tAu5dDEegYPuq/nGZ8VnEaGYs90W0Y83I15lJEqyEZyr3hf
a0Ya5Hf4bD0tKEId8+crLRm5kEmY2iQLKpBvSB7PglECE3bmRRpbGpFDdlkc
Gr8PGyX7qT5/NCGhcHGgrKQeKrvt1taMvUG8FUXLR3Iew6zxcanhITHCJbVy
lfA50M6Z1a3KfY92e19/Nn/2FfS4X1yRYipF9D0/UAxC30LWy6jaCHcZShq4
1T080ga0xSLyMLcPJejEujf5dYBS55Q2LacfdWizxWsGJOB8Ocyq4PYA6siL
VGb7d4FTvINLQfUgqklMf/X87gfIUsYs2qQYRmnW3Kgnlh/Bl/ZOGzS/IJVf
XlUxVwaOQ9yQo1ajiB4bbOJZ1AvXlJX33TYpUYPQZGfr5z5w2XbTVO0xhpgv
UyR7zfohbbyl0yB8HHm3xMWX7/8MlC+ZZQbRE4h99RvubN4AfOeS0rUnaxJ9
DHLkGH6Swz3m0PmDZVNoym27BcEagiPRgx4R96dRl2IJW2ffMLRRzEMrW7+i
hJyDUU/u/AMx/Z/TFVIV6pk9IEvpGYGIuFXMwf4Z9ChnrzPTWAH6PlfXOmjN
IcaCYX9v1ij0nCzFMYZq1O5wuozydBQipnrvqVaTSMoNMso/ogTPpVeKMWce
3aDa9tIXjkH5s9HtdbYU3FwSIKm4PQZZTPtEipCC/b8XvV+xfRz0H7DX1btq
YNfyVPUF+ThUmFBK3zVo4N4a95wvyRNwtyB0y9IdmrhX5GHvQJ+Erd4ZceI2
Tcy5fU15on4SnK13vBDytLBBxgZRIW8KGqx77pgMaWFHP1Z5IzkFP07bbW2J
1samfy5b0H15GtLHjcwq5rQxl+JzQrLxK7AWQxSRqoOnN4g128VfgcmnKi/S
dPHkod+vVv6igqB0I6foIl1cbs8vPmM5A8tbpOTfdD3c3JXWHFQzAy6Io/Kq
0sNeyX0aBqGzoJAkncJsfWyjVxgsUs1Cm2es8Eq9Pm6k+1kdzJkDoy6VjZkP
FVezPSeUTmroy99hbvyWimlOuYM/v1bDbn67JKyNiudksiS7VjW8WRcsuCem
4v4se5N37WqoexFuENRJxQ/kr9zWd6rh8lyCqrCPivcU6gvkn9SwLaxQzJyi
4ptaSW6BM2qosBnM9FpGYJfWyNw1DBJWTURz8s0JvDL5oW23DQnXGsa0hywI
vIClKzrPJCEjeO7nTDqBpekl8k9rSeBdMD7cvprAqS5S1wI2CaYKJ69wTODm
Iq5cz4+Ei7WPNKrcCVztW5xYHUCC1jlUr+NJ4OszozReIAmjlhzHOxwCH92Z
5SraTcKLgJCVowEENtVvunScTwK2kH3YHEjg+Soz25WRJDwc5v+Wu4vAg/sP
1L8+TELpmdiFziEErqvVkjPjSFjqP/Hy3D4Cl0YGJEqOkZBtfupsZxiBM7+9
Qfs1gQTdIbU7i0fgE38pbjmcJCHxQSqZyCdwWKybq+wnEv4FbqJxOw==
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxXk01AkcAHAz46zneO3TNpvKKLKekNssvgmdjHVMUTOkTGZfUSG2Qxgd
lJAn1TBZWcu6ry7F98focMwYMSaM59apzZkks7t/fN6HdviED4espKTk+Z//
D1zrt3aMrEyMvPXjhtPlEPs9Z8SbpExUoZqanb0ccgbH/0YFhUjIqitQ2Mih
Lz/GPnuJQmxw0x9N3yqHfabZTJ95CsHO/cCuMZaDp9NIGvGOQsiYPN+F1XJw
DDqpLJBQiPamCmfeTD9Q81MmmXcpxP2cFbpZpf3w/oooymcrhWg9sIPVsaof
dvqmsZPayIQb83aoQ2IfqPP8wutDycSPRucuRM33wpCmgXXsNxJhRhozb2T3
gmv8yYPRWSSiaM2RAueO11Dv9cJu0ZhEhNK590XWryGbR3OMrVciLlguS7YI
ZKCSs5TnEKBELB4trmzQlsEKQ+IMqVeBjwvkJsHRPWAwmBRB1lKgXN/wN+s3
UqAc8n9C2rmMARHL1a8PSEEn2z589YnvSBWzb6U2dYN1/k9jgoIldDraBaet
u+ESR7OZ3vYN/1Tv4IXxuyD3k+qsdHYRQxIOdtpSukDiRn4zarqIybbLoxbR
r8CMqeWm5vcVp+aMbjgOdEK+pV6IIHkB66c45DOMTnBvpX/aVf4FRV9MtF7U
SKDS+NDL6Z55tOmON5xYKwFLvyscba15VOnrJR3X64BhBzzuYj2HRvoNk2bv
RFD4ccF2gjuL2oPiYN/WdrA96uCdnDeDpXtIk9SqNpi+c1Xq0jKN4lYoo8S3
wjP+gF6YYgofC4vnGEdaoJnpIi7bNIUmnbTIerOXkCIr6fjo+Rk9r9WpiRXP
QeZhYey08h90aIjbtG38GXwONLnU5j+JpSre0dLqZrBbacwF4Qd884zxa3um
EHTcrT5U2LxHqWW4C+d8E2yfCdq+9/Jb3F17J5Tm0Qj5v6RvaJ+ZwMvlU7pg
QQB7YVgSA+OYcbZkWrFQDzu87NQ1ikaxJLm9xa3uCTRa8Qez1ozgz9MWHaLL
j+FmyvprXqFDWJNY5izY+BDMFB5n+gsGUKya2GD+rhbGRLkXwxz6cLb6ZJF6
XDU0PNSULMh7MO5RHmGoXwlzUt5mr7oupAftf7WyuwQG5fTN33wlmJqb/cVf
vRA8LWY5Y4xWVBPecDJNvQebBoq+N+s2Y6blOkKbmQPEg+dtecV1uDsxpmxI
nAH7NKput9FK8br1sUfnZIkwwDA+5VZVgk+LA8XrkhIhJDN3d/22Evyo7zOG
9olwakPqYnlQMe7VdNBR5vMgxeYYK0NQhBoTqtwUVgI0BRvqB1ALUMPc3Zwu
jIWDUVZeIloOfp2tmTwviwSugqaE27LRf5hPbbSPhOirOlWVQXx8KEpwV+FH
QPofk6syBbcx6i8vwXXWKXjeXthzgHoThyp67jgKwyBkj/1TCS0FO0+7+8fJ
jkDcId31tUFXMY3xQ6Ua/zDwo6fjbgmS0HPzsFo6Kxgk90pdA6mXMKPqa7iL
kA3R8y5ZMtp5jI/hbrko84VSg6WAu4LfcclYeSCT5Q0jjAfrONTTOFUL1L1C
T+AzmHvGacdx6Gy57LrMFVQLWzojqByseNIWFih0gpHlc9VKBiy8m0A3zZNZ
QWRQC8/OwAP10nykL2QbgbV/V6UR91iDQUeDaoqfq/O/uaF4KQ==
        "]]}}, {{}, {}, {
       RGBColor[1, 0.5, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxXk01AkAB3BjnPUcr33aZlMZRdYTcpslCZ2MdUxRg5TJ7CsqxHYII0UJ
eVINk5W1rPvqUub7Y3Q4ZowYE8Zz69TmTJLZ3T8+70M9ctKbpaigoODxn/8P
XOu7dkxRiRh568sOp8kQ+z13xIukRFRDVdXWTobcwfG/IScTCdn1hXJrGfoK
YuxylsjEBle90YytMuw3yWF4z5OJgLwPAbVGMng4jqQT78iElMHxWVgtg0PQ
KSWemEy0N1Vu48z0g1KQOsm4Sybu567QyS7rx/srwijvrWSi9eBOZseqfuzy
SQ9IblMkXBm3Q+0T+6DG8Q1vCFUkfjQ8fzFqvhdDGvpWsd9IhClpzKwxoBcu
8acORWeTiOI1Rwu3dbxGg+cL20UjEhFKY98XWr1GDofqENugQFy0WBZv4Umh
nLuUb++vQCweK6nia0mxwoA4S+qV43GhzDg4ugf6g8kRippyyPQMfrN6IwH5
sN8T0q5l+Ecs17w+KIF2jl346pPfQREF3Epr6oZVwU9jvMIlOB7rcjpj1Y0k
lkYzre0b/lTr4IRxu5D3SWVWMruIkIRDnTbkLohdFd+MmiwixWZ51Dz6FUwZ
mq6qvl8xNWd4w2GgEwUWuiG8lAU0TLEUz9I74dZK+7S74guEX4w1X9SKUWV0
+OV0zzysu+MNJtaKYeF7haWlOQ/lvl7SCd0ODNvjhLPVHAz1+JOm74Qo+rhg
M8GehdagKNintR02x+y9UvJnULaXNEmpbsP0nasS55ZpiFqdysnxrXjGHdAN
k0/hsaBkjn60Bc0MZ1H5pikYd1IjG0xfIlVa2vHR4zM8rtWriuTPIXU3N3Jc
+Q/s+XGbto8/w+dA46Q2v0mUKXtFS2qaYbvSiO0k+IA3z+i/tmcJoO1m+aHS
+j0kFuHOrAtN2DETtGPf5bfYU3cnlOreiIJfMja0z0zgcsWUjpM5gYCFYXGM
0zgyz5VOyxcasNPTVk29eBSlKe0trvVP0GjJHcxeM4Kfp807hJcf42bq+mue
oUOoTSzfxtv4EKZy97P9hQMQqSTyzd7VYUyYdynMvg+zNaeK1eJqwH+oIV6Q
9SDuUT5hoFeFOQlns2d9F2hBB16t7C7FoIy2+ZuPGGl5OV/81IrgYT7LGqO3
QlVww9Ek7R42DRR/b9ZpRpbFOkKLkQviwfO2/JJ67EmMKR8SZWK/evXtNmoZ
rlsdf3RemogButFp1+pSPC0JFK1LTkRIVt6ehu2l+KjnPQa7RJzekLZYEVSC
fRr22kpcDlKtjzMzecVQn1BhpzIT0BRsoOdPKYS6mZsZTRCLQ1GWnkJqLr7O
1k5ekEaCLacqYHsO/Ia5lEa7SERf1a6uCuLioTDBTZkbgYw/Jldl8W4j6i9P
3nXmaTxvL+o5SLmJocqeOw6CMITstXsqpqai84ybX5z0KOIO66yvC7qKdPoP
VarcI+BGT8fd4iXDY/OwagYzGOJ7ZS6BlCRkVn8NdxYEIHreOVtKvYD4GPaW
S1IflOkv+d/l/Y4lI6WBLKYXRugP1rEoZzBV50TZJ/AAl87YO049gaFzFdLr
UheoFLV0RlBYqHzSFhYocMTI8vkaBX0m7ibQTPKllogMauHY6rtDN91b8kK6
EcwDu6sM2cf5+h18lVRfF/6/VYWeqQ==
        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAfbaC/n1lCsBgbz494Xr+P5b6wW5r
YwrASrt7mXx4/j+uPgHfWGEKwDIHufUXdv4/3sZ/vzNdCsAEnzOuTnH+Pz7X
fIDpVArAp84oH7xn/j8A+HYCVUQKwO4tEwGXVP4/gzlrBiwjCsB97OfETC7+
P4m8Uw7a4AnAmmmRTLjh/T8+mortDVEJwHlro1CtO/0/Wk/2RsnKCMDxiFwy
o6D8P0gxp+EmRwjAsRAapKMI/D/f6r1LXLgHwBWglgrCY/s/3HsJMBkzB8AS
S7pO4cn6P4PkuuOtogbAtf2chx4j+j/8ebHY5BQGwJ8ahFBmf/k/2+bcR6OQ
BcAhUxL3rub4P2MrboY5AQXASZNfkhVB+D9SRzQ/V3sEwAnvUwt9pvc/E5A/
ORf4A8ARtUwU7w73P32wsAKvaQPAvoIEEn9q9j9NqFZGzuQCwANsY+0P0fU/
xndiWcVUAsDtXIG9vir1PxF0s61exwHAH7ijHXiH9D/DRzl8f0MBwOkubVsy
7/M/HvMkGni0AMBZrfWNCkrzP991RTL4LgDAYUclnuOv8j+ToJczoDz/vw7p
E6PaCPI/DK8uhZQg/r8D9QY43GTxP1JsL8uXF/2/kByhqt7L8D/r2PuvSvj7
v8NL+hH/JfA/UPQxiQzs+r8dLfWtQBbvP1pp8uQS5fm/Q5f+V5jm7T+2jX7f
yMf4v7MQhusrnew/32B0zo29979UwVs6wWnrP1rjNVwCnfa/P4GvcpIc6j95
v4Fsu4H1v7oVDMt41eg/ZUo3cYN59L9l4bbeYKTnP6OEuBT7WvO/W7zf24RZ
5j+ubaOsgU/yv4HOVpSqJOU/XbAYx0xJ8b83tdZs5fXjP1+iWYDHLPC/N6vU
Llyt4j9bhghcokbuv2nYIKzUeuE/nSb19BQH7L/lFOsSiS7gP3kktXal7em/
JBEHan7w3T+d1Yn9vt7nv5yhSe4UkNs/ZuX1wTej5b+qUIhFI/zYP8hSNW/O
jeO/GW5jEzWU1j/PHgxaxEvhvx2qOrS++NM/Ozzvk4Yo3r8+jyOVcmnRPwz2
bEXABdq/g8VR2VMMzj8mbRlyuInVv7SpVC6y3sg/dJ9scOxZ0b+papBwFwnE
P6Rw0vFkfsq/s/veZaKXvj/zHCn5bZbBv2mcjTb1TrQ/Un+aR92Nsr9O7VvD
q2ylP4XwANelQ7K/J1CGGfkWpT+4YWdmbvmxvwCzsG9GwaQ/HkQ0hf9ksb+y
eAUc4RWkP+kIzsIhPLC/FQSvdBa/oj8AJQN8zNSrv9waAiaBEaA/XUvRaN6N
or/XkFARrWyVP8Itnodv+aG/iFalvUfBlD8oEGumAGWhvzoc+mniFZQ/9NQE
5CI8oL+ep6PCF7+SPxe9cL7O1Ju/Zr72c4IRkD904z6r4I2Sv+nXOa2vbIU/
QKjY6AJlkb9OY+MF5RWEPwttciYlPJC/se6MXhq/gj9E7UtD09SLv3gF4A+F
EYA/oRMaMOWNgr8OZgzltGx1PzidTaspPIC/1Xxflh+/cj+fTQJN3NR7v52T
skeKEXA//HPQOe6Ncr9YgrFUv2xlP1UOb2Du1Gu/569Xt5QRYD+yND1NAI5i
v+y6+zPUbFU/HrYWdCSOUr8TLJDy/WxFP7XdtcBsE3K+w8GTOErfZD5yt3YZ

        "]]}}, {{}, {}, {
       RGBColor[0.6, 0.4, 0.2], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVxXlU0wUAB/Ax7knoOIOHqHGkqaSgIUpoD2HJJQIeHCoKwybjcKKBgNwo
1mwCQpnIMfAAx7gjlH1/AxWP3oocQoqDCQOR+xiMa1Z/fN5n3ckoHzqZRCJ5
/uf/ExtSlYl0ChEc5fS19IISeQvCyPAQCuH2IP6XhFglKp1Ueo6coBC2mr/L
jc8rIXmSBLujFEKt0K7S64wSTp0JyUN+FOKOaP2ah6eUICnOkw/upRBjm/VV
8v2USHMI19hkQSESRwYfedgokfXQV/d1rzZxg3HNo1G6DKcbV0Y/OaBNxIVz
vXm7lhGwf9b12XMtYvJykC23aAnfbr0jtaZpEdWrTEu5Wkvo+dDsHtSoSRgW
5VFaQhbRHa+9xcROk9Bzb/KSPltAWn9TH69Eg6hfvnnJ3GIBS3HVXf0GGkSh
abp3WNI83gx007gcdWKdr95c5YACIRsjMx1U1Il9OcezDb9RwIe2bffheDVC
e9x3ReLtOehzdjsYK1QJar2HwbjuHBKrqsh8hiohSFXTSzo9C8+7h1xF/WRC
lRkyurJdjiffn/R/7EcmRoNSmgVfyEGNqeUda1Mh1jRyV8demkErzSEhyVmF
GLKJCLQdn4b5tKVpbB2J8OfJ2RS3afScc7FV2JCIEzSrW338KeQU5dsVOX6E
7pA+97XWFHT4Nhm5a5VQlWvs6A6dhA/zyxf5xsvgmBWXS15MYLhrke+mWESr
+wL1o9UEvGe2ZumMLGD1Zjlvj9E4AhhT/XqyeTjnKw//PDCKBvbFnqdtCtSu
yhzeWDCCnuAYEbt5Dn7CwJ1CxjAC+rYHkQtmsTuFz8o2+4A4pDAfpMjRZKjz
IrbjPehu9mfS4mZAlzZIgksHwU1vNFgMmEbgw5436f4DqIzg3k/ZP4UU0aHc
cksZjlZ92uaxbxL29a+YMnkfjpf4J7dtmoB9hdgmiPcOgZlaQSWuY2B0rb0v
viBFgbV8xkBzBDKDYb0sm17EWdafLxsdgiVV8/TFibco6MhaFkgGcbN435gB
5w3CZHKhPVeGcu/LLhZLXXjqsz1KxO6DSWSI/vbcV/jTXCfgkbsUq8t31gkU
L7HLcTwnc70ETj9ZXGcx2qEzy3Qh1F8j7fGBf3x1RLCOMGE1ZnWg7p6fTY3k
KWIKmdEj/u24d5oTbaz9CKXRf0+GXnyO2kUJvSRfgGmzDfMReUIwbrK/knvV
wSfpBu0tuwZeo4GtFcwyZEyQOsuca/C5d6bJvFEZGk+cCoucrwaptirKVVgK
873bMj6GVqMmVt1MaliKIS1RyzrHKhiq8WOMUAKSlWrCH+IKdJuSrVOoRTjq
3v6dhF2CTo43lce8jpbNty5FzRfj8qGyZpowF+tXhd8m0Yux02yB8c4wFzNi
tf7PHItw6w63xRjZMG6OFojEvyJMMHs2lcpBTJ9TRS87G0OdDjw+MwN77na9
J9OvwSukT11mmI4VESxrK0cOqsd+PGaKVOwddXd+Kf4Bseq9KzOoySjWN90i
Y6dCN0xHVsc8hx0FnhUbHJPRkXA8bw1YKPQke3aL41GQU0O7Qo3G0tm/HMbY
LBxJrfYDk46DulHBY+JwDPIP/5ZLDUbNtq89SVdPYqRp0U7MPAjzBqMYy6s+
0N/EmVpmuqD+bT3B1GcJWoU5O9x6QgX/Ag6bnJk=
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwV0mlQU2cUBuCYhdwbEq6KaMBI1LApipLKGFz4jqmy2GIoo9IKIk11gjNo
QJawxCIyKCgEEUWqjQGsiLghGioKbcANoVoCRENBBXVAFlkMKYlEafrjzHmf
mfPvPYvE0tA9ZBKJFGyd//c3Ced8oueSwRoF7kFxfs7Gwg75PKs1AZLEGhEa
S8yNL2Bb3VMpXFmzCxXJDt6862R1bEQVq0aKelJ3LWdxrRb4SCzqdJSQwXOt
drf619JGgzofKRVX5lgEVj8Lix1Vq9BoxT1DfrjV/fyAD+obiLVF/jy73Oon
wSeuZGnQRKbhRc4wGRbqyMF2uU3oFZKKPL0pMJPfKJzt04qEMceHlGkUWNmQ
4ZSc0oGkSyLL2Q0UaN0S7j2ZoEcOYdqs3UwqjF24RdE+7EZ/MoK6QrZTIXCB
OUiY0YP4Iplo0zkq6CUXb3qkvUHOVP/3jD4qeMydJatTvUPtQS0qvScNqu7j
3d2qPpTrsO2pfywNSCeN3MHT79Ef36Vzj9ylAftBScNvNYOo1jnqxNNpGkQZ
9eTh6mHkFdHr2rfZBg4day3t6RxB5VyJt+qUDXiUvCR+TBtD/fEXwqM6baAq
9RfnYtk4KhMcqvzIo8NCuk+3a85H5KqwZ+ftpYOH/ZmBlGwDWrw1oNJ0mw5s
rf6ii3IC8UrSq6nTdNjNPaV9eNWIhuX7O9kbMQj54BC8vPJftKL5s8sXBQac
fTLZUN0kWlPxdf5QBwbZMapxab0JBTEV0hRHHEIs0DV4x4zaepIT9D/hQPJr
jK978gnx/J2K0WUcAqfxiK1NU2hkfkSPbAKH5APeBmG3BdXLys6H+DGAmdRm
dh/6jLbuVqV5ZzJgldk3pL3/C9rTsO7g26cM2OiVsU1nnkboxgml0t4WUuMC
dM/kJODwBr4yhdkCac7x1V6fSBBPfzPCK7OF5Hy/ccHhGVAoL2gK67cFzWZd
m9sMMiwT9z6K4DPB9KrLVnOMDAp9/9u9yUwg3XoYs86WAhMdH5Pm1TNBIIqh
rcqhQPuG815FdBaIHxw2Pp9FhTREoi0IZsGOFDlrZwEVlNfIpMRiFmyk98kV
82nQWIrH7XvDgsidTJe1F6y9uz0m7Xe3A3+Dg6F5kQ2wOa5qdMAOFovzHW2u
2EBgmW+24x07aJ45LHHxpIP8eqi20GIHZUdpI/UVdFjqyUSv/QnY/0LRQvbG
oEQgb+HnEoBJplqXVmFwKfbLD9F5BMym5hWLqzG4XnHovVJBAKfUOersbQzq
2Fk0vIAAfteGUbwWA70pD70+TUCEKJs10IABUau6dVxFwNXVDpsvtWPws+/9
c++qCQjFVtznTWKQFbdpqdNt6/1FzbFwMwa5lx/fEakJiBaGhhZOYXDW8S/d
3d8JkMsTe8kkHGrMHURBHQHlY/emezEcRmr7Mtc/IuCTPnBdiRMOxvHo2fGP
CaAm/UPRc3CwLBkqqWgiwM4+poXg4sA4O1pv30KAS3D+jnQeDm6ppsmBvwn4
tkGXHLkMh+XVqUe4WgK+j5RAkRcOqwYtc7a1ESCeMtGfrcRBuGMGX9NBQJIP
58x6HxyCTmZqjDoCDrddi0xcbf3TZprI8wUBuVLkds0Xh+3k7JdRegJOMbUf
3q3FYecaRkxRJwHnL4vVHD8c/gOpjwtb
        "]]}}, {{}, {}, {
       RGBColor[1, 0, 0], 
       AbsoluteThickness[1.6], 
       Opacity[1.], 
       LineBox[CompressedData["
1:eJwVyns0lHkcBvBpLuZ9x4y3khqaNdW4lVJsTqOL+TZbLu1qrFPZjWRn64zO
UchlXKaVHK2KkZRs7TRok3STYlP0+9FNbK3B1FgqqkMuucQsouzsH895ns85
z0J5RMBuOo1G8zPl//425qx72Fw6mKbY0Tfqnq0xp0U1z2TsrYitkKGh2Izo
bL7JHSXSFRU7Ua7ywI07NiZHBpfyKiJQR+LOZTyhyWJ3xVR5MopJEdmXOZr8
e0HtSHkW0qgvz5kSm/wsMHKwXIsGi++OZAWZ3O3m/aH8OuJtVj1PLzL5id/x
y2kYjaaOvDjST4cFerqfRUYdeiWJkDm7MmCmW610tnsjkoYf69MkMWBFTYpN
fEILilgcUsSvYUDj5iDXsRgDsgrUpe3iMmHo/E2G7mE7QhzfNv9tTPD5asJX
mtKB3GRK2cazTDAoLtxwSnqDbJle7zldTHCaO0tZpX2Hmn0btAZnFpTeJ9vb
tV0ow2rrU69IFtBOGIW9p96je98nCw/fYQH/QX7NHxW9qNI29PjTaRaEGg30
/rJ+5BLcad+1yQwOHm0s6GgdQEVChav2pBk45b+kfkoaQt3R54NCW82gNPE3
2zzlMCoUHyz5KGLDArZ7u/2Rj8hebcnP3MMGJ8vTPQnpI2jRFu+S8Vts4OsM
F+w0o0iUn1zGnGbDLuFJ3cMrRtSv2tfK30CA/wcrv2Ul/6Ll9Z/tvqgJEOxV
KvuqxtDq4m+y+loISA/XDkdUjyNfrjoiwZoE/ylo6709gZo64mMMP5NA86yN
rnryCYm8bPIkl0jwmSaDt9RNooH5wR3KURLi97uOSNunULWy8Jy/Jwe4cU0T
jn2f0ZZd2iTXVA6snPDwb+7+gnbXrD3w9ikHNrikbNVPTCPJ9eMajaU5JEZ5
65+paFgg6vl6PNAcaHOOrXL5RMPR7DcDokJziM/yHBYfmoFzVNl1gd3mgDfp
mxxm0PFSeeejYDcujL9qM8dH6Vht6H67J54LtJsPw9eaM/Boy8e4edVcEMvC
WSuPMHDz+nMuuWweyB8cMj6fxcRJEhrrKz8ebE9Q8XZkM7HmKp0Wm8eDDewu
lXo+C9cWkFF73/AgZAfXbs15Fi51eEzb52gBXiNWI/ULzTBfYF8u2W8Bi+RZ
1maXzbBPoUe69W0LqJ/Zr7BzZmPVtQBdzpQFFP7KGqguZuMlzlzJay8K9r1Q
N9BdCZwvVjW4ZVBAKCYbl5QS+GLklx/DMimYzczMk5cR+FrxwfcaNQWCAtvQ
M7cIXMVPY5HZFLi1rR8kKwlsGM+UvD5FQbAsnddTQ2CqUnvzmJaCK6usNl1s
JvAvHvfPviujIIBYfl80RuC0qI1LbG6Z/hfw0aAJAmdcenxbVk5BmDQgIGeS
wGes/9Lf+ZMClSq2k04jccVEC5VdRUHR0N3pToLEA5VdqeseUfDJ4LM234bE
xuGw2dGPKWDG/cMwCEg8tbgvv7iOAgvL8AZKSGLOmcFqywYK7PyytieLSOyQ
OD7W8zcF39Xo40OWknhZWeJhoY6CH0IUkOtC4pW9U3O2NlEgnxxnP1tBYun2
GW64hYI4d8Hpde4k9j2Rio16Cg41XQ2JXUVi/3qWzPkFBRkREoerHiTeRk9/
GWqg4CRX9+HdGhLvWM0Jz22l4NwlebnAk8T/AUVzMds=
        "]]}}, 
     GraphicsComplexBox[CompressedData["
1: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
o7LwgDPJ98cEYAXD5L/pO0yq
      "], {{{
         RGBColor[1, 0.85, 0.85], 
         AbsoluteThickness[1.6], 
         Opacity[1], 
         EdgeForm[None], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlmdwlkUUhfeFSIBAKAkkoYcgNWAoISAgvYqgKAjSFAUbRbBRokikSKgB
sf3wj446jmLvDXt3RsexjRXLOGPXsddzvE9m8uPM7re77917zz337le6ZNWs
lY1SSn2ylBprXCwsEkqF9cI6oacwQxgp9BDKBH+TI2wQmgv5wlrWcoVLhGqh
n7BF2CwcIfQWmvBNK8Y8oVgoEAqFS4W2Qnuhv9BSaCPs5Z62nM3HRgvubCq0
xp7XaoWNwlHYbcV+UQMb84WThQF81wRbe7nTdw/ClxJhk9BB6CxcIWwTOsJL
DrxsxoZ/7xBqhMFCJd91hde13DdMqBK6CEuFoZxZLpwDB/vx23eXE0cLvs+D
x1zW8vCpCF7zOO/4+5KDZs4555uSo17Mq8lrywZ5ygcFcDddmIbf4/CxDTwW
ct9GctmOb4rgcSD+FcONOe0knCBMhO8C9otAR2KvYL0QTkqwuQ1ufWYE+XAu
ZglT4L4KXn3uYrgeLoxKoXFzuZ28DhF2ptC683h0ipqo173tW8/HsedzRzI2
hrNC4jgGrs3tbGE0v48lH87FmBS1Ys7nCuPhcgX8WsPncq4/NsrJ31jOmvM5
/PbeTGLrjb0KfJoKH+ZiAvkohsdB5GsSc/O7GxvWwjy+qYDHSnK3km+s8y5w
7f3JcOn8ua90h8NpcN+VtRGsm9eRcLtaOKtBDKPIUTkxOt4lKWrYv08TToGb
XvDeFL7GwG0f9s3bGuFs9s5PUW/megexlMDreHg7XVjQgMsJ8GYOpsBDLTZc
Cxem0LRtnSEsbMD3ZDgxxxPhfFkKTXaDm6XwUwVfnrtXTGfNerP+yuBvBvyN
hod6nuYTxyT88Z3W3Ux4df+byxn7cjz+XJSifqYS8wLingsXXislr87dKuYZ
42LmQ7FRr7eFcDCH/I3l7KmcnwdfPjubvDqmGnJTAjfLsH2APa9bI9ZMT/Lq
/Lqu3EddP9bCCvI9Dj4uIG5zeV6Kevbecs77uzXYW0Sc3eFvNXeuJN/m2Dpz
/3S/3JWij9T3eo+5+LeOtT0pem4z4nJv6sb6bmzt4nxj4qnmHq+tZ70M352L
M+GnG7l0H3Z9X5aiL3ttH/M2jN5zn3Ht+Q2rf8s9dx1dDs+d4PzKFL27hr3B
7HmtMz5eQly2sQU7vquWe722NUW9uh7cx+vfV8+74GcdMWzlG/voPr2dM9v4
3YXc1RLLENZt2xq0nivJ0w58rpTo3oerrpqXZZHjV4VXUvTp7lo7SN5vdJxZ
1ORj9iWLen3NNrLQsP9PPZtCV7ma35aiVj4QHhdOJF87yd3Xwjcp6uJhoSQL
bT9q37Oo+3YaC7PQ77XCiCx65T3CyCxq+nXhSfjZC2/m+S3hBvJzhzA8i/7R
WuP1KeqjWPOiLLR8v/Bmil5wn1CQBZ8PCO2z4O2Q8EYKH/ajhxLG/eTxZe7z
Xfn4ZN0+h63/3wvZ+yNFD6jjjP8vWPt70E818w3Ae36PejP3mWfw1X66Llwz
a9FNHTZ3sm7O++reflnU/2Hh0xQ6bKa1O1PUqLW6DxtPCXdxpogYXVON/N85
C22Y16uJd5jmQ7Ko503w0oHxAFw5h4fgsIXm96ao7xrObCK316XIr+0NxWYd
vjm/Xwm3puid3wnfp9D+oCz0ZC19Idycoqc6vieI0Vp7iDPfCv+keJ+s0w9T
aNUafCSFDq33Jmj+9hT6trY/Ej4WThIGaO2lFO/ir8JvKfr+g/hn33J05qoU
b1dzzfOy6N2lWdSha/BP4a8Ub8PPwi8p3qEfhZ9SvHPvpqgT+/alcEuKt+UT
fLI/B8mTc2SOn4bna4Sb0MN71k4WPcLxVRHj38IPKf5PtNRafhbviuN7mxjN
2e/w9iLxe708i1pyHWVuDFn05oEaK7J4Y/8VBmfRr1tlUZOuR2vXes1Bd4fR
nnP7AhzeLXye4n+Ne0xnctHD9Z3Fe/a88E6K3vgZ8TiW/wBULhX5
            "]], 
           PolygonBox[CompressedData["
1:eJwt1Pdvj1EUx/F7qUTN2CLVtKWlRdoaVUXxgxi1Z62gGluLFolEIpFI/AP2
3iN+4RciIjax9xZiz8SeCe9Pzvnh9b33eb73Oc+9597zpJaUDyurEkIYiQQc
R88YwnLaariKNeiGQajOf/tpU1GA67jmYzVmCwoZs5S2EdbhEoqQiLW4gcHI
wjb0YPwy2iTk0L9POwwL8QCRe9NoU9CYflOU0e+AbPrnafv6Mzd9Dnr3ELTj
/1u0Q7EAd3EP+UjGW7zDGL0bd3Db56KYgef/0UwNNocj2IcBHmMnLiAdVbEK
VzDQ7+3AIwy3UKEZP7nR1tbPY21Hf4+50nOuXHfVGhnbHnk+h8e47LEU8xx6
cbGCtiM24CvGoQQ/8R65mIDN+IbxmILvnoMcv7cVP3xsKdbjM8ZiMurwrlpo
Q38GTqNttFz3DpbrLK4rPed59DtF27tF+IJXesZjfsBH9PE5PsNzFKKVr2UT
RvuadvmcNBed2T2+Jq2lGHt9DaW+p7s9J8rFKO0Rc0mIlts0/PU9Uj4noSad
RGTQn443/o5in0OTaGdKZ0lnsBX92tFyMR8Z9GtEe3YefuOPx54YrDZO0WYH
qxGd/TPBzrJqoHu0mlGtLEES10dpu/gZUW2e8NyoRp8EqxHldwR+4ZCfBeX0
pMdULO3ZMRRwvTjYGj/hADI95y/w0nOreymMTUW55+giDgar3SLfy9eeW+1p
AwY1whxf40M89blpji34Ly1a7hUzPdo3Rd+SuZoj/cxoZ6nS57o6WG1pzp25
zo92lpSThvRboyLYOw8HqzHVlmqmPv26mEl/NjaiHtezgt274XumvdI3qTn9
5Gh7pW+carlltLmppvUuxVSsCo+lM6C9V0zV4tlg3xbV5H/Qx47s
            "]]}]}, {}, {}, {}, {}}, {
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwt0llXjQEUgOFzFCJTyVAylEpFRZIp4i+4ce8H6N+UypSMjSQpypAiQ5EU
Cg1momRIpjxrcfGsd+/9fWudc/HF7cnbtTcYCASqeMtuDvGFA5zkDa/5zBj7
OcErXlLDJ37zgucMcYZmdviBq9rJfa6w1a1Q75FPqD2EKcF//yVeV7KcOFbQ
4f6MSzzlGL/4yQ+WeWcpFebpWqlhmkgCd+0FbDZX622Os48tbpf1NDPM4cwk
iS63InLMZ/UO7RSzze2a1jLLPIfZrCKCg+7zdC6RJBPFAuZzzvMWtptL9AF1
rLG3aoquJpVue5ouYjELOe92nVxzqfbwkFuku93UDO3VtbqOGBrs0XpBM3U9
k+aABukzDtDPIE/Y4J5NFpvYyDSm0uR5rB7Vci6yxN6oj3nEDXa6tekoI9Qz
wR8+8oFhvjPOEcp4zzu+8ZXDnPr/zf4FDJFgHg==
         "]]}}], 
     GraphicsComplexBox[CompressedData["
1:eJxlWHlQ1EcWhmGG4b5mEiCCR9QUixNFQI4NVv9QEK9CMBQopaWouOFIwGth
8QA8kBBOMQQMaIKQKKirWa+wsX5NwCgaOdSyQiAIgygGHImARg5ZM71fT9XI
P9RX73vd73v9Xvf7zbQNCSujJQYGBhGGBgZ//U8oqlt+zcyGvhNWlLjooJwC
X37kvOZdwYh+9fNE+OrZdvTU86V5Y3+Mi7AD76JWB2IbzTkGv9c5cvP5jcOc
Dww+MPiLs26n/FL1mPOBwQdGnMDwTzvXFZrv1ML9geEPDH9g+OczTOAPDH9g
+APDP4TFw/2B4Q8Mf2D497N8cH9g+AODf5blm/OBwde317DzFICdWBxCplaH
LX2sXV9GT2v9LDmG/aD2vyG3AyMeYFY3CrpUq++luEz735Rj2DO0/D+4HRj2
/VrcJSIOYNgNtH/UD3Zg2LMZn8AODHsW24/jYBYfQTyw47yAYQcf+fmU6ef5
7GP7CsgX7DgfYNjBhz/6D3Zg+OvnG/2E+IBh1+8f/XyjH5AvYNhR77ADw456
Bka9Ih79+tXPF+oTeoHdE87vsC4xof/V4kFyuE2V5dFpQcu160gEpZh4d3ul
7f/rUEJhB4b/JeYvSnyT43bvMKZV2n2ecPwdwwTrYX30C9YB9mRYCBg+1WHc
oODrAQdodbeKLRK/qL5QJa9P2Iu1umsJsEabnx6OHzLM10tmfI7D2Pqcj/gR
H85p7PjKpupCGwqdsKPeYJcyO8+3o7ZOXojN2vilXA/qEHpg19eD+gJG/wLr
++vrQ7/Crq8X/Yh4nVm85CfbmMNXjay5XmDUPc4XOrAe+gMY9Q+MegdGvWM9
1Cv2Qz6B9e9b3IfoB2DVr7mt8y/Z0Z3aPh8Vwcd9Az4w+KmMzzHygX7C+rg/
gDdVDqR+/YMZ3w/9ivNC3oCRV9Qn+Dgv8IHBR30jHsSPeIARD/TgPoEe5APz
BvKvny/UH/IFjPzgPgAf+sAHBh96wUf9gg8MPuoZfOQDfGDwUd/go77BBwYf
/Q4+7lfkQz9feA9g19eP+oddXy/6AXZ9fegP2PX16PcL4q9esnD7P/N18+eG
9uYZKV9YvDF/Bk93SLd+T0L3nVpvbt9t98b8mfHvoKZ1tw2pxYYkobFPzvXy
ee/kv4IaBwfFGevd02ICjLge3M+ZF/7CUQT7Omvmz40YaeZ86MP6yDfiwbyF
+HEfQB/631Xle6x1lQ3NTU1/K266Cf3V7VujoTN29PDBXv9/DE2IvTnn3Ys2
mtC9BUW/f+j0QtRMd9EELjCi7oUe6lPvt3Dc0ZRXu828hVQdvTPl8wY5/Tnz
vtz+/hDZ7Jga+iDEgjbnns47cUUiTFXct6r3sqWOXWGdk4plVG0vsa08aEu9
Qh17s3KkNC3hnMGjFkv6duXgUMM+Ga0/6qJeH6+b58ge7yU7AxX0owc+c/zo
S/He8TvvrF2moL+UjKY+2f1SrB+SNX2x1JSGX4i7vTpuRAx5uOfWZvH1PFId
bV/uOCgu360c6Qk0pmk9rWGRZzWiSUpk2eI6KTX279xBjnZzfj/jE/AzGZ9g
v3a2H0E88Sweft/sZ+dLMg51z4qvNeb9Ar0+TC/PxySWDz6PZbL6EajGO8g4
Xjefdb4Qkh7ut6STp4QEH30u5fNAp2JVa+2ACT1xSdIZpbHi9Yv7anZcWuIZ
6YiI9ZDPyYbHYg4JZrx+cX+WN/X4tV8dFasigr3Sj+jmOejB/TXgccs9vUjG
+xXv/Pay37yrvXq5Hf0G+y5mJ1gf9Yt43Vm8BPGhnhHfNyw+3fcO60cB9YJ8
IR+odyfratON5XY0T/VZ/y5PA3qpuzd59ENr6l/mWdC62IT+lu5o6PvKlrqv
DD3bdV9CUb+NrH6pyZ/irHm3zHh/3PNITrwwaEY7Zyyb3+ZvQFH/11n9ix0N
fbOib8uow98dC76M7uN4KsME/VbM1iOIr4DFJ2A/2LGfmu0nIF5PFi/v53zW
zwL0LWT6hFLntW3trrr50eJiTdXdVOs35kk1qyfOx3wJPnDR2MSyhgwFXb9F
PTNkz3NRpTA1DGrXzVsmHQtdQ4yUNONsoft3U/rFOSti+4sHFHTi6rzx7NlP
xd5Fc5bs9VTy983468/He5YoqUdjUPbD0hZRZfeDONtbSVer1IHVizp19+Np
7f0oKtwc1J8sVdKLByrWXa9oJlgP79m8a6o6P0clTTy9KmtjzyPy6doy03o3
Jb3Zds/q5kw1Qbzoz+zBA45uNQpaqvk+cffOQY6LGRax3kdsPRHr1bH1eDzf
sHi4noVMD4GeKKaHID+5LD8E+ZH/pM0PQX43sfySqOMRbV43bGij9959hWpj
Pk8nH0uqaUuTU9ibmZ3P0ynMLkhvxEg0P+q+p3GfOLH7hG4NcDgZbWtJn5WE
LPh+qpSeWWEzeYG97nv5YkN80ttZJtTm2MyPfSpfiHdydlwLjZPy8xsJrg28
JpFSjcuJ8JfT2/l8/j57v8jerSXlww4SPp/AH+eF+9iK3ccE+2Mew/0eye53
Aj34fsD74cDeDyH3bxUunoG63xMWr72RmFBmS33J05JOfymNLPWzy1mk+30A
8/TyLcdrzDOe8fetkb1vHC9g7x+B3ldMr24eZ/4E6yP+ikLr8VvGcprk/tQn
3fkZn0dLKo9IfSUDBO9tBntvCfKtZPkm0AO90PMB0yN8GXtkeCTHnMbJw7sm
1hgKOM8hdp583jf7z9360F4ZHS2X5RZqdN9jJy+vmJZSaEWnHCrouN6j+17J
Dvg4bu55Of/+b3wlX5N1RUa/kqrW7Q+34v4+BSXrdnXrvmcwX7nci7zb/q6U
CpdfnSu1VvL3Av2C+QcY8w34eD9+t15RcXL16+8Jn7R+t22GQmz+cP08lR3/
Psb+mHewvyvbn+u3YPoF6Mf3EfRPY/r591Iu089/D2hm+gXohz/im8Tio5ap
bd21Y6/n8TD/MykPxkScTww7H4p62MbqQQRfyvjkyfyKp64WZjQ279vKiDnj
4ty6P6+07ZdRl+EIpw/ee8yxG8Oc/wnjk16HTTf3pEroUKuv/VblZbEoxHRn
2Bbd98v/AMQZo/w=
      "], {{{
         RGBColor[1, 0.85, 0.85], 
         AbsoluteThickness[1.6], 
         Opacity[1], 
         EdgeForm[None], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
yySfTPHf33H7ndi515azplUOfs3t/ysaTG4=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlOlL10EQh3fVbjuJ6OZnUFoWaYmpqZmYV3bZnUVkWXRpdxD0IggC+0u6
7b6jF1FEVEQURRcddNt90f18mHnxMLPf3f3uzGdnNq2+qbYxKYQwG1LgNeyD
QpgMtyA/htCIbYKT8AIGQzL0Za4f1OOnQ8BPhXm4y+AO1DLehm0D5+AYVEMN
5DBXDhvxq+AU7IfiYP88Ad9huv067IFXMMljuApnYSKMhht+hv6dB7s9J+Uy
Fj7CB+gPlfAW3nhsyvk0tEApLIZWOAAlMAXKCOKZ763VPsZdYT7+Cv0Xf0C0
vZmQhX/NY5vmsR6BCo+5PfPdYQH+KjgDh3UONMBDeO97e8NR+azf6jnclzaM
t2NT4SUURLur6Fq2euzS9La0YGILdgiMx0+BOfjr4TKMiBZLlnTAbwtz8TcE
W3vQ60V7fsJXSMAMGMf8X+xMWAv/4A8s9W+dmS+Bdfh10CnaHq1VzXSLdqbO
kiZaG2FWsD3vPGflOhU+wWe/64EwgbVf/G5UU5WMKyAXf5E0xO8TrRYGwXHo
FW1OOfTE3+XaLYQrypXBTmw2DMM/hF0Cy3VmtDtr8G8//A60XzXbJZrG0lY1
8g1+uVY6LzmaJnWu6UXoyLgImwFPpRvjZmwOVOE/x26GTaohxjXR/HwYg58X
LfY0KFSu0XJt9NrLZrzaa/B6sB5U70mjUVob7SytuQeXXOsS+A0XvHYUYy5r
b/rZ6ukO0WpItVMOj5Qr33ZgR0I6/nmPrQCSoomlt0J3PDSaBhleMy2uubQu
dS2e+F03+7/VI+oNnaFeeBCs99QTenvuBnub9Aapdx77XaqH1At7g71l6gm9
LUV8WxPsjWkXrcfV2+qB6mh3mPA7GM44ES23lVAcLUflpn+olzOjzZV5LfWI
po1q6j+YBI3p
            "]]}]}, {}, {}, {}, {}}, {
        RGBColor[1, 0, 0], 
        AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1:eJwt0mc7VwEYwOH/v0FFaA+7SaXSUCFUtIuE3vcB+FxoIU2VolI0jPaOtKRC
JVRul17c1+95nnOd8+okHi0rLA0GAoEqJhqO/J8nmbcRQSSTCSWE7UQxgymk
cMs7U/W1zhz7Ds3m1dqibzhkrtVvfOcdO9y6NFcHNE93soF79vV6X3fpbuYw
l7NuPxjiN8P8ZK9n3bpH97OPpSyh3T1Nz+hlWtlob9N++nhLsVunLtZFrCOV
026XuMMa+11dq7f1Ky8psr/SRE1gFSupcasjzhxPCdX2FXpKLxJrjqHJ/ILD
5ufay02eUeB2Ur9wggtEuy3kuvkJhebH+pkeHpHvdlw/UcEC+3zmcdWeoZls
4YE9XT/oIB384hzlzPZsFpvZxBW3ZVqvyzWLrXy0V3LAfE3fc55jHHR7qA0k
mRt1hKdMs9/QZP2j//hLtj2M8LEflgkEyWF6cPz/HQVI51oY
         "]]}}], 
     InsetBox[
      BoxData[
       FormBox[
        InterpretationBox[
         Cell["", CellBaseline -> Baseline, TextAlignment -> Left], 
         TextCell["", CellBaseline -> Baseline, TextAlignment -> Left]], 
        TraditionalForm]], {1.2135025062656632`, 0.9915756563142661}, {
      Left, Baseline}, Alignment -> {Left, Top}], 
     StyleBox[
      InsetBox[
       BoxData[
        FormBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
             Cell[
              BoxData[
               FormBox[
                SubscriptBox["\[Phi]", "2"], TraditionalForm]]], 
             TraditionalForm]], GeneratedCell -> False, CellAutoOverwrite -> 
           False, CellBaseline -> Baseline, TextAlignment -> Left], 
          TextCell[
           RawBoxes[
            Cell[
             BoxData[
              FormBox[
               SubscriptBox["\[Phi]", "2"], TraditionalForm]]]], 
           GeneratedCell -> False, CellAutoOverwrite -> False, CellBaseline -> 
           Baseline, TextAlignment -> Left]], TraditionalForm]], {
       1.2400271512113608`, 1.0355522971669493`}, {Left, Baseline}, 
       Alignment -> {Left, Top}], FontColor -> RGBColor[0.501961, 0.25098, 0],
       StripOnInput -> False], 
     StyleBox[
      InsetBox[
       BoxData[
        FormBox[
         InterpretationBox[
          Cell[
           BoxData[
            FormBox[
             Cell[
              BoxData[
               FormBox[
                SubscriptBox["\[Phi]", "1"], TraditionalForm]]], 
             TraditionalForm]], GeneratedCell -> False, CellAutoOverwrite -> 
           False, CellBaseline -> Baseline, TextAlignment -> Left], 
          TextCell[
           RawBoxes[
            Cell[
             BoxData[
              FormBox[
               SubscriptBox["\[Phi]", "1"], TraditionalForm]]]], 
           GeneratedCell -> False, CellAutoOverwrite -> False, CellBaseline -> 
           Baseline, TextAlignment -> Left]], TraditionalForm]], {
       1.7837823725981612`, 0.47485012629522455`}, {Left, Baseline}, 
       Alignment -> {Left, Top}], FontColor -> RGBColor[1, 0.501961, 0.25098],
       StripOnInput -> False]}, AspectRatio -> 
    NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
    AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction -> 
    Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> {{0.5, 1.5}, {1.5, 0.5}}, 
    ImageSize -> 800, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None}, 
    PlotRange -> {{-5.291666666666667, 
     5.291666666666667}, {-5.4222222222222225`, 5.4222222222222225`}}, 
    PlotRangeClipping -> True, PlotRangePadding -> Automatic, 
    Ticks -> {Automatic, Automatic}],FormBox[
    FormBox[
     TemplateBox[{"\[ThinSpace]", "\" \"", 
       TemplateBox[{"\"Porta-Alvos\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"r = 2.54cm\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.5, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{"\"r = 3.81cm\""}, "LineLegend", 
        DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.6, 0.4, 0.2], 
                    Dashing[{Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, 
               GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}},
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6, 0.4, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.4, 0.2666666666666667, 0.13333333333333336`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6, 0.4, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6, 0.4, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.6, 0.4, 0.2], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], "}"}], 
             ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True], 
       TemplateBox[{
        "\"\[CapitalAAcute]rea n\[ATilde]o detect\[AAcute]vel estimada\""}, 
        "LineLegend", DisplayFunction -> (FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0, 0]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {
                    LineBox[{{0, 10}, {15, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    AbsoluteThickness[1], 
                    RGBColor[1, 0, 0]]], 
                    AbsoluteThickness[1.6], 
                    Opacity[1], 
                    RGBColor[1, 0.85, 0.85]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {15, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[-0.023999999999999994`] -> 
                    Baseline)], #}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}},
                GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
               False, GridBoxDividers -> {
                "Columns" -> {{None}}, "Rows" -> {{None}}}, 
               GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
               GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
              "Grid"], Alignment -> Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontWeight -> Bold, 
            GrayLevel[0.3], FontSize -> 14, FontFamily -> "Arial"}, 
           Background -> Automatic, StripOnInput -> False], 
          TraditionalForm]& ), 
        InterpretationFunction :> (RowBox[{"LineLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {},
                     BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Opacity", "[", "1", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.85, 0.85], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6666666666666666, 0.5666666666666667, 
                    0.5666666666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.85, 0.85]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.85, 0.85]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.85, 0.85], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
             RowBox[{"{", #, "}"}], ",", 
             RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Bold", ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.3], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.2], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.3]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.3]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.3], Editable -> False, Selectable -> False], 
                   ",", "14"}], "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"15", ",", "10"}], "}"}]}]}], "]"}]& ), Editable -> 
        True]}, "RowWithSeparators"], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.667821798543102*^9, 3.6680035747986836`*^9, 
  3.668006061527839*^9, 3.6680064028112073`*^9, 3.6680065094764624`*^9, 
  3.6680074794377956`*^9, 3.6682829609030895`*^9, 3.6682847689096603`*^9, 
  3.6682848901616545`*^9, 3.6682849826934605`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6682830517477283`*^9}]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
Magnification:>1.2 Inherited,
FrontEndVersion->"10.3 for Microsoft Windows (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 661, 15, 36, "Input"],
Cell[CellGroupData[{
Cell[1244, 39, 110, 1, 40, "Subsubsection"],
Cell[1357, 42, 109, 1, 35, "Text"],
Cell[1469, 45, 1754, 47, 198, "Input"],
Cell[3226, 94, 102, 1, 35, "Text"],
Cell[3331, 97, 1706, 45, 152, "Input"],
Cell[5040, 144, 98, 1, 35, "Text"],
Cell[5141, 147, 1900, 48, 152, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7078, 200, 115, 1, 40, "Subsubsection"],
Cell[7196, 203, 10909, 287, 2015, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18142, 495, 209, 3, 40, "Subsubsection"],
Cell[18354, 500, 8569, 195, 1141, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26960, 700, 185, 4, 40, "Subsubsection"],
Cell[27148, 706, 1926, 50, 152, "Input"],
Cell[CellGroupData[{
Cell[29099, 760, 4209, 106, 407, "Input"],
Cell[33311, 868, 128673, 2341, 658, "Output"],
Cell[161987, 3211, 174, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162198, 3219, 113, 2, 36, "Input"],
Cell[162314, 3223, 219, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162570, 3232, 144479, 2647, 682, InheritFromParent],
Cell[307052, 5881, 145787, 2694, 682, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452876, 8580, 47739, 960, 489, InheritFromParent],
Cell[500618, 9542, 49068, 987, 489, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[549723, 10534, 33334, 672, 489, "Input"],
Cell[583060, 11208, 34324, 694, 489, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[617421, 11907, 112223, 2045, 652, "Input"],
Cell[729647, 13954, 113275, 2074, 652, "Output"]
}, Open  ]],
Cell[842937, 16031, 70, 1, 36, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
