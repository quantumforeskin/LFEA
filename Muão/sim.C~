#include <iostream>
#include <cmath>
#include <cstdlib>

using namespace std;


int main(){


  int events=0;
  int totalevents=0;
  float Lx=3;//comprimento de S2
  float Ly=0.5;//largura de S2
  float lb=1; //largura do bloco
  float cb=2; //comprimento do bloco


  srand (time(NULL));

  for(int i=0;i<1000;i++){

  float u = ((double) rand() / (RAND_MAX));


  float th = acos(pow(1-u,1/3.));



  ///Gero aleatorios segundo pdf para theta e em distribuicao uniforme para fi e (x,y)

  //Fixo a altura do bloco em z=0



  //Gerar ponto (x,y,0) arbitrario na superficie do bloco
  float x = ((double) rand() / (RAND_MAX))*cb - cb/2;
  float y = ((double) rand() / (RAND_MAX))*lb - lb/2;



  //Gerar angulo fi para obter direccao completa do muao (th,fi)
  float fi = ((double) rand() / (RAND_MAX))*2*M_PI;

  //gero agora vetor unitario segundo a direcao (th,fi)

  float v[2];

  v[0] = cos(fi)*sin(th);
  v[1] = sin(fi)*sin(th);


  float s = -2;//posiçao z de S2

  
  float t=-s/cos(th); // parametro da parametrizacao

  if(x>-Lx/2 && x<Lx/2 && y>-Ly/2 && y<Ly/2)
    events++;


  totalevents++;

  //(th,fi) da-me info sobre a direccao de propagaçao do muao
  //(x,y) da-me info sobre o ponto do bloco que este vai atingir



  
  }


  float ratio=(float)events/totalevents;

  cout << ratio << endl;



  return 0;






}
